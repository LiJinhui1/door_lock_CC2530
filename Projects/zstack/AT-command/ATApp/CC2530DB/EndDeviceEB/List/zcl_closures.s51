///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V10.30.1.6000 for 8051              23/Feb/2022  09:35:04
// Copyright 2004-2018 IAR Systems AB.
// PC-locked license - IAR Embedded Workbench for 8051
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Components\stack\zcl\zcl_closures.c
//    Command line       =  
//        -f C:\Users\Administrator\AppData\Local\Temp\EW40A4.tmp
//        (D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Components\stack\zcl\zcl_closures.c
//        -D WDT_IN_PM1 -D ZIGBEEPRO -D INTER_PAN -D ZIGBEE_FREQ_AGILITY -D
//        DISABLE_GREENPOWER_BASIC_PROXY -D REFLECTOR -D HAL_UART=FALSE -D
//        HAL_LED=FALSE -D HAL_KEY=FALSE -D SECURE=1 -D TC_LINKKEY_JOIN -D
//        NV_INIT -D NV_RESTORE -D POWER_SAVING -D NWK_AUTO_POLL -D xZTOOL_P1
//        -D xMT_TASK -D xMT_APP_FUNC -D xMT_SYS_FUNC -D xMT_ZDO_FUNC -D
//        xMT_ZDO_MGMT -D xMT_APP_CNF_FUNC -D xLEGACY_LCD_DEBUG -D
//        xLCD_SUPPORTED=DEBUG -D MULTICAST_ENABLED=FALSE -D ZCL_READ -D
//        ZCL_WRITE -D ZCL_DISCOVER -D ZCL_BASIC -D ZCL_IDENTIFY -D ZCL_SCENES
//        -D ZCL_GROUPS -D BDB_REPORTING -D ZCL_DOORLOCK -D ZCL_DOORLOCK_EXT -D
//        ISR_KEYINTERRUPT -lC
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\EndDeviceEB\List
//        -lA
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\EndDeviceEB\List
//        --diag_suppress Pe001,Pa010 -o
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\EndDeviceEB\Obj
//        -e --debug --core=plain --dptr=16,1 --data_model=large
//        --code_model=banked --calling_convention=xdata_reentrant
//        --place_constants=data_rom --nr_virtual_regs 16 -f
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.cfg
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3
//        -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg
//        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=10 -DMAX_RTG_ENTRIES=15 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 -DDEFAULT_KEY={0}
//        -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=300 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
//        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000)
//        -f
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg
//        -I
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\
//        -I
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\Source\
//        -I
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\Source\ZCL\
//        -I
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\Source\UserAPI\
//        -I
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\Source\Controller\
//        -I
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\ZMain\TI2530DB\
//        -I
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\hal\include\
//        -I
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\
//        -I
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\mac\include\
//        -I
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\mac\high_level\
//        -I
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\
//        -I
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\
//        -I
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\mt\
//        -I
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\osal\include\
//        -I
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\services\saddr\
//        -I
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\services\sdata\
//        -I
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\af\
//        -I
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\bdb\
//        -I
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\gp\
//        -I
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\nwk\
//        -I
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\sapi\
//        -I
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\sec\
//        -I
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\sys\
//        -I
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\zcl\
//        -I
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\zdo\
//        -I
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\zmac\
//        -I
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\zmac\f8w\
//        -Ohz --require_prototypes)
//    Locale             =  Chinese (Simplified)_CHN.936
//    List file          =  
//        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\EndDeviceEB\List\zcl_closures.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME zcl_closures

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__register_banks", "*"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?V0
        EXTERN ?V2
        EXTERN ?V3
        EXTERN ?V1
        EXTERN ?V4
        EXTERN ?V6
        EXTERN ?V7
        EXTERN ?V5
        EXTERN ?V8
        EXTERN ?V9
        EXTERN ?V10
        EXTERN ?V11
        EXTERN ?V12
        EXTERN ?V13
        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?CALL_IND
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?L_ADD
        EXTERN ?L_MOV_TO_X
        EXTERN ?L_MOV_X
        EXTERN ?L_SHL
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?UC_SWITCH_DENSE
        EXTERN ?UL_SHR
        EXTERN ?US_SWITCH_DENSE
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN ?XSTACK_DISP102_8
        EXTERN __INIT_XDATA_Z

        FUNCTION `??zclClosures_HdlIncoming::?relay`,0203H
        FUNCTION `??zclClosures_ProcessInDoorLock::?relay`,0203H
        FUNCTION `??zclClosures_ProcessInDoorLockCmds::?relay`,0203H
        FUNCTION ??zclClosures_ProcessInDoorLockGetHolidaySchedu,0203H
        FUNCTION `??zclClosures_ProcessInDoorLockGetLogRecordRsp:`,0203H
        FUNCTION `??zclClosures_ProcessInDoorLockGetPINCodeRsp::?`,0203H
        FUNCTION `??zclClosures_ProcessInDoorLockGetRFIDCodeRsp::`,0203H
        FUNCTION ??zclClosures_ProcessInDoorLockGetWeekDaySchedu,0203H
        FUNCTION ??zclClosures_ProcessInDoorLockGetYearDaySchedu,0203H
        FUNCTION ??zclClosures_ProcessInDoorLockOperationEventNo,0203H
        FUNCTION ??zclClosures_ProcessInDoorLockProgrammingEvent,0203H
        FUNCTION ??zclClosures_ProcessInDoorLockSetHolidaySchedu,0203H
        FUNCTION `??zclClosures_ProcessInDoorLockSetPINCode::?rel`,0203H
        FUNCTION `??zclClosures_ProcessInDoorLockSetRFIDCode::?re`,0203H
        FUNCTION `??zclClosures_ProcessInDoorLockSetTemporaryPin:`,0203H
        FUNCTION ??zclClosures_ProcessInDoorLockSetWeekDaySchedu,0203H
        FUNCTION ??zclClosures_ProcessInDoorLockSetYearDaySchedu,0203H
        FUNCTION ??zclClosures_ProcessInDoorLockUnlockWithTimeou,0203H
        PUBLIC `??zclClosures_RegisterDoorLockCmdCallbacks::?re`
        FUNCTION `??zclClosures_RegisterDoorLockCmdCallbacks::?re`,0203H
        PUBLIC `??zclClosures_SendDoorLockClearAllCodesRequest:`
        FUNCTION `??zclClosures_SendDoorLockClearAllCodesRequest:`,0203H
        PUBLIC ??zclClosures_SendDoorLockGetHolidayScheduleRes
        FUNCTION ??zclClosures_SendDoorLockGetHolidayScheduleRes,0203H
        PUBLIC `??zclClosures_SendDoorLockGetLogRecordRequest::`
        FUNCTION `??zclClosures_SendDoorLockGetLogRecordRequest::`,0203H
        PUBLIC `??zclClosures_SendDoorLockGetLogRecordResponse:`
        FUNCTION `??zclClosures_SendDoorLockGetLogRecordResponse:`,0203H
        PUBLIC `??zclClosures_SendDoorLockGetPINCodeResponse::?`
        FUNCTION `??zclClosures_SendDoorLockGetPINCodeResponse::?`,0203H
        PUBLIC `??zclClosures_SendDoorLockGetRFIDCodeResponse::`
        FUNCTION `??zclClosures_SendDoorLockGetRFIDCodeResponse::`,0203H
        PUBLIC ??zclClosures_SendDoorLockGetUserStatusResponse
        FUNCTION ??zclClosures_SendDoorLockGetUserStatusResponse,0203H
        PUBLIC `??zclClosures_SendDoorLockGetUserTypeResponse::`
        FUNCTION `??zclClosures_SendDoorLockGetUserTypeResponse::`,0203H
        PUBLIC ??zclClosures_SendDoorLockGetWeekDayScheduleRes
        FUNCTION ??zclClosures_SendDoorLockGetWeekDayScheduleRes,0203H
        PUBLIC ??zclClosures_SendDoorLockGetYearDayScheduleRes
        FUNCTION ??zclClosures_SendDoorLockGetYearDayScheduleRes,0203H
        PUBLIC ??zclClosures_SendDoorLockHolidayScheduleReques
        FUNCTION ??zclClosures_SendDoorLockHolidayScheduleReques,0203H
        PUBLIC ??zclClosures_SendDoorLockOperationEventNotific
        FUNCTION ??zclClosures_SendDoorLockOperationEventNotific,0203H
        PUBLIC ??zclClosures_SendDoorLockProgrammingEventNotif
        FUNCTION ??zclClosures_SendDoorLockProgrammingEventNotif,0203H
        PUBLIC `??zclClosures_SendDoorLockRequest::?relay`
        FUNCTION `??zclClosures_SendDoorLockRequest::?relay`,0203H
        PUBLIC `??zclClosures_SendDoorLockScheduleRequest::?rel`
        FUNCTION `??zclClosures_SendDoorLockScheduleRequest::?rel`,0203H
        PUBLIC ??zclClosures_SendDoorLockSetHolidayScheduleReq
        FUNCTION ??zclClosures_SendDoorLockSetHolidayScheduleReq,0203H
        PUBLIC `??zclClosures_SendDoorLockSetPINCodeRequest::?r`
        FUNCTION `??zclClosures_SendDoorLockSetPINCodeRequest::?r`,0203H
        PUBLIC `??zclClosures_SendDoorLockSetRFIDCodeRequest::?`
        FUNCTION `??zclClosures_SendDoorLockSetRFIDCodeRequest::?`,0203H
        PUBLIC `??zclClosures_SendDoorLockSetUserStatusRequest:`
        FUNCTION `??zclClosures_SendDoorLockSetUserStatusRequest:`,0203H
        PUBLIC `??zclClosures_SendDoorLockSetUserTypeRequest::?`
        FUNCTION `??zclClosures_SendDoorLockSetUserTypeRequest::?`,0203H
        PUBLIC ??zclClosures_SendDoorLockSetWeekDayScheduleReq
        FUNCTION ??zclClosures_SendDoorLockSetWeekDayScheduleReq,0203H
        PUBLIC ??zclClosures_SendDoorLockSetYearDayScheduleReq
        FUNCTION ??zclClosures_SendDoorLockSetYearDayScheduleReq,0203H
        PUBLIC `??zclClosures_SendDoorLockStatusResponse::?rela`
        FUNCTION `??zclClosures_SendDoorLockStatusResponse::?rela`,0203H
        PUBLIC `??zclClosures_SendDoorLockUnlockTimeoutRequest:`
        FUNCTION `??zclClosures_SendDoorLockUnlockTimeoutRequest:`,0203H
        PUBLIC `??zclClosures_SendDoorLockUserIDRequest::?relay`
        FUNCTION `??zclClosures_SendDoorLockUserIDRequest::?relay`,0203H
        PUBLIC `??zclClosures_SendModifyPinStatusResponse::?rel`
        FUNCTION `??zclClosures_SendModifyPinStatusResponse::?rel`,0203H
        PUBLIC ??zclClosures_SendSetTemporaryPinStatusResponse
        FUNCTION ??zclClosures_SendSetTemporaryPinStatusResponse,0203H
        FUNCTION zclClosures_HdlIncoming,0a1603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        FUNCTION zclClosures_ProcessInDoorLock,0a1203H
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 15, STACK
        FUNCTION zclClosures_ProcessInDoorLockCmds,0a1203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 41, STACK
        FUNCTION zclClosures_ProcessInDoorLockGetHolidayScheduleRsp,080203H
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 27, STACK
        FUNCTION zclClosures_ProcessInDoorLockGetLogRecordRsp,0a1203H
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 35, STACK
        FUNCTION zclClosures_ProcessInDoorLockGetPINCodeRsp,0a1203H
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        FUNCTION zclClosures_ProcessInDoorLockGetRFIDCodeRsp,0a1203H
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        FUNCTION zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp,080203H
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 21, STACK
        FUNCTION zclClosures_ProcessInDoorLockGetYearDayScheduleRsp,080203H
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 28, STACK
        FUNCTION zclClosures_ProcessInDoorLockOperationEventNotification,0a1203H
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 33, STACK
        FUNCTION zclClosures_ProcessInDoorLockProgrammingEventNotification,0a1203H
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 35, STACK
        FUNCTION zclClosures_ProcessInDoorLockSetHolidaySchedule,080203H
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 26, STACK
        FUNCTION zclClosures_ProcessInDoorLockSetPINCode,0a1203H
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        FUNCTION zclClosures_ProcessInDoorLockSetRFIDCode,0a1203H
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        FUNCTION zclClosures_ProcessInDoorLockSetTemporaryPin,0a1203H
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 28, STACK
        FUNCTION zclClosures_ProcessInDoorLockSetWeekDaySchedule,080203H
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        FUNCTION zclClosures_ProcessInDoorLockSetYearDaySchedule,080203H
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 27, STACK
        FUNCTION zclClosures_ProcessInDoorLockUnlockWithTimeout,0a1203H
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC zclClosures_RegisterDoorLockCmdCallbacks
        FUNCTION zclClosures_RegisterDoorLockCmdCallbacks,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC zclClosures_SendDoorLockClearAllCodesRequest
        FUNCTION zclClosures_SendDoorLockClearAllCodesRequest,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC zclClosures_SendDoorLockGetHolidayScheduleResponse
        FUNCTION zclClosures_SendDoorLockGetHolidayScheduleResponse,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 36, STACK
        PUBLIC zclClosures_SendDoorLockGetLogRecordRequest
        FUNCTION zclClosures_SendDoorLockGetLogRecordRequest,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC zclClosures_SendDoorLockGetLogRecordResponse
        FUNCTION zclClosures_SendDoorLockGetLogRecordResponse,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 34, STACK
        PUBLIC zclClosures_SendDoorLockGetPINCodeResponse
        FUNCTION zclClosures_SendDoorLockGetPINCodeResponse,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 32, STACK
        PUBLIC zclClosures_SendDoorLockGetRFIDCodeResponse
        FUNCTION zclClosures_SendDoorLockGetRFIDCodeResponse,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 32, STACK
        PUBLIC zclClosures_SendDoorLockGetUserStatusResponse
        FUNCTION zclClosures_SendDoorLockGetUserStatusResponse,0a1203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC zclClosures_SendDoorLockGetUserTypeResponse
        FUNCTION zclClosures_SendDoorLockGetUserTypeResponse,0a1203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC zclClosures_SendDoorLockGetWeekDayScheduleResponse
        FUNCTION zclClosures_SendDoorLockGetWeekDayScheduleResponse,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 30, STACK
        PUBLIC zclClosures_SendDoorLockGetYearDayScheduleResponse
        FUNCTION zclClosures_SendDoorLockGetYearDayScheduleResponse,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 37, STACK
        PUBLIC zclClosures_SendDoorLockHolidayScheduleRequest
        FUNCTION zclClosures_SendDoorLockHolidayScheduleRequest,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC zclClosures_SendDoorLockOperationEventNotification
        FUNCTION zclClosures_SendDoorLockOperationEventNotification,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 33, STACK
        PUBLIC zclClosures_SendDoorLockProgrammingEventNotification
        FUNCTION zclClosures_SendDoorLockProgrammingEventNotification,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 33, STACK
        PUBLIC zclClosures_SendDoorLockRequest
        FUNCTION zclClosures_SendDoorLockRequest,0a1203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 31, STACK
        PUBLIC zclClosures_SendDoorLockScheduleRequest
        FUNCTION zclClosures_SendDoorLockScheduleRequest,0a1203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 26, STACK
        PUBLIC zclClosures_SendDoorLockSetHolidayScheduleRequest
        FUNCTION zclClosures_SendDoorLockSetHolidayScheduleRequest,0a1203H
        ARGFRAME XSTACK, 10, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 38, STACK
        PUBLIC zclClosures_SendDoorLockSetPINCodeRequest
        FUNCTION zclClosures_SendDoorLockSetPINCodeRequest,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 32, STACK
        PUBLIC zclClosures_SendDoorLockSetRFIDCodeRequest
        FUNCTION zclClosures_SendDoorLockSetRFIDCodeRequest,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 32, STACK
        PUBLIC zclClosures_SendDoorLockSetUserStatusRequest
        FUNCTION zclClosures_SendDoorLockSetUserStatusRequest,0a1203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC zclClosures_SendDoorLockSetUserTypeRequest
        FUNCTION zclClosures_SendDoorLockSetUserTypeRequest,0a1203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC zclClosures_SendDoorLockSetWeekDayScheduleRequest
        FUNCTION zclClosures_SendDoorLockSetWeekDayScheduleRequest,0a1203H
        ARGFRAME XSTACK, 8, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 31, STACK
        PUBLIC zclClosures_SendDoorLockSetYearDayScheduleRequest
        FUNCTION zclClosures_SendDoorLockSetYearDayScheduleRequest,0a1203H
        ARGFRAME XSTACK, 11, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 39, STACK
        PUBLIC zclClosures_SendDoorLockStatusResponse
        FUNCTION zclClosures_SendDoorLockStatusResponse,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC zclClosures_SendDoorLockUnlockTimeoutRequest
        FUNCTION zclClosures_SendDoorLockUnlockTimeoutRequest,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 31, STACK
        PUBLIC zclClosures_SendDoorLockUserIDRequest
        FUNCTION zclClosures_SendDoorLockUserIDRequest,0a1203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC zclClosures_SendModifyPinStatusResponse
        FUNCTION zclClosures_SendModifyPinStatusResponse,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC zclClosures_SendSetTemporaryPinStatusResponse
        FUNCTION zclClosures_SendSetTemporaryPinStatusResponse,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-2
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B SameValue
          CFI A SameValue
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT SameValue
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon1
        
StubAPS_InterPan    SYMBOL "StubAPS_InterPan"
`??StubAPS_InterPan::?relay` SYMBOL "?relay", StubAPS_InterPan
osal_mem_alloc      SYMBOL "osal_mem_alloc"
`??osal_mem_alloc::?relay` SYMBOL "?relay", osal_mem_alloc
osal_mem_free       SYMBOL "osal_mem_free"
`??osal_mem_free::?relay` SYMBOL "?relay", osal_mem_free
zcl_SendCommand     SYMBOL "zcl_SendCommand"
`??zcl_SendCommand::?relay` SYMBOL "?relay", zcl_SendCommand
zcl_registerPlugin  SYMBOL "zcl_registerPlugin"
`??zcl_registerPlugin::?relay` SYMBOL "?relay", zcl_registerPlugin
zclClosures_RegisterDoorLockCmdCallbacks SYMBOL "zclClosures_RegisterDoorLockCmdCallbacks"
`??zclClosures_RegisterDoorLockCmdCallbacks::?re` SYMBOL "?relay", zclClosures_RegisterDoorLockCmdCallbacks
zclClosures_SendDoorLockClearAllCodesRequest SYMBOL "zclClosures_SendDoorLockClearAllCodesRequest"
`??zclClosures_SendDoorLockClearAllCodesRequest:` SYMBOL "?relay", zclClosures_SendDoorLockClearAllCodesRequest
zclClosures_SendDoorLockGetHolidayScheduleResponse SYMBOL "zclClosures_SendDoorLockGetHolidayScheduleResponse"
??zclClosures_SendDoorLockGetHolidayScheduleRes SYMBOL "?relay", zclClosures_SendDoorLockGetHolidayScheduleResponse
zclClosures_SendDoorLockGetLogRecordRequest SYMBOL "zclClosures_SendDoorLockGetLogRecordRequest"
`??zclClosures_SendDoorLockGetLogRecordRequest::` SYMBOL "?relay", zclClosures_SendDoorLockGetLogRecordRequest
zclClosures_SendDoorLockGetLogRecordResponse SYMBOL "zclClosures_SendDoorLockGetLogRecordResponse"
`??zclClosures_SendDoorLockGetLogRecordResponse:` SYMBOL "?relay", zclClosures_SendDoorLockGetLogRecordResponse
zclClosures_SendDoorLockGetPINCodeResponse SYMBOL "zclClosures_SendDoorLockGetPINCodeResponse"
`??zclClosures_SendDoorLockGetPINCodeResponse::?` SYMBOL "?relay", zclClosures_SendDoorLockGetPINCodeResponse
zclClosures_SendDoorLockGetRFIDCodeResponse SYMBOL "zclClosures_SendDoorLockGetRFIDCodeResponse"
`??zclClosures_SendDoorLockGetRFIDCodeResponse::` SYMBOL "?relay", zclClosures_SendDoorLockGetRFIDCodeResponse
zclClosures_SendDoorLockGetUserStatusResponse SYMBOL "zclClosures_SendDoorLockGetUserStatusResponse"
??zclClosures_SendDoorLockGetUserStatusResponse SYMBOL "?relay", zclClosures_SendDoorLockGetUserStatusResponse
zclClosures_SendDoorLockGetUserTypeResponse SYMBOL "zclClosures_SendDoorLockGetUserTypeResponse"
`??zclClosures_SendDoorLockGetUserTypeResponse::` SYMBOL "?relay", zclClosures_SendDoorLockGetUserTypeResponse
zclClosures_SendDoorLockGetWeekDayScheduleResponse SYMBOL "zclClosures_SendDoorLockGetWeekDayScheduleResponse"
??zclClosures_SendDoorLockGetWeekDayScheduleRes SYMBOL "?relay", zclClosures_SendDoorLockGetWeekDayScheduleResponse
zclClosures_SendDoorLockGetYearDayScheduleResponse SYMBOL "zclClosures_SendDoorLockGetYearDayScheduleResponse"
??zclClosures_SendDoorLockGetYearDayScheduleRes SYMBOL "?relay", zclClosures_SendDoorLockGetYearDayScheduleResponse
zclClosures_SendDoorLockHolidayScheduleRequest SYMBOL "zclClosures_SendDoorLockHolidayScheduleRequest"
??zclClosures_SendDoorLockHolidayScheduleReques SYMBOL "?relay", zclClosures_SendDoorLockHolidayScheduleRequest
zclClosures_SendDoorLockOperationEventNotification SYMBOL "zclClosures_SendDoorLockOperationEventNotification"
??zclClosures_SendDoorLockOperationEventNotific SYMBOL "?relay", zclClosures_SendDoorLockOperationEventNotification
zclClosures_SendDoorLockProgrammingEventNotification SYMBOL "zclClosures_SendDoorLockProgrammingEventNotification"
??zclClosures_SendDoorLockProgrammingEventNotif SYMBOL "?relay", zclClosures_SendDoorLockProgrammingEventNotification
zclClosures_SendDoorLockRequest SYMBOL "zclClosures_SendDoorLockRequest"
`??zclClosures_SendDoorLockRequest::?relay` SYMBOL "?relay", zclClosures_SendDoorLockRequest
zclClosures_SendDoorLockScheduleRequest SYMBOL "zclClosures_SendDoorLockScheduleRequest"
`??zclClosures_SendDoorLockScheduleRequest::?rel` SYMBOL "?relay", zclClosures_SendDoorLockScheduleRequest
zclClosures_SendDoorLockSetHolidayScheduleRequest SYMBOL "zclClosures_SendDoorLockSetHolidayScheduleRequest"
??zclClosures_SendDoorLockSetHolidayScheduleReq SYMBOL "?relay", zclClosures_SendDoorLockSetHolidayScheduleRequest
zclClosures_SendDoorLockSetPINCodeRequest SYMBOL "zclClosures_SendDoorLockSetPINCodeRequest"
`??zclClosures_SendDoorLockSetPINCodeRequest::?r` SYMBOL "?relay", zclClosures_SendDoorLockSetPINCodeRequest
zclClosures_SendDoorLockSetRFIDCodeRequest SYMBOL "zclClosures_SendDoorLockSetRFIDCodeRequest"
`??zclClosures_SendDoorLockSetRFIDCodeRequest::?` SYMBOL "?relay", zclClosures_SendDoorLockSetRFIDCodeRequest
zclClosures_SendDoorLockSetUserStatusRequest SYMBOL "zclClosures_SendDoorLockSetUserStatusRequest"
`??zclClosures_SendDoorLockSetUserStatusRequest:` SYMBOL "?relay", zclClosures_SendDoorLockSetUserStatusRequest
zclClosures_SendDoorLockSetUserTypeRequest SYMBOL "zclClosures_SendDoorLockSetUserTypeRequest"
`??zclClosures_SendDoorLockSetUserTypeRequest::?` SYMBOL "?relay", zclClosures_SendDoorLockSetUserTypeRequest
zclClosures_SendDoorLockSetWeekDayScheduleRequest SYMBOL "zclClosures_SendDoorLockSetWeekDayScheduleRequest"
??zclClosures_SendDoorLockSetWeekDayScheduleReq SYMBOL "?relay", zclClosures_SendDoorLockSetWeekDayScheduleRequest
zclClosures_SendDoorLockSetYearDayScheduleRequest SYMBOL "zclClosures_SendDoorLockSetYearDayScheduleRequest"
??zclClosures_SendDoorLockSetYearDayScheduleReq SYMBOL "?relay", zclClosures_SendDoorLockSetYearDayScheduleRequest
zclClosures_SendDoorLockStatusResponse SYMBOL "zclClosures_SendDoorLockStatusResponse"
`??zclClosures_SendDoorLockStatusResponse::?rela` SYMBOL "?relay", zclClosures_SendDoorLockStatusResponse
zclClosures_SendDoorLockUnlockTimeoutRequest SYMBOL "zclClosures_SendDoorLockUnlockTimeoutRequest"
`??zclClosures_SendDoorLockUnlockTimeoutRequest:` SYMBOL "?relay", zclClosures_SendDoorLockUnlockTimeoutRequest
zclClosures_SendDoorLockUserIDRequest SYMBOL "zclClosures_SendDoorLockUserIDRequest"
`??zclClosures_SendDoorLockUserIDRequest::?relay` SYMBOL "?relay", zclClosures_SendDoorLockUserIDRequest
zclClosures_SendModifyPinStatusResponse SYMBOL "zclClosures_SendModifyPinStatusResponse"
`??zclClosures_SendModifyPinStatusResponse::?rel` SYMBOL "?relay", zclClosures_SendModifyPinStatusResponse
zclClosures_SendSetTemporaryPinStatusResponse SYMBOL "zclClosures_SendSetTemporaryPinStatusResponse"
??zclClosures_SendSetTemporaryPinStatusResponse SYMBOL "?relay", zclClosures_SendSetTemporaryPinStatusResponse

        EXTERN `??StubAPS_InterPan::?relay`
        FUNCTION `??StubAPS_InterPan::?relay`,00H
        EXTERN `??osal_mem_alloc::?relay`
        FUNCTION `??osal_mem_alloc::?relay`,00H
        EXTERN `??osal_mem_free::?relay`
        FUNCTION `??osal_mem_free::?relay`,00H
        EXTERN `??zcl_SendCommand::?relay`
        FUNCTION `??zcl_SendCommand::?relay`,00H
        EXTERN `??zcl_registerPlugin::?relay`
        FUNCTION `??zcl_registerPlugin::?relay`,00H
        EXTERN StubAPS_InterPan
        FUNCTION StubAPS_InterPan,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_alloc
        FUNCTION osal_mem_alloc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_free
        FUNCTION osal_mem_free,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zcl_SendCommand
        FUNCTION zcl_SendCommand,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zcl_registerPlugin
        FUNCTION zcl_registerPlugin,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC

// D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Components\stack\zcl\zcl_closures.c
//    1 /**************************************************************************************************
//    2   Filename:       zcl_closures.c
//    3   Revised:        $Date: 2013-10-16 16:38:58 -0700 (Wed, 16 Oct 2013) $
//    4   Revision:       $Revision: 35701 $
//    5 
//    6   Description:    Zigbee Cluster Library - Closures.
//    7 
//    8 
//    9   Copyright 2006-2013 Texas Instruments Incorporated. All rights reserved.
//   10 
//   11   IMPORTANT: Your use of this Software is limited to those specific rights
//   12   granted under the terms of a software license agreement between the user
//   13   who downloaded the software, his/her employer (which must be your employer)
//   14   and Texas Instruments Incorporated (the "License").  You may not use this
//   15   Software unless you agree to abide by the terms of the License. The License
//   16   limits your use, and you acknowledge, that the Software may not be modified,
//   17   copied or distributed unless embedded on a Texas Instruments microcontroller
//   18   or used solely and exclusively in conjunction with a Texas Instruments radio
//   19   frequency transceiver, which is integrated into your product.  Other than for
//   20   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   21   works of, modify, distribute, perform, display or sell this Software and/or
//   22   its documentation for any purpose.
//   23 
//   24   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   25   PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   26   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   27   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   28   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   29   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   30   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   31   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   32   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   33   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   34   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   35 
//   36   Should you have any questions regarding your right to use this Software,
//   37   contact Texas Instruments Incorporated at www.TI.com.
//   38 **************************************************************************************************/
//   39 
//   40 
//   41 /*********************************************************************
//   42  * INCLUDES
//   43  */
//   44 #include "zcl.h"
//   45 #include "zcl_general.h"
//   46 #include "zcl_closures.h"
//   47 #include "zcl_doorlock.h"
//   48 #include "AT_doorlock.h"
//   49 
//   50 #if defined ( INTER_PAN )
//   51   #include "stub_aps.h"
//   52 #endif
//   53 
//   54 /*********************************************************************
//   55  * MACROS
//   56  */
//   57 
//   58 /*********************************************************************
//   59  * CONSTANTS
//   60  */
//   61 
//   62 /*********************************************************************
//   63  * TYPEDEFS
//   64  */
//   65 #ifdef ZCL_DOORLOCK
//   66 typedef struct zclClosuresDoorLockCBRec
//   67 {
//   68   struct zclClosuresDoorLockCBRec     *next;
//   69   uint8                                endpoint; // Used to link it into the endpoint descriptor
//   70   zclClosures_DoorLockAppCallbacks_t  *CBs;     // Pointer to Callback function
//   71 } zclClosuresDoorLockCBRec_t;
//   72 #endif
//   73 
//   74 #ifdef ZCL_WINDOWCOVERING
//   75 typedef struct zclClosuresWindowCoveringCBRec
//   76 {
//   77   struct zclClosuresWindowCoveringCBRec     *next;
//   78   uint8                                     endpoint; // Used to link it into the endpoint descriptor
//   79   zclClosures_WindowCoveringAppCallbacks_t  *CBs;     // Pointer to Callback function
//   80 } zclClosuresWindowCoveringCBRec_t;
//   81 #endif
//   82 
//   83 /*********************************************************************
//   84  * GLOBAL VARIABLES
//   85  */
//   86 
//   87 /*********************************************************************
//   88  * GLOBAL FUNCTIONS
//   89  */
//   90 
//   91 /*********************************************************************
//   92  * LOCAL VARIABLES
//   93  */
//   94 #ifdef ZCL_DOORLOCK

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//   95 static zclClosuresDoorLockCBRec_t *zclClosuresDoorLockCBs = (zclClosuresDoorLockCBRec_t *)NULL;
zclClosuresDoorLockCBs:
        DS 2
        REQUIRE __INIT_XDATA_Z
//   96 #endif
//   97 
//   98 #ifdef ZCL_WINDOWCOVERING
//   99 static zclClosuresWindowCoveringCBRec_t *zclClosuresWindowCoveringCBs = (zclClosuresWindowCoveringCBRec_t *)NULL;
//  100 #endif
//  101 
//  102 #ifdef ZCL_DOORLOCK

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  103 static uint8 zclDoorLockPluginRegisted = FALSE;
zclDoorLockPluginRegisted:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  104 #endif
//  105 
//  106 #ifdef ZCL_WINDOWCOVERING
//  107 static uint8 zclWindowCoveringPluginRegisted = FALSE;
//  108 #endif
//  109 
//  110 /*********************************************************************
//  111  * LOCAL FUNCTIONS
//  112  */
//  113 #if defined(ZCL_DOORLOCK) || defined(ZCL_WINDOWCOVERING)
//  114 static ZStatus_t zclClosures_HdlIncoming( zclIncoming_t *pInMsg );
//  115 static ZStatus_t zclClosures_HdlInSpecificCommands( zclIncoming_t *pInMsg );
//  116 #endif
//  117 
//  118 #ifdef ZCL_DOORLOCK
//  119 static zclClosures_DoorLockAppCallbacks_t *zclClosures_FindDoorLockCallbacks( uint8 endpoint );
//  120 static ZStatus_t zclClosures_ProcessInDoorLockCmds( zclIncoming_t *pInMsg,
//  121                                                     zclClosures_DoorLockAppCallbacks_t *pCBs );
//  122 static ZStatus_t zclClosures_ProcessInDoorLock( zclIncoming_t *pInMsg,
//  123                                                 zclClosures_DoorLockAppCallbacks_t *pCBs );
//  124 #ifdef ZCL_DOORLOCK_EXT
//  125 static ZStatus_t zclClosures_ProcessInDoorLockUnlockWithTimeout( zclIncoming_t *pInMsg,
//  126                                                                  zclClosures_DoorLockAppCallbacks_t *pCBs );
//  127 static ZStatus_t zclClosures_ProcessInDoorLockGetLogRecord( zclIncoming_t *pInMsg,
//  128                                                             zclClosures_DoorLockAppCallbacks_t *pCBs );
//  129 static ZStatus_t zclClosures_ProcessInDoorLockSetPINCode( zclIncoming_t *pInMsg,
//  130                                                           zclClosures_DoorLockAppCallbacks_t *pCBs );
//  131 static ZStatus_t zclClosures_ProcessInDoorLockGetPINCode( zclIncoming_t *pInMsg,
//  132                                                           zclClosures_DoorLockAppCallbacks_t *pCBs );
//  133 static ZStatus_t zclClosures_ProcessInDoorLockClearPINCode( zclIncoming_t *pInMsg,
//  134                                                             zclClosures_DoorLockAppCallbacks_t *pCBs );
//  135 static ZStatus_t zclClosures_ProcessInDoorLockClearAllPINCodes( zclIncoming_t *pInMsg,
//  136                                                                 zclClosures_DoorLockAppCallbacks_t *pCBs );
//  137 static ZStatus_t zclClosures_ProcessInDoorLockSetUserStatus( zclIncoming_t *pInMsg,
//  138                                                              zclClosures_DoorLockAppCallbacks_t *pCBs );
//  139 static ZStatus_t zclClosures_ProcessInDoorLockGetUserStatus( zclIncoming_t *pInMsg,
//  140                                                              zclClosures_DoorLockAppCallbacks_t *pCBs );
//  141 static ZStatus_t zclClosures_ProcessInDoorLockSetWeekDaySchedule( zclIncoming_t *pInMsg,
//  142                                                                   zclClosures_DoorLockAppCallbacks_t *pCBs );
//  143 static ZStatus_t zclClosures_ProcessInDoorLockGetWeekDaySchedule( zclIncoming_t *pInMsg,
//  144                                                                   zclClosures_DoorLockAppCallbacks_t *pCBs );
//  145 static ZStatus_t zclClosures_ProcessInDoorLockClearWeekDaySchedule( zclIncoming_t *pInMsg,
//  146                                                                     zclClosures_DoorLockAppCallbacks_t *pCBs );
//  147 static ZStatus_t zclClosures_ProcessInDoorLockSetYearDaySchedule( zclIncoming_t *pInMsg,
//  148                                                                   zclClosures_DoorLockAppCallbacks_t *pCBs );
//  149 static ZStatus_t zclClosures_ProcessInDoorLockGetYearDaySchedule( zclIncoming_t *pInMsg,
//  150                                                                   zclClosures_DoorLockAppCallbacks_t *pCBs );
//  151 static ZStatus_t zclClosures_ProcessInDoorLockClearYearDaySchedule( zclIncoming_t *pInMsg,
//  152                                                                     zclClosures_DoorLockAppCallbacks_t *pCBs );
//  153 static ZStatus_t zclClosures_ProcessInDoorLockSetHolidaySchedule( zclIncoming_t *pInMsg,
//  154                                                                   zclClosures_DoorLockAppCallbacks_t *pCBs );
//  155 static ZStatus_t zclClosures_ProcessInDoorLockGetHolidaySchedule( zclIncoming_t *pInMsg,
//  156                                                                   zclClosures_DoorLockAppCallbacks_t *pCBs );
//  157 static ZStatus_t zclClosures_ProcessInDoorLockClearHolidaySchedule( zclIncoming_t *pInMsg,
//  158                                                                     zclClosures_DoorLockAppCallbacks_t *pCBs );
//  159 static ZStatus_t zclClosures_ProcessInDoorLockSetUserType( zclIncoming_t *pInMsg,
//  160                                                            zclClosures_DoorLockAppCallbacks_t *pCBs );
//  161 static ZStatus_t zclClosures_ProcessInDoorLockGetUserType( zclIncoming_t *pInMsg,
//  162                                                            zclClosures_DoorLockAppCallbacks_t *pCBs );
//  163 static ZStatus_t zclClosures_ProcessInDoorLockSetRFIDCode( zclIncoming_t *pInMsg,
//  164                                                            zclClosures_DoorLockAppCallbacks_t *pCBs );
//  165 static ZStatus_t zclClosures_ProcessInDoorLockGetRFIDCode( zclIncoming_t *pInMsg,
//  166                                                            zclClosures_DoorLockAppCallbacks_t *pCBs );
//  167 static ZStatus_t zclClosures_ProcessInDoorLockClearRFIDCode( zclIncoming_t *pInMsg,
//  168                                                              zclClosures_DoorLockAppCallbacks_t *pCBs );
//  169 static ZStatus_t zclClosures_ProcessInDoorLockClearAllRFIDCodes( zclIncoming_t *pInMsg,
//  170                                                                  zclClosures_DoorLockAppCallbacks_t *pCBs );
//  171 static ZStatus_t zclClosures_ProcessInDoorLockSetTemporaryPin( zclIncoming_t *pInMsg,
//  172                                                                zclClosures_DoorLockAppCallbacks_t *pCBs );
//  173 static ZStatus_t zclClosures_ModifyPin( zclIncoming_t *pInMsg,
//  174                                         zclClosures_DoorLockAppCallbacks_t *pCBs );
//  175 static ZStatus_t zclClosures_ProcessInDoorLockUnlockWithTimeoutRsp( zclIncoming_t *pInMsg,
//  176                                                                     zclClosures_DoorLockAppCallbacks_t *pCBs );
//  177 static ZStatus_t zclClosures_ProcessInDoorLockGetLogRecordRsp( zclIncoming_t *pInMsg,
//  178                                                                zclClosures_DoorLockAppCallbacks_t *pCBs );
//  179 static ZStatus_t zclClosures_ProcessInDoorLockSetPINCodeRsp( zclIncoming_t *pInMsg,
//  180                                                              zclClosures_DoorLockAppCallbacks_t *pCBs );
//  181 static ZStatus_t zclClosures_ProcessInDoorLockGetPINCodeRsp( zclIncoming_t *pInMsg,
//  182                                                              zclClosures_DoorLockAppCallbacks_t *pCBs );
//  183 static ZStatus_t zclClosures_ProcessInDoorLockClearPINCodeRsp( zclIncoming_t *pInMsg,
//  184                                                                zclClosures_DoorLockAppCallbacks_t *pCBs );
//  185 static ZStatus_t zclClosures_ProcessInDoorLockClearAllPINCodesRsp( zclIncoming_t *pInMsg,
//  186                                                                    zclClosures_DoorLockAppCallbacks_t *pCBs );
//  187 static ZStatus_t zclClosures_ProcessInDoorLockSetUserStatusRsp( zclIncoming_t *pInMsg,
//  188                                                                 zclClosures_DoorLockAppCallbacks_t *pCBs );
//  189 static ZStatus_t zclClosures_ProcessInDoorLockGetUserStatusRsp( zclIncoming_t *pInMsg,
//  190                                                                 zclClosures_DoorLockAppCallbacks_t *pCBs );
//  191 static ZStatus_t zclClosures_ProcessInDoorLockSetWeekDayScheduleRsp( zclIncoming_t *pInMsg,
//  192                                                                      zclClosures_DoorLockAppCallbacks_t *pCBs );
//  193 static ZStatus_t zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp( zclIncoming_t *pInMsg,
//  194                                                                      zclClosures_DoorLockAppCallbacks_t *pCBs );
//  195 static ZStatus_t zclClosures_ProcessInDoorLockClearWeekDayScheduleRsp( zclIncoming_t *pInMsg,
//  196                                                                        zclClosures_DoorLockAppCallbacks_t *pCBs );
//  197 static ZStatus_t zclClosures_ProcessInDoorLockSetYearDayScheduleRsp( zclIncoming_t *pInMsg,
//  198                                                                      zclClosures_DoorLockAppCallbacks_t *pCBs );
//  199 static ZStatus_t zclClosures_ProcessInDoorLockGetYearDayScheduleRsp( zclIncoming_t *pInMsg,
//  200                                                                      zclClosures_DoorLockAppCallbacks_t *pCBs );
//  201 static ZStatus_t zclClosures_ProcessInDoorLockClearYearDayScheduleRsp( zclIncoming_t *pInMsg,
//  202                                                                        zclClosures_DoorLockAppCallbacks_t *pCBs );
//  203 static ZStatus_t zclClosures_ProcessInDoorLockSetHolidayScheduleRsp( zclIncoming_t *pInMsg,
//  204                                                                      zclClosures_DoorLockAppCallbacks_t *pCBs );
//  205 static ZStatus_t zclClosures_ProcessInDoorLockGetHolidayScheduleRsp( zclIncoming_t *pInMsg,
//  206                                                                      zclClosures_DoorLockAppCallbacks_t *pCBs );
//  207 static ZStatus_t zclClosures_ProcessInDoorLockClearHolidayScheduleRsp( zclIncoming_t *pInMsg,
//  208                                                                        zclClosures_DoorLockAppCallbacks_t *pCBs );
//  209 static ZStatus_t zclClosures_ProcessInDoorLockSetUserTypeRsp( zclIncoming_t *pInMsg,
//  210                                                               zclClosures_DoorLockAppCallbacks_t *pCBs );
//  211 static ZStatus_t zclClosures_ProcessInDoorLockGetUserTypeRsp( zclIncoming_t *pInMsg,
//  212                                                               zclClosures_DoorLockAppCallbacks_t *pCBs );
//  213 static ZStatus_t zclClosures_ProcessInDoorLockSetRFIDCodeRsp( zclIncoming_t *pInMsg,
//  214                                                               zclClosures_DoorLockAppCallbacks_t *pCBs );
//  215 static ZStatus_t zclClosures_ProcessInDoorLockGetRFIDCodeRsp( zclIncoming_t *pInMsg,
//  216                                                               zclClosures_DoorLockAppCallbacks_t *pCBs );
//  217 static ZStatus_t zclClosures_ProcessInDoorLockClearRFIDCodeRsp( zclIncoming_t *pInMsg,
//  218                                                                 zclClosures_DoorLockAppCallbacks_t *pCBs );
//  219 static ZStatus_t zclClosures_ProcessInDoorLockClearAllRFIDCodesRsp( zclIncoming_t *pInMsg,
//  220                                                                     zclClosures_DoorLockAppCallbacks_t *pCBs );
//  221 static ZStatus_t zclClosures_ProcessInDoorLockOperationEventNotification( zclIncoming_t *pInMsg,
//  222                                                                           zclClosures_DoorLockAppCallbacks_t *pCBs );
//  223 static ZStatus_t zclClosures_ProcessInDoorLockProgrammingEventNotification( zclIncoming_t *pInMsg,
//  224                                                                             zclClosures_DoorLockAppCallbacks_t *pCBs );
//  225 #endif //ZCL_DOORLOCK_EXT
//  226 #endif //ZCL_DOORLOCK
//  227 
//  228 #ifdef ZCL_WINDOWCOVERING
//  229 static zclClosures_WindowCoveringAppCallbacks_t *zclClosures_FindWCCallbacks( uint8 endpoint );
//  230 static ZStatus_t zclClosures_ProcessInWindowCovering( zclIncoming_t *pInMsg,
//  231                                                       zclClosures_WindowCoveringAppCallbacks_t *pCBs );
//  232 #endif //ZCL_WINDOWCOVERING
//  233 
//  234 #ifdef ZCL_DOORLOCK
//  235 /*********************************************************************
//  236  * @fn      zclClosures_RegisterDoorLockCmdCallbacks
//  237  *
//  238  * @brief   Register an applications DoorLock command callbacks
//  239  *
//  240  * @param   endpoint - application's endpoint
//  241  * @param   callbacks - pointer to the callback record.
//  242  *
//  243  * @return  ZMemError if not able to allocate
//  244  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  245 ZStatus_t zclClosures_RegisterDoorLockCmdCallbacks( uint8 endpoint, zclClosures_DoorLockAppCallbacks_t *callbacks )
zclClosures_RegisterDoorLockCmdCallbacks:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function zclClosures_RegisterDoorLockCmdCallbacks
        CODE
//  246 {
        FUNCALL zclClosures_RegisterDoorLockCmdCallbacks, zcl_registerPlugin
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_RegisterDoorLockCmdCallbacks, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV       ?V0,R1
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
//  247   zclClosuresDoorLockCBRec_t *pNewItem;
//  248   zclClosuresDoorLockCBRec_t *pLoop;
//  249 
//  250   // Register as a ZCL Plugin
//  251   if ( !zclDoorLockPluginRegisted )
        MOV       DPTR,#zclDoorLockPluginRegisted
        MOVX      A,@DPTR
        JNZ       ??zclClosures_RegisterDoorLockCmdCallbacks_0
//  252   {
//  253     zcl_registerPlugin( ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
//  254                         ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
//  255                         zclClosures_HdlIncoming );
        ; Setup parameters for call to function zcl_registerPlugin
        MOV       ?V2,#`??zclClosures_HdlIncoming::?relay` & 0xff
        MOV       ?V3,#(`??zclClosures_HdlIncoming::?relay` >> 8) & 0xff
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       R2,#0x1
        MOV       R3,#0x1
        LCALL     `??zcl_registerPlugin::?relay`; Banked call to: zcl_registerPlugin
        MOV       A,#0x2
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
//  256     zclDoorLockPluginRegisted = TRUE;
        MOV       DPTR,#zclDoorLockPluginRegisted
        MOV       A,#0x1
        MOVX      @DPTR,A
//  257   }
//  258 
//  259   // Fill in the new profile list
//  260   pNewItem = zcl_mem_alloc( sizeof( zclClosuresDoorLockCBRec_t ) );
??zclClosures_RegisterDoorLockCmdCallbacks_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,#0x5
        MOV       R3,#0x0
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       R0,?V2
        MOV       R1,?V3
//  261   if ( pNewItem == NULL )
        MOV       A,R2
        ORL       A,R1
        JNZ       ??zclClosures_RegisterDoorLockCmdCallbacks_1
//  262   {
//  263     return ( ZMemError );
        MOV       R1,#0x10
        SJMP      ??zclClosures_RegisterDoorLockCmdCallbacks_2
//  264   }
//  265 
//  266   pNewItem->next = (zclClosuresDoorLockCBRec_t *)NULL;
??zclClosures_RegisterDoorLockCmdCallbacks_1:
        MOV       DPL,R2
        MOV       DPH,R3
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        LCALL     ?Subroutine126 & 0xFFFF
//  267   pNewItem->endpoint = endpoint;
??CrossCallReturnLabel_534:
        INC       DPTR
        INC       DPTR
        MOV       A,?V0
        LCALL     ?Subroutine126 & 0xFFFF
//  268   pNewItem->CBs = callbacks;
??CrossCallReturnLabel_535:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,R6
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R7
        MOVX      @DPTR,A
//  269 
//  270   // Find spot in list
//  271   if ( zclClosuresDoorLockCBs == NULL )
        MOV       DPTR,#zclClosuresDoorLockCBs
        LCALL     ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_120:
        ORL       A,R3
        MOV       DPTR,#zclClosuresDoorLockCBs
        JZ        ??zclClosures_RegisterDoorLockCmdCallbacks_3
//  272   {
//  273     zclClosuresDoorLockCBs = pNewItem;
//  274   }
//  275   else
//  276   {
//  277     // Look for end of list
//  278     pLoop = zclClosuresDoorLockCBs;
        LCALL     ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_358:
        SJMP      ??zclClosures_RegisterDoorLockCmdCallbacks_4
//  279     while ( pLoop->next != NULL )
//  280     {
//  281       pLoop = pLoop->next;
??zclClosures_RegisterDoorLockCmdCallbacks_5:
        MOV       A,R2
        MOV       R4,A
        MOV       A,R3
??zclClosures_RegisterDoorLockCmdCallbacks_4:
        MOV       R5,A
//  282     }
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_121:
        ORL       A,R3
        JNZ       ??zclClosures_RegisterDoorLockCmdCallbacks_5
//  283 
//  284     // Put new item at end of list
//  285     pLoop->next = pNewItem;
        MOV       DPL,R4
        MOV       DPH,R5
??zclClosures_RegisterDoorLockCmdCallbacks_3:
        MOV       A,R0
//  286   }
        LCALL     ??Subroutine144_0 & 0xFFFF
//  287   return ( ZSuccess );
??CrossCallReturnLabel_297:
        MOV       R1,#0x0
??zclClosures_RegisterDoorLockCmdCallbacks_2:
        LJMP      ??Subroutine187_0 & 0xFFFF
//  288 }
          CFI EndBlock cfiBlock0
//  289 
//  290 /*********************************************************************
//  291  * @fn      zclClosures_FindDoorLockCallbacks
//  292  *
//  293  * @brief   Find the DoorLock callbacks for an endpoint
//  294  *
//  295  * @param   endpoint
//  296  *
//  297  * @return  pointer to the callbacks
//  298  */
//  299 static zclClosures_DoorLockAppCallbacks_t *zclClosures_FindDoorLockCallbacks( uint8 endpoint )
//  300 {
//  301   zclClosuresDoorLockCBRec_t *pCBs;
//  302 
//  303   pCBs = zclClosuresDoorLockCBs;
//  304   while ( pCBs )
//  305   {
//  306     if ( pCBs->endpoint == endpoint )
//  307     {
//  308       return ( pCBs->CBs );
//  309     }
//  310     pCBs = pCBs->next;
//  311   }
//  312   return ( (zclClosures_DoorLockAppCallbacks_t *)NULL );
//  313 }
//  314 #endif // ZCL_DOORLOCK
//  315 
//  316 #ifdef ZCL_WINDOWCOVERING
//  317 /*********************************************************************
//  318  * @fn      zclClosures_RegisterWindowCoveringCmdCallbacks
//  319  *
//  320  * @brief   Register an applications Window Covering command callbacks
//  321  *
//  322  * @param   endpoint - application's endpoint
//  323  * @param   callbacks - pointer to the callback record.
//  324  *
//  325  * @return  ZMemError if not able to allocate
//  326  */
//  327 ZStatus_t zclClosures_RegisterWindowCoveringCmdCallbacks( uint8 endpoint, zclClosures_WindowCoveringAppCallbacks_t *callbacks )
//  328 {
//  329   zclClosuresWindowCoveringCBRec_t *pNewItem;
//  330   zclClosuresWindowCoveringCBRec_t *pLoop;
//  331 
//  332   // Register as a ZCL Plugin
//  333   if ( !zclWindowCoveringPluginRegisted )
//  334   {
//  335     zcl_registerPlugin( ZCL_CLUSTER_ID_CLOSURES_WINDOW_COVERING,
//  336                         ZCL_CLUSTER_ID_CLOSURES_WINDOW_COVERING,
//  337                         zclClosures_HdlIncoming );
//  338     zclWindowCoveringPluginRegisted = TRUE;
//  339   }
//  340 
//  341   // Fill in the new profile list
//  342   pNewItem = zcl_mem_alloc( sizeof( zclClosuresWindowCoveringCBRec_t ) );
//  343   if ( pNewItem == NULL )
//  344   {
//  345     return ( ZMemError );
//  346   }
//  347 
//  348   pNewItem->next = (zclClosuresWindowCoveringCBRec_t *)NULL;
//  349   pNewItem->endpoint = endpoint;
//  350   pNewItem->CBs = callbacks;
//  351 
//  352   // Find spot in list
//  353   if ( zclClosuresWindowCoveringCBs == NULL )
//  354   {
//  355     zclClosuresWindowCoveringCBs = pNewItem;
//  356   }
//  357   else
//  358   {
//  359     // Look for end of list
//  360     pLoop = zclClosuresWindowCoveringCBs;
//  361     while ( pLoop->next != NULL )
//  362     {
//  363       pLoop = pLoop->next;
//  364     }
//  365 
//  366     // Put new item at end of list
//  367     pLoop->next = pNewItem;
//  368   }
//  369   return ( ZSuccess );
//  370 }
//  371 
//  372 /*********************************************************************
//  373  * @fn      zclClosures_FindWCCallbacks
//  374  *
//  375  * @brief   Find the Window Covering callbacks for an endpoint
//  376  *
//  377  * @param   endpoint
//  378  *
//  379  * @return  pointer to the callbacks
//  380  */
//  381 static zclClosures_WindowCoveringAppCallbacks_t *zclClosures_FindWCCallbacks( uint8 endpoint )
//  382 {
//  383   zclClosuresWindowCoveringCBRec_t *pCBs;
//  384 
//  385   pCBs = zclClosuresWindowCoveringCBs;
//  386   while ( pCBs )
//  387   {
//  388     if ( pCBs->endpoint == endpoint )
//  389     {
//  390       return ( pCBs->CBs );
//  391     }
//  392     pCBs = pCBs->next;
//  393   }
//  394   return ( (zclClosures_WindowCoveringAppCallbacks_t *)NULL );
//  395 }
//  396 #endif // ZCL_WINDOWCOVERING
//  397 
//  398 #if defined(ZCL_DOORLOCK) || defined(ZCL_WINDOWCOVERING)
//  399 /*********************************************************************
//  400  * @fn      zclClosures_HdlIncoming
//  401  *
//  402  * @brief   Callback from ZCL to process incoming Commands specific
//  403  *          to this cluster library or Profile commands for attributes
//  404  *          that aren't in the attribute list
//  405  *
//  406  * @param   pInMsg - pointer to the incoming message
//  407  * @param   logicalClusterID
//  408  *
//  409  * @return  ZStatus_t
//  410  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  411 static ZStatus_t zclClosures_HdlIncoming( zclIncoming_t *pInMsg )
zclClosures_HdlIncoming:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function zclClosures_HdlIncoming
        CODE
//  412 {
        FUNCALL zclClosures_HdlIncoming, StubAPS_InterPan
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_HdlIncoming, zclClosures_ProcessInDoorLockCmds
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
//  413   ZStatus_t stat = ZSuccess;
//  414 
//  415 #if defined ( INTER_PAN )
//  416   if ( StubAPS_InterPan( pInMsg->msg->srcAddr.panId, pInMsg->msg->srcAddr.endPoint ) )
        MOV       DPL,R2
        MOV       DPH,A
        LCALL     ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_122:
        ADD       A,#0xf
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,R2
        ADD       A,#0x10
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        MOV       DPH,A
        LCALL     ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_399:
        LCALL     `??StubAPS_InterPan::?relay`; Banked call to: StubAPS_InterPan
        MOV       A,R1
        JZ        ??zclClosures_HdlIncoming_0
//  417     return ( stat ); // Cluster not supported thru Inter-PAN
        MOV       R1,#0x0
        SJMP      ??zclClosures_HdlIncoming_1
//  418 #endif
//  419   if ( zcl_ClusterCmd( pInMsg->hdr.fc.type ) )
??zclClosures_HdlIncoming_0:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        ANL       A,#0x7
        XRL       A,#0x1
        JNZ       ??zclClosures_HdlIncoming_2
//  420   {
//  421     // Is this a manufacturer specific command?
//  422     if ( pInMsg->hdr.fc.manuSpecific == 0 )
//  423     {
//  424       stat = zclClosures_HdlInSpecificCommands( pInMsg );
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine184_0 & 0xFFFF
//  425     }
//  426     else
//  427     {
//  428       // We don't support any manufacturer specific command.
//  429       stat = ZFailure;
//  430     }
//  431   }
??CrossCallReturnLabel_444:
        MOV       A,R0
        MOV       R2,A
        MOV       A,R1
        MOV       R3,A
        MOV       A,R0
        ADD       A,#0x14
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       DPTR,#zclClosuresDoorLockCBs
??zclClosures_HdlIncoming_3:
        LCALL     ??Subroutine181_0 & 0xFFFF
??CrossCallReturnLabel_409:
        JZ        ??zclClosures_HdlIncoming_2
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R4
        MOV       DPL,R0
        MOV       DPH,R1
        JNZ       ??zclClosures_HdlIncoming_3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine143_0 & 0xFFFF
??CrossCallReturnLabel_289:
        JNZ       ??zclClosures_HdlIncoming_4
??zclClosures_HdlIncoming_2:
        MOV       R1,#0x1
        SJMP      ??zclClosures_HdlIncoming_1
??zclClosures_HdlIncoming_4:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V3,A
        MOV       R0,#?V2
        LCALL     ?US_SWITCH_DENSE
`?<Jumptable for zclClosures_HdlIncoming>_0`:
        DATA
        DATA16
        DATA
        DATA16
        DW        257
        DATA
        DATA8
        DATA
        DATA8
        DB        1
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_HdlIncoming_5
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_HdlIncoming_6
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_HdlIncoming_7
        CODE
??zclClosures_HdlIncoming_6:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockCmds
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     `??zclClosures_ProcessInDoorLockCmds::?relay`; Banked call to: zclClosures_ProcessInDoorLockCmds
        MOV       A,R1
        MOV       ?V0,A
        SJMP      ??zclClosures_HdlIncoming_7
??zclClosures_HdlIncoming_5:
        MOV       ?V0,#0x1
??zclClosures_HdlIncoming_7:
        MOV       R1,?V0
//  432   else
//  433   {
//  434     // Handle all the normal (Read, Write...) commands -- should never get here
//  435     stat = ZFailure;
//  436   }
//  437   return ( stat );
??zclClosures_HdlIncoming_1:
        LJMP      ??Subroutine187_0 & 0xFFFF
//  438 }
          CFI EndBlock cfiBlock1

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine55:
          CFI Block cfiCond2 Using cfiCommon0
          CFI Function zclClosures_RegisterDoorLockCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_120
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond3 Using cfiCommon0
          CFI (cfiCond3) Function zclClosures_RegisterDoorLockCmdCallbacks
          CFI (cfiCond3) Conditional ??CrossCallReturnLabel_121
          CFI (cfiCond3) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond3) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond3) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond3) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond3) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond3) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond3) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond3) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond3) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond3) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond3) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond3) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond3) CFA_SP SP+-2
          CFI (cfiCond3) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond4 Using cfiCommon0
          CFI (cfiCond4) Function zclClosures_HdlIncoming
          CFI (cfiCond4) Conditional ??CrossCallReturnLabel_122
          CFI (cfiCond4) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond4) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond4) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond4) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond4) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond4) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond4) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond4) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond4) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond4) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond4) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond4) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond4) CFA_SP SP+-2
          CFI (cfiCond4) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker5 Using cfiCommon1
          CFI (cfiPicker5) NoFunction
          CFI (cfiPicker5) Picker
        LCALL     ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_400:
        ; Setup parameters for call to function StubAPS_InterPan
        MOV       A,R2
        RET
          CFI EndBlock cfiCond2
          CFI EndBlock cfiCond3
          CFI EndBlock cfiCond4
          CFI EndBlock cfiPicker5
//  439 
//  440 /*********************************************************************
//  441  * @fn      zclClosures_HdlInSpecificCommands
//  442  *
//  443  * @brief   Callback from ZCL to process incoming Commands specific
//  444  *          to this cluster library
//  445 
//  446  * @param   pInMsg - pointer to the incoming message
//  447  *
//  448  * @return  ZStatus_t
//  449  */
//  450 static ZStatus_t zclClosures_HdlInSpecificCommands( zclIncoming_t *pInMsg )
//  451 {
//  452   ZStatus_t stat;
//  453 #ifdef ZCL_DOORLOCK
//  454   zclClosures_DoorLockAppCallbacks_t *pDLCBs;
//  455 #endif
//  456 
//  457 #ifdef ZCL_WINDOWCOVERING
//  458   zclClosures_WindowCoveringAppCallbacks_t *pWCCBs;
//  459 #endif
//  460 
//  461 #ifdef ZCL_DOORLOCK
//  462   // make sure endpoint exists
//  463   pDLCBs = zclClosures_FindDoorLockCallbacks( pInMsg->msg->endPoint );
//  464   if ( pDLCBs == NULL )
//  465   {
//  466     return ( ZFailure );
//  467   }
//  468 #endif
//  469 
//  470 #ifdef ZCL_WINDOWCOVERING
//  471   // make sure endpoint exists
//  472   pWCCBs = zclClosures_FindWCCallbacks( pInMsg->msg->endPoint );
//  473   if ( pWCCBs == NULL )
//  474   {
//  475     return ( ZFailure );
//  476   }
//  477 #endif
//  478 
//  479   switch ( pInMsg->msg->clusterId )
//  480   {
//  481     case ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK:
//  482 #ifdef ZCL_DOORLOCK
//  483       stat = zclClosures_ProcessInDoorLockCmds( pInMsg, pDLCBs );
//  484 #endif //ZCL_DOORLOCK
//  485       break;
//  486 
//  487     case ZCL_CLUSTER_ID_CLOSURES_WINDOW_COVERING:
//  488 #ifdef ZCL_WINDOWCOVERING
//  489       stat = zclClosures_ProcessInWindowCovering( pInMsg, pWCCBs );
//  490 #endif //ZCL_WINDOWCOVERING
//  491       break;
//  492 
//  493     default:
//  494       stat = ZFailure;
//  495       break;
//  496   }
//  497 
//  498   return ( stat );
//  499 }
//  500 #endif // defined(ZCL_DOORLOCK) || defined(ZCL_WINDOWCOVERING)
//  501 
//  502 #ifdef ZCL_DOORLOCK
//  503 /*********************************************************************
//  504  * @fn      zclClosures_ProcessInDoorLockCmds
//  505  *
//  506  * @brief   Process in the received DoorLock Command.
//  507  *
//  508  * @param   pInMsg - pointer to the incoming message
//  509  * @param   pCBs - pointer to the Application callback functions
//  510  *
//  511  * @return  ZStatus_t
//  512  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  513 static ZStatus_t zclClosures_ProcessInDoorLockCmds( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockCmds:
          CFI Block cfiBlock6 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
        CODE
//  514                                                     zclClosures_DoorLockAppCallbacks_t *pCBs )
//  515 {
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLock
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockUnlockWithTimeout
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockSetPINCode
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockSetWeekDaySchedule
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockSetYearDaySchedule
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockSetHolidaySchedule
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockSetRFIDCode
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockSetTemporaryPin
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLock
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockGetLogRecordRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockGetPINCodeRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockGetRFIDCodeRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockOperationEventNotification
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockCmds, zclClosures_ProcessInDoorLockProgrammingEventNotification
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        MOV       A,#-0xb
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 30
        MOV       A,#-0x1e
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 41)
//  516   ZStatus_t stat;
//  517 
//  518   // Client-to-Server
//  519   if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
        MOV       A,R2
        ADD       A,#0x8
        MOV       R0,A
        CLR       A
        ADDC      A,R3
        MOV       ?V0,R0
        MOV       ?V1,A
        LCALL     ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_91:
        JZ        $+5
        LJMP      ??zclClosures_ProcessInDoorLockCmds_0 & 0xFFFF
//  520   {
//  521     switch(pInMsg->hdr.commandID)
        MOVX      A,@DPTR
        LCALL     ?UC_SWITCH_DENSE
`?<Jumptable for zclClosures_ProcessInDoorLockC_0`:
        DATA
        DATA8
        DATA
        DATA8
        DB        0
        DATA
        DATA8
        DATA
        DATA8
        DB        27
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_1
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_2
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_2
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_2
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_3
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_4
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_5
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_6
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_7
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_8
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_9
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_10
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_11
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_12
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_13
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_14
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_15
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_16
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_17
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_18
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_19
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_20
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_21
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_22
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_23
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_24
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_25
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_26
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_27
        CODE
//  522     {
//  523       case COMMAND_CLOSURES_LOCK_DOOR:
//  524       case COMMAND_CLOSURES_UNLOCK_DOOR:
//  525       case COMMAND_CLOSURES_TOGGLE_DOOR:
//  526         stat = zclClosures_ProcessInDoorLock( pInMsg, pCBs );
//  527         break;
//  528         
//  529 #ifdef ZCL_DOORLOCK_EXT
//  530       case COMMAND_CLOSURES_UNLOCK_WITH_TIMEOUT:
//  531         stat = zclClosures_ProcessInDoorLockUnlockWithTimeout( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_3:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockUnlockWithTimeout
        LCALL     ??zclClosures_ProcessInDoorLockUnlockWithTimeou; Banked call to: zclClosures_ProcessInDoorLockUnlockWithTimeout
        LJMP      ??zclClosures_ProcessInDoorLockCmds_28 & 0xFFFF
//  532         break;
//  533 
//  534       case COMMAND_CLOSURES_GET_LOG_RECORD:
//  535         stat = zclClosures_ProcessInDoorLockGetLogRecord( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_4:
        MOV       DPL,R4
        MOV       DPH,R5
        SJMP      ??zclClosures_ProcessInDoorLockCmds_29
//  536         break;
//  537 
//  538       case COMMAND_CLOSURES_SET_PIN_CODE:
//  539         stat = zclClosures_ProcessInDoorLockSetPINCode( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_5:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockSetPINCode
        LCALL     `??zclClosures_ProcessInDoorLockSetPINCode::?rel`; Banked call to: zclClosures_ProcessInDoorLockSetPINCode
        LJMP      ??zclClosures_ProcessInDoorLockCmds_28 & 0xFFFF
//  540         break;
//  541 
//  542       case COMMAND_CLOSURES_GET_PIN_CODE:
//  543         stat = zclClosures_ProcessInDoorLockGetPINCode( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_6:
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
??zclClosures_ProcessInDoorLockCmds_29:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LJMP      ??zclClosures_ProcessInDoorLockCmds_30 & 0xFFFF
//  544         break;
//  545 
//  546       case COMMAND_CLOSURES_CLEAR_PIN_CODE:
//  547         stat = zclClosures_ProcessInDoorLockClearPINCode( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_7:
        MOV       A,R4
        ADD       A,#0xc
        LJMP      ??zclClosures_ProcessInDoorLockCmds_31 & 0xFFFF
//  548         break;
//  549 
//  550       case COMMAND_CLOSURES_CLEAR_ALL_PIN_CODES:
//  551         stat = zclClosures_ProcessInDoorLockClearAllPINCodes( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_8:
        MOV       A,R4
        ADD       A,#0xe
        LJMP      ??zclClosures_ProcessInDoorLockCmds_32 & 0xFFFF
//  552         break;
//  553 
//  554       case COMMAND_CLOSURES_SET_USER_STATUS:
//  555         stat = zclClosures_ProcessInDoorLockSetUserStatus( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_9:
        MOV       A,R4
        ADD       A,#0x10
        LJMP      ??zclClosures_ProcessInDoorLockCmds_33 & 0xFFFF
//  556         break;
//  557 
//  558       case COMMAND_CLOSURES_GET_USER_STATUS:
//  559         stat = zclClosures_ProcessInDoorLockGetUserStatus( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_10:
        MOV       A,R4
        ADD       A,#0x12
        LJMP      ??zclClosures_ProcessInDoorLockCmds_31 & 0xFFFF
//  560         break;
//  561 
//  562       case COMMAND_CLOSURES_SET_WEEK_DAY_SCHEDULE:
//  563         stat = zclClosures_ProcessInDoorLockSetWeekDaySchedule( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_11:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockSetWeekDaySchedule
        LCALL     ??zclClosures_ProcessInDoorLockSetWeekDaySchedu; Banked call to: zclClosures_ProcessInDoorLockSetWeekDaySchedule
        LJMP      ??zclClosures_ProcessInDoorLockCmds_28 & 0xFFFF
//  564         break;
//  565 
//  566       case COMMAND_CLOSURES_GET_WEEK_DAY_SCHEDULE:
//  567         stat = zclClosures_ProcessInDoorLockGetWeekDaySchedule( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_12:
        MOV       A,R4
        ADD       A,#0x16
        SJMP      ??zclClosures_ProcessInDoorLockCmds_34
//  568         break;
//  569 
//  570       case COMMAND_CLOSURES_CLEAR_WEEK_DAY_SCHEDULE:
//  571         stat = zclClosures_ProcessInDoorLockClearWeekDaySchedule( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_13:
        MOV       A,R4
        ADD       A,#0x18
        SJMP      ??zclClosures_ProcessInDoorLockCmds_34
//  572         break;
//  573 
//  574       case COMMAND_CLOSURES_SET_YEAR_DAY_SCHEDULE:
//  575         stat = zclClosures_ProcessInDoorLockSetYearDaySchedule( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_14:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockSetYearDaySchedule
        LCALL     ??zclClosures_ProcessInDoorLockSetYearDaySchedu; Banked call to: zclClosures_ProcessInDoorLockSetYearDaySchedule
        LJMP      ??zclClosures_ProcessInDoorLockCmds_28 & 0xFFFF
//  576         break;
//  577 
//  578       case COMMAND_CLOSURES_GET_YEAR_DAY_SCHEDULE:
//  579         stat = zclClosures_ProcessInDoorLockGetYearDaySchedule( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_15:
        MOV       A,R4
        ADD       A,#0x1c
??zclClosures_ProcessInDoorLockCmds_34:
        LCALL     ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_290:
        JNZ       ??zclClosures_ProcessInDoorLockCmds_35
        LJMP      ??zclClosures_ProcessInDoorLockCmds_1 & 0xFFFF
//  580         break;
//  581 
//  582       case COMMAND_CLOSURES_CLEAR_YEAR_DAY_SCHEDULE:
//  583         stat = zclClosures_ProcessInDoorLockClearYearDaySchedule( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_16:
        MOV       A,R4
        ADD       A,#0x1e
        LCALL     ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_291:
        JZ        ??zclClosures_ProcessInDoorLockCmds_36
??zclClosures_ProcessInDoorLockCmds_35:
        LCALL     ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_123:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_195:
        LCALL     ??Subroutine161_0 & 0xFFFF
??CrossCallReturnLabel_355:
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R6,A
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R5,A
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R6
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R5
        MOVX      @DPTR,A
        ; Setup parameters for indirect call
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        LJMP      ??zclClosures_ProcessInDoorLockCmds_37 & 0xFFFF
??zclClosures_ProcessInDoorLockCmds_36:
        LJMP      ??zclClosures_ProcessInDoorLockCmds_1 & 0xFFFF
//  584         break;
//  585 
//  586       case COMMAND_CLOSURES_SET_HOLIDAY_SCHEDULE:
//  587         stat = zclClosures_ProcessInDoorLockSetHolidaySchedule( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_17:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockSetHolidaySchedule
        LCALL     ??zclClosures_ProcessInDoorLockSetHolidaySchedu; Banked call to: zclClosures_ProcessInDoorLockSetHolidaySchedule
        LJMP      ??zclClosures_ProcessInDoorLockCmds_28 & 0xFFFF
//  588         break;
//  589 
//  590       case COMMAND_CLOSURES_GET_HOLIDAY_SCHEDULE:
//  591         stat = zclClosures_ProcessInDoorLockGetHolidaySchedule( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_18:
        MOV       A,R4
        ADD       A,#0x22
        LCALL     ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_292:
        JNZ       ??zclClosures_ProcessInDoorLockCmds_38
        LJMP      ??zclClosures_ProcessInDoorLockCmds_1 & 0xFFFF
//  592         break;
//  593 
//  594       case COMMAND_CLOSURES_CLEAR_HOLIDAY_SCHEDULE:
//  595         stat = zclClosures_ProcessInDoorLockClearHolidaySchedule( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_19:
        MOV       A,R4
        ADD       A,#0x24
        LCALL     ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_293:
        JZ        ??zclClosures_ProcessInDoorLockCmds_39
??zclClosures_ProcessInDoorLockCmds_38:
        LCALL     ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_124:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        ; Setup parameters for indirect call
        MOV       A,#0x5
        LJMP      ??zclClosures_ProcessInDoorLockCmds_40 & 0xFFFF
??zclClosures_ProcessInDoorLockCmds_39:
        LJMP      ??zclClosures_ProcessInDoorLockCmds_1 & 0xFFFF
//  596         break;
//  597 
//  598       case COMMAND_CLOSURES_SET_USER_TYPE:
//  599         stat = zclClosures_ProcessInDoorLockSetUserType( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_20:
        MOV       A,R4
        ADD       A,#0x26
        LJMP      ??zclClosures_ProcessInDoorLockCmds_33 & 0xFFFF
//  600         break;
//  601 
//  602       case COMMAND_CLOSURES_GET_USER_TYPE:
//  603         stat = zclClosures_ProcessInDoorLockGetUserType( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_21:
        MOV       A,R4
        ADD       A,#0x28
        SJMP      ??zclClosures_ProcessInDoorLockCmds_31
//  604         break;
//  605 
//  606       case COMMAND_CLOSURES_SET_RFID_CODE:
//  607         stat = zclClosures_ProcessInDoorLockSetRFIDCode( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_22:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockSetRFIDCode
        LCALL     `??zclClosures_ProcessInDoorLockSetRFIDCode::?re`; Banked call to: zclClosures_ProcessInDoorLockSetRFIDCode
        LJMP      ??zclClosures_ProcessInDoorLockCmds_28 & 0xFFFF
//  608         break;
//  609 
//  610       case COMMAND_CLOSURES_GET_RFID_CODE:
//  611         stat = zclClosures_ProcessInDoorLockGetRFIDCode( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_23:
        MOV       A,R4
        ADD       A,#0x2c
??zclClosures_ProcessInDoorLockCmds_31:
        MOV       DPL,A
        CLR       A
        ADDC      A,R5
        MOV       DPH,A
??zclClosures_ProcessInDoorLockCmds_30:
        LCALL     ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_113:
        JNZ       ??zclClosures_ProcessInDoorLockCmds_41
        LJMP      ??zclClosures_ProcessInDoorLockCmds_1 & 0xFFFF
//  612         break;
//  613 
//  614       case COMMAND_CLOSURES_CLEAR_RFID_CODE:
//  615         stat = zclClosures_ProcessInDoorLockClearRFIDCode( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_24:
        MOV       A,R4
        ADD       A,#0x2e
        MOV       DPL,A
        CLR       A
        ADDC      A,R5
        MOV       DPH,A
        LCALL     ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_114:
        JZ        ??zclClosures_ProcessInDoorLockCmds_42
??zclClosures_ProcessInDoorLockCmds_41:
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_129:
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R4
        LCALL     ??Subroutine144_0 & 0xFFFF
??CrossCallReturnLabel_298:
        ; Setup parameters for indirect call
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP102_8
        MOV       DPL,R6
        MOV       DPH,R7
        LJMP      ??CrossCallReturnLabel_89 & 0xFFFF
??zclClosures_ProcessInDoorLockCmds_42:
        LJMP      ??zclClosures_ProcessInDoorLockCmds_1 & 0xFFFF
//  616         break;
//  617 
//  618       case COMMAND_CLOSURES_CLEAR_ALL_RFID_CODES:
//  619         stat = zclClosures_ProcessInDoorLockClearAllRFIDCodes( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_25:
        MOV       A,R4
        ADD       A,#0x30
??zclClosures_ProcessInDoorLockCmds_32:
        MOV       DPL,A
        CLR       A
        ADDC      A,R5
        MOV       DPH,A
        LCALL     ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_244:
        MOV       A,DPL
        ORL       A,DPH
        JZ        $+5
        LJMP      ??CrossCallReturnLabel_89 & 0xFFFF
        ; Setup parameters for indirect call
        LJMP      ??zclClosures_ProcessInDoorLockCmds_1 & 0xFFFF
//  620         break;
//  621         
//  622       case COMMAND_CLOSURES_SET_TEMPORARY_PIN:
//  623         stat = zclClosures_ProcessInDoorLockSetTemporaryPin( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_26:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockSetTemporaryPin
        LCALL     `??zclClosures_ProcessInDoorLockSetTemporaryPin:`; Banked call to: zclClosures_ProcessInDoorLockSetTemporaryPin
        LJMP      ??zclClosures_ProcessInDoorLockCmds_28 & 0xFFFF
//  624         break;
//  625         
//  626       case COMMAND_CLOSURES_MODIFY_PIN:
//  627         stat = zclClosures_ModifyPin( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_27:
        MOV       A,R4
        ADD       A,#0x34
        LCALL     ?Subroutine24 & 0xFFFF
//  628         break;            
//  629         
//  630 #endif
//  631       default:
//  632         // Unknown command
//  633         stat = ZFailure;
//  634         break;
//  635     }
//  636   }
??CrossCallReturnLabel_294:
        JNZ       $+5
        LJMP      ??zclClosures_ProcessInDoorLockCmds_1 & 0xFFFF
        MOV       R5,#0x0
        MOV       R4,#0x0
??zclClosures_ProcessInDoorLockCmds_43:
        LCALL     ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_97:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R4
        MOV       R6,A
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        MOV       A,DPL
        ADD       A,R6
        MOV       DPL,A
        CLR       A
        ADDC      A,DPH
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R5
        INC       R4
        MOV       A,R4
        CLR       C
        SUBB      A,#0xc
        JC        ??zclClosures_ProcessInDoorLockCmds_43
        MOV       R4,#0x0
??zclClosures_ProcessInDoorLockCmds_44:
        LCALL     ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_98:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R4
        MOV       R6,A
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        MOV       A,DPL
        ADD       A,R6
        MOV       R6,A
        CLR       A
        ADDC      A,DPH
        MOV       R7,A
        MOV       A,R6
        ADD       A,#0xc
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R5
        INC       R4
        MOV       A,R4
        CLR       C
        SUBB      A,#0xc
        JC        ??zclClosures_ProcessInDoorLockCmds_44
        ; Setup parameters for indirect call
        MOV       A,#0x6
??zclClosures_ProcessInDoorLockCmds_40:
        LCALL     ?XSTACK_DISP102_8
??zclClosures_ProcessInDoorLockCmds_37:
        MOV       DPL,R0
        MOV       DPH,R1
        LJMP      ??CrossCallReturnLabel_172 & 0xFFFF
//  637   // Server-to-Client
//  638   else
//  639   {
//  640     switch(pInMsg->hdr.commandID)
??zclClosures_ProcessInDoorLockCmds_0:
        MOVX      A,@DPTR
        LCALL     ?UC_SWITCH_DENSE
`?<Jumptable for zclClosures_ProcessInDoorLockC_1`:
        DATA
        DATA8
        DATA
        DATA8
        DB        0
        DATA
        DATA8
        DATA
        DATA8
        DB        33
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_1
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_2
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_2
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_2
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_45
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_46
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_47
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_48
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_49
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_50
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_51
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_52
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_53
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_54
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_55
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_56
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_57
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_58
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_59
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_60
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_61
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_62
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_63
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_64
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_65
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_66
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_67
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_1
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_1
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_1
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_1
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_1
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_1
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_68
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclClosures_ProcessInDoorLockCmds_69
        CODE
//  641     {
//  642       case COMMAND_CLOSURES_LOCK_DOOR_RSP:
//  643       case COMMAND_CLOSURES_UNLOCK_DOOR_RSP:
//  644       case COMMAND_CLOSURES_TOGGLE_DOOR_RSP:
//  645         stat = zclClosures_ProcessInDoorLock( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_2:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLock
        LCALL     `??zclClosures_ProcessInDoorLock::?relay`; Banked call to: zclClosures_ProcessInDoorLock
        LJMP      ??zclClosures_ProcessInDoorLockCmds_28 & 0xFFFF
//  646         break;
//  647         
//  648 #ifdef ZCL_DOORLOCK_EXT
//  649         
//  650       case COMMAND_CLOSURES_UNLOCK_WITH_TIMEOUT_RSP:
//  651         stat = zclClosures_ProcessInDoorLockUnlockWithTimeoutRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_45:
        MOV       A,R4
        ADD       A,#0x36
        SJMP      ??zclClosures_ProcessInDoorLockCmds_70
//  652         break;
//  653 
//  654       case COMMAND_CLOSURES_GET_LOG_RECORD_RSP:
//  655         stat = zclClosures_ProcessInDoorLockGetLogRecordRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_46:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockGetLogRecordRsp
        LCALL     `??zclClosures_ProcessInDoorLockGetLogRecordRsp:`; Banked call to: zclClosures_ProcessInDoorLockGetLogRecordRsp
        LJMP      ??zclClosures_ProcessInDoorLockCmds_28 & 0xFFFF
//  656         break;
//  657 
//  658       case COMMAND_CLOSURES_SET_PIN_CODE_RSP:
//  659         stat = zclClosures_ProcessInDoorLockSetPINCodeRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_47:
        MOV       A,R4
        ADD       A,#0x3a
        SJMP      ??zclClosures_ProcessInDoorLockCmds_70
//  660         break;
//  661 
//  662       case COMMAND_CLOSURES_GET_PIN_CODE_RSP:
//  663         stat = zclClosures_ProcessInDoorLockGetPINCodeRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_48:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockGetPINCodeRsp
        LCALL     `??zclClosures_ProcessInDoorLockGetPINCodeRsp::?`; Banked call to: zclClosures_ProcessInDoorLockGetPINCodeRsp
        LJMP      ??zclClosures_ProcessInDoorLockCmds_28 & 0xFFFF
//  664         break;
//  665 
//  666       case COMMAND_CLOSURES_CLEAR_PIN_CODE_RSP:
//  667         stat = zclClosures_ProcessInDoorLockClearPINCodeRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_49:
        MOV       A,R4
        ADD       A,#0x3e
        SJMP      ??zclClosures_ProcessInDoorLockCmds_70
//  668         break;
//  669 
//  670       case COMMAND_CLOSURES_CLEAR_ALL_PIN_CODES_RSP:
//  671         stat = zclClosures_ProcessInDoorLockClearAllPINCodesRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_50:
        MOV       A,R4
        ADD       A,#0x40
        SJMP      ??zclClosures_ProcessInDoorLockCmds_70
//  672         break;
//  673 
//  674       case COMMAND_CLOSURES_SET_USER_STATUS_RSP:
//  675         stat = zclClosures_ProcessInDoorLockSetUserStatusRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_51:
        MOV       A,R4
        ADD       A,#0x42
        SJMP      ??zclClosures_ProcessInDoorLockCmds_70
//  676         break;
//  677 
//  678       case COMMAND_CLOSURES_GET_USER_STATUS_RSP:
//  679         stat = zclClosures_ProcessInDoorLockGetUserStatusRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_52:
        MOV       A,R4
        ADD       A,#0x44
??zclClosures_ProcessInDoorLockCmds_33:
        MOV       R0,A
        CLR       A
        ADDC      A,R5
        MOV       R1,A
        MOV       A,R0
        MOV       R6,A
        MOV       A,R1
        MOV       R7,A
        LCALL     ??Subroutine179_0 & 0xFFFF
??CrossCallReturnLabel_421:
        JNZ       ??zclClosures_ProcessInDoorLockCmds_71
        LJMP      ??zclClosures_ProcessInDoorLockCmds_1 & 0xFFFF
//  680         break;
//  681 
//  682       case COMMAND_CLOSURES_SET_WEEK_DAY_SCHEDULE_RSP:
//  683         stat = zclClosures_ProcessInDoorLockSetWeekDayScheduleRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_53:
        MOV       A,R4
        ADD       A,#0x46
        SJMP      ??zclClosures_ProcessInDoorLockCmds_70
//  684         break;
//  685 
//  686       case COMMAND_CLOSURES_GET_WEEK_DAY_SCHEDULE_RSP:
//  687         stat = zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_54:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
        LCALL     ??zclClosures_ProcessInDoorLockGetWeekDaySchedu; Banked call to: zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
        LJMP      ??zclClosures_ProcessInDoorLockCmds_28 & 0xFFFF
//  688         break;
//  689 
//  690       case COMMAND_CLOSURES_CLEAR_WEEK_DAY_SCHEDULE_RSP:
//  691         stat = zclClosures_ProcessInDoorLockClearWeekDayScheduleRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_55:
        MOV       A,R4
        ADD       A,#0x4a
        SJMP      ??zclClosures_ProcessInDoorLockCmds_70
//  692         break;
//  693 
//  694       case COMMAND_CLOSURES_SET_YEAR_DAY_SCHEDULE_RSP:
//  695         stat = zclClosures_ProcessInDoorLockSetYearDayScheduleRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_56:
        MOV       A,R4
        ADD       A,#0x4c
        SJMP      ??zclClosures_ProcessInDoorLockCmds_70
//  696         break;
//  697 
//  698       case COMMAND_CLOSURES_GET_YEAR_DAY_SCHEDULE_RSP:
//  699         stat = zclClosures_ProcessInDoorLockGetYearDayScheduleRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_57:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
        LCALL     ??zclClosures_ProcessInDoorLockGetYearDaySchedu; Banked call to: zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
        LJMP      ??zclClosures_ProcessInDoorLockCmds_28 & 0xFFFF
//  700         break;
//  701 
//  702       case COMMAND_CLOSURES_CLEAR_YEAR_DAY_SCHEDULE_RSP:
//  703         stat = zclClosures_ProcessInDoorLockClearYearDayScheduleRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_58:
        MOV       A,R4
        ADD       A,#0x50
        SJMP      ??zclClosures_ProcessInDoorLockCmds_70
//  704         break;
//  705 
//  706       case COMMAND_CLOSURES_SET_HOLIDAY_SCHEDULE_RSP:
//  707         stat = zclClosures_ProcessInDoorLockSetHolidayScheduleRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_59:
        MOV       A,R4
        ADD       A,#0x52
        SJMP      ??zclClosures_ProcessInDoorLockCmds_70
//  708         break;
//  709 
//  710       case COMMAND_CLOSURES_GET_HOLIDAY_SCHEDULE_RSP:
//  711         stat = zclClosures_ProcessInDoorLockGetHolidayScheduleRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_60:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
        LCALL     ??zclClosures_ProcessInDoorLockGetHolidaySchedu; Banked call to: zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
        LJMP      ??zclClosures_ProcessInDoorLockCmds_28 & 0xFFFF
//  712         break;
//  713 
//  714       case COMMAND_CLOSURES_CLEAR_HOLIDAY_SCHEDULE_RSP:
//  715         stat = zclClosures_ProcessInDoorLockClearHolidayScheduleRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_61:
        MOV       A,R4
        ADD       A,#0x56
        SJMP      ??zclClosures_ProcessInDoorLockCmds_70
//  716         break;
//  717 
//  718       case COMMAND_CLOSURES_SET_USER_TYPE_RSP:
//  719         stat = zclClosures_ProcessInDoorLockSetUserTypeRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_62:
        MOV       A,R4
        ADD       A,#0x58
??zclClosures_ProcessInDoorLockCmds_70:
        LCALL     ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_286:
        JNZ       ??zclClosures_ProcessInDoorLockCmds_72
        ; Setup parameters for indirect call
        SJMP      ??zclClosures_ProcessInDoorLockCmds_1
//  720         break;
//  721 
//  722       case COMMAND_CLOSURES_GET_USER_TYPE_RSP:
//  723         stat = zclClosures_ProcessInDoorLockGetUserTypeRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_63:
        MOV       A,R4
        ADD       A,#0x5a
        MOV       R0,A
        CLR       A
        ADDC      A,R5
        MOV       R1,A
        MOV       A,R0
        MOV       R6,A
        MOV       A,R1
        MOV       R7,A
        LCALL     ??Subroutine179_0 & 0xFFFF
??CrossCallReturnLabel_422:
        JZ        ??zclClosures_ProcessInDoorLockCmds_1
??zclClosures_ProcessInDoorLockCmds_71:
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_127:
        MOVX      A,@DPTR
        MOV       ?V0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R5,A
        MOV       A,?V0
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R5
        LCALL     ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_175:
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_172:
        LCALL     ??Subroutine160_0 & 0xFFFF
??CrossCallReturnLabel_331:
        SJMP      ??CrossCallReturnLabel_89
//  724         break;
//  725 
//  726       case COMMAND_CLOSURES_SET_RFID_CODE_RSP:
//  727         stat = zclClosures_ProcessInDoorLockSetRFIDCodeRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_64:
        MOV       A,R4
        ADD       A,#0x5c
        LCALL     ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_287:
        JZ        ??zclClosures_ProcessInDoorLockCmds_1
        ; Setup parameters for indirect call
        SJMP      ??zclClosures_ProcessInDoorLockCmds_72
//  728         break;
//  729 
//  730       case COMMAND_CLOSURES_GET_RFID_CODE_RSP:
//  731         stat = zclClosures_ProcessInDoorLockGetRFIDCodeRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_65:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
        LCALL     `??zclClosures_ProcessInDoorLockGetRFIDCodeRsp::`; Banked call to: zclClosures_ProcessInDoorLockGetRFIDCodeRsp
        SJMP      ??zclClosures_ProcessInDoorLockCmds_28
//  732         break;
//  733 
//  734       case COMMAND_CLOSURES_CLEAR_RFID_CODE_RSP:
//  735         stat = zclClosures_ProcessInDoorLockClearRFIDCodeRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_66:
        MOV       A,R4
        ADD       A,#0x60
        SJMP      ??zclClosures_ProcessInDoorLockCmds_73
//  736         break;
//  737 
//  738       case COMMAND_CLOSURES_CLEAR_ALL_RFID_CODES_RSP:
//  739         stat = zclClosures_ProcessInDoorLockClearAllRFIDCodesRsp( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_67:
        MOV       A,R4
        ADD       A,#0x62
??zclClosures_ProcessInDoorLockCmds_73:
        LCALL     ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_288:
        JZ        ??zclClosures_ProcessInDoorLockCmds_1
        ; Setup parameters for indirect call
??zclClosures_ProcessInDoorLockCmds_72:
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_89:
        LCALL     ?CALL_IND
        SJMP      ??zclClosures_ProcessInDoorLockCmds_28
//  740         break;
//  741 
//  742       case COMMAND_CLOSURES_OPERATION_EVENT_NOTIFICATION:
//  743         stat = zclClosures_ProcessInDoorLockOperationEventNotification( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_68:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockOperationEventNotification
        LCALL     ??zclClosures_ProcessInDoorLockOperationEventNo; Banked call to: zclClosures_ProcessInDoorLockOperationEventNotification
        SJMP      ??zclClosures_ProcessInDoorLockCmds_28
//  744         break;
//  745 
//  746       case COMMAND_CLOSURES_PROGRAMMING_EVENT_NOTIFICATION:
//  747         stat = zclClosures_ProcessInDoorLockProgrammingEventNotification( pInMsg, pCBs );
??zclClosures_ProcessInDoorLockCmds_69:
        ; Setup parameters for call to function zclClosures_ProcessInDoorLockProgrammingEventNotification
        LCALL     ??zclClosures_ProcessInDoorLockProgrammingEvent; Banked call to: zclClosures_ProcessInDoorLockProgrammingEventNotification
??zclClosures_ProcessInDoorLockCmds_28:
        MOV       A,R1
        MOV       R1,A
//  748         break;     
        SJMP      ??zclClosures_ProcessInDoorLockCmds_74
//  749         
//  750 #endif //ZCL_DOORLOCK_EXT
//  751 
//  752       default:
//  753         // Unknown command
//  754         stat = ZFailure;
??zclClosures_ProcessInDoorLockCmds_1:
        MOV       R1,#0x1
//  755         break;
//  756     }
//  757   }
//  758 
//  759   return ( stat );
??zclClosures_ProcessInDoorLockCmds_74:
        MOV       A,#0x1e
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        MOV       R7,#0x3
        LJMP      ?BANKED_LEAVE_XDATA
//  760 }
          CFI EndBlock cfiBlock6

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine56:
          CFI Block cfiCond7 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_123
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond8 Using cfiCommon0
          CFI (cfiCond8) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond8) Conditional ??CrossCallReturnLabel_124
          CFI (cfiCond8) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond8) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond8) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond8) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond8) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond8) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond8) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond8) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond8) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond8) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond8) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond8) CFA_SP SP+-2
          CFI (cfiCond8) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiPicker9 Using cfiCommon1
          CFI (cfiPicker9) NoFunction
          CFI (cfiPicker9) Picker
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_361:
        MOV       DPH,A
        MOV       DPL,R4
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond7
          CFI EndBlock cfiCond8
          CFI EndBlock cfiPicker9

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine52:
          CFI Block cfiCond10 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_113
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond11 Using cfiCommon0
          CFI (cfiCond11) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond11) Conditional ??CrossCallReturnLabel_114
          CFI (cfiCond11) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond11) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond11) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond11) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond11) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond11) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond11) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond11) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond11) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond11) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond11) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond11) CFA_SP SP+-2
          CFI (cfiCond11) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiPicker12 Using cfiCommon1
          CFI (cfiPicker12) NoFunction
          CFI (cfiPicker12) Picker
        LCALL     ?Subroutine112 & 0xFFFF
??CrossCallReturnLabel_428:
        MOV       R6,A
        MOV       A,R1
        MOV       R7,A
        MOV       A,R0
        ORL       A,R7
        RET
          CFI EndBlock cfiCond10
          CFI EndBlock cfiCond11
          CFI EndBlock cfiPicker12

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine44:
          CFI Block cfiCond13 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_97
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond14 Using cfiCommon0
          CFI (cfiCond14) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond14) Conditional ??CrossCallReturnLabel_98
          CFI (cfiCond14) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond14) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond14) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond14) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond14) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond14) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond14) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond14) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond14) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond14) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond14) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond14) CFA_SP SP+-2
          CFI (cfiCond14) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiPicker15 Using cfiCommon1
          CFI (cfiPicker15) NoFunction
          CFI (cfiPicker15) Picker
        MOV       A,R5
        MOV       R6,A
        MOV       DPL,?V0
        MOV       DPH,?V1
        MOVX      A,@DPTR
        ADD       A,R6
        MOV       ?V2,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       DPL,?V2
        MOV       DPH,A
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond13
          CFI EndBlock cfiCond14
          CFI EndBlock cfiPicker15

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine27:
          CFI Block cfiCond16 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_286
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond17 Using cfiCommon0
          CFI (cfiCond17) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond17) Conditional ??CrossCallReturnLabel_287
          CFI (cfiCond17) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond17) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond17) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond17) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond17) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond17) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond17) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond17) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond17) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond17) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond17) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond17) CFA_SP SP+-2
          CFI (cfiCond17) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond18 Using cfiCommon0
          CFI (cfiCond18) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond18) Conditional ??CrossCallReturnLabel_288
          CFI (cfiCond18) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond18) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond18) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond18) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond18) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond18) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond18) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond18) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond18) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond18) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond18) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond18) CFA_SP SP+-2
          CFI (cfiCond18) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiPicker19 Using cfiCommon1
          CFI (cfiPicker19) NoFunction
          CFI (cfiPicker19) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,R5
        MOV       DPH,A
          CFI EndBlock cfiCond16
          CFI EndBlock cfiCond17
          CFI EndBlock cfiCond18
          CFI EndBlock cfiPicker19
        REQUIRE ??Subroutine141_0
        ; // Fall through to label ??Subroutine141_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine141_0:
          CFI Block cfiCond20 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLock
          CFI Conditional ??CrossCallReturnLabel_285
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond21 Using cfiCommon0
          CFI (cfiCond21) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond21) Conditional ??CrossCallReturnLabel_286
          CFI (cfiCond21) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond21) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond21) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond21) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond21) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond21) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond21) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond21) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond21) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond21) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond21) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond21) CFA_SP SP+-2
          CFI (cfiCond21) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond22 Using cfiCommon0
          CFI (cfiCond22) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond22) Conditional ??CrossCallReturnLabel_287
          CFI (cfiCond22) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond22) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond22) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond22) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond22) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond22) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond22) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond22) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond22) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond22) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond22) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond22) CFA_SP SP+-2
          CFI (cfiCond22) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond23 Using cfiCommon0
          CFI (cfiCond23) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond23) Conditional ??CrossCallReturnLabel_288
          CFI (cfiCond23) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond23) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond23) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond23) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond23) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond23) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond23) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond23) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond23) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond23) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond23) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond23) CFA_SP SP+-2
          CFI (cfiCond23) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiPicker24 Using cfiCommon1
          CFI (cfiPicker24) NoFunction
          CFI (cfiPicker24) Picker
        LCALL     ?Subroutine112 & 0xFFFF
??CrossCallReturnLabel_429:
        MOV       R4,A
        MOV       A,R1
        MOV       R5,A
        MOV       A,R0
        ORL       A,R5
        RET
          CFI EndBlock cfiCond20
          CFI EndBlock cfiCond21
          CFI EndBlock cfiCond22
          CFI EndBlock cfiCond23
          CFI EndBlock cfiPicker24

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine112:
          CFI Block cfiCond25 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_428, ??CrossCallReturnLabel_113
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond26 Using cfiCommon0
          CFI (cfiCond26) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond26) Conditional ??CrossCallReturnLabel_428, ??CrossCallReturnLabel_114
          CFI (cfiCond26) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond26) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond26) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond26) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond26) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond26) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond26) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond26) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond26) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond26) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond26) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond26) CFA_SP SP+-4
          CFI (cfiCond26) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond27 Using cfiCommon0
          CFI (cfiCond27) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond27) Conditional ??CrossCallReturnLabel_429, ??CrossCallReturnLabel_286
          CFI (cfiCond27) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond27) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond27) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond27) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond27) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond27) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond27) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond27) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond27) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond27) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond27) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond27) CFA_SP SP+-4
          CFI (cfiCond27) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond28 Using cfiCommon0
          CFI (cfiCond28) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond28) Conditional ??CrossCallReturnLabel_429, ??CrossCallReturnLabel_287
          CFI (cfiCond28) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond28) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond28) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond28) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond28) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond28) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond28) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond28) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond28) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond28) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond28) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond28) CFA_SP SP+-4
          CFI (cfiCond28) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond29 Using cfiCommon0
          CFI (cfiCond29) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond29) Conditional ??CrossCallReturnLabel_429, ??CrossCallReturnLabel_288
          CFI (cfiCond29) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond29) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond29) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond29) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond29) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond29) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond29) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond29) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond29) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond29) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond29) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond29) CFA_SP SP+-4
          CFI (cfiCond29) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond30 Using cfiCommon0
          CFI (cfiCond30) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond30) Conditional ??CrossCallReturnLabel_429, ??CrossCallReturnLabel_285
          CFI (cfiCond30) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond30) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond30) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond30) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond30) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond30) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond30) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond30) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond30) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond30) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond30) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond30) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond30) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond30) CFA_SP SP+-4
          CFI (cfiCond30) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond31 Using cfiCommon0
          CFI (cfiCond31) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond31) Conditional ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_423
          CFI (cfiCond31) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond31) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond31) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond31) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond31) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond31) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond31) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond31) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond31) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond31) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond31) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond31) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond31) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond31) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond31) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond31) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond31) CFA_SP SP+-4
          CFI (cfiCond31) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond32 Using cfiCommon0
          CFI (cfiCond32) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond32) Conditional ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_424
          CFI (cfiCond32) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond32) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond32) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond32) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond32) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond32) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond32) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond32) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond32) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond32) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond32) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond32) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond32) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond32) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond32) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond32) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond32) CFA_SP SP+-4
          CFI (cfiCond32) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond33 Using cfiCommon0
          CFI (cfiCond33) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond33) Conditional ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_425
          CFI (cfiCond33) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond33) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond33) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond33) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond33) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond33) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond33) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond33) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond33) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond33) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond33) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond33) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond33) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond33) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond33) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond33) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond33) CFA_SP SP+-4
          CFI (cfiCond33) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond34 Using cfiCommon0
          CFI (cfiCond34) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond34) Conditional ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_426
          CFI (cfiCond34) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond34) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond34) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond34) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond34) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond34) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond34) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond34) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond34) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond34) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond34) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond34) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond34) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond34) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond34) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond34) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond34) CFA_SP SP+-4
          CFI (cfiCond34) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond35 Using cfiCommon0
          CFI (cfiCond35) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond35) Conditional ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_427
          CFI (cfiCond35) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond35) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond35) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond35) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond35) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond35) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond35) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond35) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond35) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond35) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond35) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond35) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond35) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond35) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond35) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond35) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond35) CFA_SP SP+-4
          CFI (cfiCond35) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond36 Using cfiCommon0
          CFI (cfiCond36) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond36) Conditional ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_421
          CFI (cfiCond36) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond36) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond36) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond36) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond36) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond36) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond36) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond36) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond36) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond36) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond36) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond36) CFA_SP SP+-4
          CFI (cfiCond36) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond37 Using cfiCommon0
          CFI (cfiCond37) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond37) Conditional ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_422
          CFI (cfiCond37) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond37) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond37) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond37) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond37) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond37) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond37) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond37) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond37) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond37) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond37) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond37) CFA_SP SP+-4
          CFI (cfiCond37) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond38 Using cfiCommon0
          CFI (cfiCond38) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond38) Conditional ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_413
          CFI (cfiCond38) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond38) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond38) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond38) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond38) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond38) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond38) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond38) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond38) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond38) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond38) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond38) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond38) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond38) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond38) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond38) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond38) CFA_SP SP+-4
          CFI (cfiCond38) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond39 Using cfiCommon0
          CFI (cfiCond39) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond39) Conditional ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_414
          CFI (cfiCond39) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond39) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond39) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond39) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond39) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond39) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond39) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond39) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond39) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond39) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond39) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond39) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond39) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond39) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond39) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond39) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond39) CFA_SP SP+-4
          CFI (cfiCond39) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond40 Using cfiCommon0
          CFI (cfiCond40) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond40) Conditional ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_415
          CFI (cfiCond40) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond40) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond40) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond40) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond40) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond40) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond40) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond40) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond40) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond40) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond40) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond40) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond40) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond40) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond40) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond40) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond40) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond40) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond40) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond40) CFA_SP SP+-4
          CFI (cfiCond40) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond41 Using cfiCommon0
          CFI (cfiCond41) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond41) Conditional ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_416
          CFI (cfiCond41) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond41) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond41) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond41) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond41) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond41) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond41) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond41) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond41) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond41) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond41) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond41) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond41) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond41) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond41) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond41) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond41) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond41) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond41) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond41) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond41) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond41) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond41) CFA_SP SP+-4
          CFI (cfiCond41) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond42 Using cfiCommon0
          CFI (cfiCond42) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond42) Conditional ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_417
          CFI (cfiCond42) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond42) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond42) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond42) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond42) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond42) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond42) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond42) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond42) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond42) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond42) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond42) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond42) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond42) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond42) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond42) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond42) CFA_SP SP+-4
          CFI (cfiCond42) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond43 Using cfiCommon0
          CFI (cfiCond43) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond43) Conditional ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_418
          CFI (cfiCond43) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond43) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond43) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond43) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond43) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond43) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond43) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond43) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond43) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond43) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond43) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond43) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond43) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond43) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond43) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond43) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond43) CFA_SP SP+-4
          CFI (cfiCond43) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond44 Using cfiCommon0
          CFI (cfiCond44) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond44) Conditional ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_419
          CFI (cfiCond44) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond44) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond44) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond44) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond44) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond44) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond44) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond44) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond44) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond44) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond44) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond44) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond44) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond44) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond44) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond44) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond44) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond44) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond44) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond44) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond44) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond44) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond44) CFA_SP SP+-4
          CFI (cfiCond44) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond45 Using cfiCommon0
          CFI (cfiCond45) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond45) Conditional ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_420
          CFI (cfiCond45) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond45) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond45) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond45) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond45) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond45) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond45) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond45) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond45) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond45) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond45) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond45) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond45) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond45) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond45) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond45) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond45) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond45) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond45) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond45) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond45) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond45) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond45) CFA_SP SP+-4
          CFI (cfiCond45) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond46 Using cfiCommon0
          CFI (cfiCond46) Function zclClosures_HdlIncoming
          CFI (cfiCond46) Conditional ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_409
          CFI (cfiCond46) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond46) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond46) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond46) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond46) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond46) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond46) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond46) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond46) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond46) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond46) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond46) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond46) CFA_SP SP+-4
          CFI (cfiCond46) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond47 Using cfiCommon0
          CFI (cfiCond47) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond47) Conditional ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_410
          CFI (cfiCond47) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond47) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond47) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond47) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond47) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond47) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond47) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond47) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond47) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond47) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond47) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond47) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond47) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond47) CFA_SP SP+-4
          CFI (cfiCond47) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond48 Using cfiCommon0
          CFI (cfiCond48) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond48) Conditional ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_411
          CFI (cfiCond48) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond48) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond48) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond48) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond48) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond48) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond48) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond48) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond48) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond48) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond48) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond48) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond48) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond48) CFA_SP SP+-4
          CFI (cfiCond48) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond49 Using cfiCommon0
          CFI (cfiCond49) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond49) Conditional ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_412
          CFI (cfiCond49) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond49) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond49) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond49) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond49) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond49) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond49) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond49) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond49) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond49) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond49) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond49) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond49) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond49) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond49) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond49) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond49) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond49) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond49) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond49) CFA_SP SP+-4
          CFI (cfiCond49) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker50 Using cfiCommon1
          CFI (cfiPicker50) NoFunction
          CFI (cfiPicker50) Picker
        LCALL     ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_450:
        MOV       A,R0
        RET
          CFI EndBlock cfiCond25
          CFI EndBlock cfiCond26
          CFI EndBlock cfiCond27
          CFI EndBlock cfiCond28
          CFI EndBlock cfiCond29
          CFI EndBlock cfiCond30
          CFI EndBlock cfiCond31
          CFI EndBlock cfiCond32
          CFI EndBlock cfiCond33
          CFI EndBlock cfiCond34
          CFI EndBlock cfiCond35
          CFI EndBlock cfiCond36
          CFI EndBlock cfiCond37
          CFI EndBlock cfiCond38
          CFI EndBlock cfiCond39
          CFI EndBlock cfiCond40
          CFI EndBlock cfiCond41
          CFI EndBlock cfiCond42
          CFI EndBlock cfiCond43
          CFI EndBlock cfiCond44
          CFI EndBlock cfiCond45
          CFI EndBlock cfiCond46
          CFI EndBlock cfiCond47
          CFI EndBlock cfiCond48
          CFI EndBlock cfiCond49
          CFI EndBlock cfiPicker50
//  761 
//  762 /*********************************************************************
//  763  * @fn      zclClosures_ProcessInDoorLock
//  764  *
//  765  * @brief   Process in the received Door Lock cmds
//  766  *
//  767  * @param   pInMsg - pointer to the incoming message
//  768  * @param   pCBs - pointer to the application callbacks
//  769  *
//  770  * @return  ZStatus_t
//  771  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  772 static ZStatus_t zclClosures_ProcessInDoorLock( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLock:
          CFI Block cfiBlock51 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLock
        CODE
//  773                                                 zclClosures_DoorLockAppCallbacks_t *pCBs )
//  774 {
        FUNCALL zclClosures_ProcessInDoorLock, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLock, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        MOV       A,#-0xd
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
        ; Saved register size: 13
        ; Auto size: 2
        MOV       A,#-0x2
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
        MOV       ?V0,R4
        MOV       ?V1,R5
//  775   ZStatus_t status;
//  776 
//  777   // Client-to-Server
//  778   if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
        LCALL     ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_205:
        LCALL     ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_92:
        JNZ       ??zclClosures_ProcessInDoorLock_0
//  779   {
//  780     switch(pInMsg->hdr.commandID)
        MOVX      A,@DPTR
        JZ        ??zclClosures_ProcessInDoorLock_1
        DEC       A
        JZ        ??zclClosures_ProcessInDoorLock_1
        DEC       A
        JNZ       ??zclClosures_ProcessInDoorLock_2
//  781     {
//  782       case COMMAND_CLOSURES_LOCK_DOOR:
//  783       case COMMAND_CLOSURES_UNLOCK_DOOR:
//  784       case COMMAND_CLOSURES_TOGGLE_DOOR:
//  785         if ( pCBs->pfnDoorLock )
??zclClosures_ProcessInDoorLock_1:
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine181_0 & 0xFFFF
??CrossCallReturnLabel_410:
        JZ        ??zclClosures_ProcessInDoorLock_2
//  786         {
//  787           uint8 i;
//  788           uint8 calculatedArrayLen;
//  789           zclDoorLock_t cmd;
//  790 
//  791           // first octet of PIN/RFID Code variable string identifies its length
//  792           calculatedArrayLen = pInMsg->pData[0] + 1; // add first byte of string
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine183_0 & 0xFFFF
??CrossCallReturnLabel_440:
        MOV       ?V4,A
//  793 
//  794           cmd.pPinRfidCode = zcl_mem_alloc( calculatedArrayLen );
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,#0x0
        LCALL     ?Subroutine76 & 0xFFFF
//  795 
//  796           if ( !cmd.pPinRfidCode )
??CrossCallReturnLabel_167:
        LCALL     ??Subroutine181_0 & 0xFFFF
??CrossCallReturnLabel_411:
        JNZ       ??zclClosures_ProcessInDoorLock_3
//  797           {
//  798             return ( ZMemError );  // no memory
        MOV       R1,#0x10
        SJMP      ??zclClosures_ProcessInDoorLock_4
//  799           }
//  800 
//  801           for ( i = 0; i < calculatedArrayLen; i++ )
??zclClosures_ProcessInDoorLock_3:
        MOV       R2,#0x0
        SJMP      ??zclClosures_ProcessInDoorLock_5
//  802           {
//  803             cmd.pPinRfidCode[i] = pInMsg->pData[i];
??zclClosures_ProcessInDoorLock_6:
        MOV       A,R2
        MOV       R0,A
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ?Subroutine51 & 0xFFFF
//  804           }
??CrossCallReturnLabel_111:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_234:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R2
??zclClosures_ProcessInDoorLock_5:
        MOV       A,R2
        CLR       C
        SUBB      A,?V4
        JC        ??zclClosures_ProcessInDoorLock_6
//  805 
//  806           status = ( pCBs->pfnDoorLock( pInMsg, &cmd ) );
        ; Setup parameters for indirect call
        LCALL     ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_345:
        LCALL     ?CALL_IND
        MOV       A,R1
        MOV       R6,A
//  807           zcl_mem_free( cmd.pPinRfidCode );
        ; Setup parameters for call to function osal_mem_free
        LCALL     ?Subroutine19 & 0xFFFF
//  808           return status;
//  809         }
//  810 
//  811         return ( ZCL_STATUS_FAILURE );
//  812         break;
//  813 
//  814       default:
//  815         return ( ZFailure );   // Error ignore the command
//  816     }
//  817   }
??CrossCallReturnLabel_384:
        SJMP      ??zclClosures_ProcessInDoorLock_4
//  818   // Server-to-Client
//  819   else
//  820   {
//  821     switch(pInMsg->hdr.commandID)
??zclClosures_ProcessInDoorLock_0:
        MOVX      A,@DPTR
        JZ        ??zclClosures_ProcessInDoorLock_7
        DEC       A
        JZ        ??zclClosures_ProcessInDoorLock_7
        DEC       A
        JNZ       ??zclClosures_ProcessInDoorLock_2
//  822     {
//  823       case COMMAND_CLOSURES_LOCK_DOOR_RSP:
//  824       case COMMAND_CLOSURES_UNLOCK_DOOR_RSP:
//  825       case COMMAND_CLOSURES_TOGGLE_DOOR_RSP:
//  826         if ( pCBs->pfnDoorLockRsp )
??zclClosures_ProcessInDoorLock_7:
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine141_0 & 0xFFFF
??CrossCallReturnLabel_285:
        JZ        ??zclClosures_ProcessInDoorLock_2
//  827         {
//  828           return ( pCBs->pfnDoorLockRsp( pInMsg, pInMsg->pData[0] ) );
        ; Setup parameters for indirect call
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ?Subroutine40 & 0xFFFF
//  829         }
??CrossCallReturnLabel_90:
        LCALL     ?CALL_IND
        SJMP      ??zclClosures_ProcessInDoorLock_4
//  830 
//  831         return ( ZCL_STATUS_FAILURE );
//  832         break;
//  833 
//  834       default:
//  835         return ( ZFailure );   // Error ignore the command
??zclClosures_ProcessInDoorLock_2:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLock_4:
        MOV       A,#0x2
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV       R7,#0x5
        LJMP      ?BANKED_LEAVE_XDATA
//  836     }
//  837   }
//  838 }
          CFI EndBlock cfiBlock51

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine41:
          CFI Block cfiCond52 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_91
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond53 Using cfiCommon0
          CFI (cfiCond53) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond53) Conditional ??CrossCallReturnLabel_92
          CFI (cfiCond53) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond53) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond53) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond53) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond53) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond53) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond53) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond53) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond53) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond53) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond53) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond53) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond53) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond53) CFA_SP SP+-2
          CFI (cfiCond53) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker54 Using cfiCommon1
          CFI (cfiPicker54) NoFunction
          CFI (cfiPicker54) Picker
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        ANL       A,#0x8
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond52
          CFI EndBlock cfiCond53
          CFI EndBlock cfiPicker54

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine40:
          CFI Block cfiCond55 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_89
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond56 Using cfiCommon0
          CFI (cfiCond56) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond56) Conditional ??CrossCallReturnLabel_90
          CFI (cfiCond56) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond56) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond56) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond56) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond56) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond56) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond56) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond56) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond56) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond56) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond56) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond56) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond56) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond56) CFA_SP SP+-2
          CFI (cfiCond56) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker57 Using cfiCommon1
          CFI (cfiPicker57) NoFunction
          CFI (cfiPicker57) Picker
        LCALL     ?Subroutine113 & 0xFFFF
??CrossCallReturnLabel_237:
        MOV       R1,A
        MOV       DPL,R4
        MOV       DPH,R5
        RET
          CFI EndBlock cfiCond55
          CFI EndBlock cfiCond56
          CFI EndBlock cfiPicker57
//  839 
//  840 #ifdef ZCL_DOORLOCK_EXT
//  841 /*********************************************************************
//  842  * @fn      zclClosures_ProcessInDoorLockUnlockWithTimeout
//  843  *
//  844  * @brief   Process in the received Unlock With Timeout cmd
//  845  *
//  846  * @param   pInMsg - pointer to the incoming message
//  847  * @param   pCBs - pointer to the application callbacks
//  848  *
//  849  * @return  ZStatus_t
//  850  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  851 static ZStatus_t zclClosures_ProcessInDoorLockUnlockWithTimeout( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockUnlockWithTimeout:
          CFI Block cfiBlock58 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockUnlockWithTimeout
        CODE
//  852                                                                  zclClosures_DoorLockAppCallbacks_t *pCBs )
//  853 {
        FUNCALL zclClosures_ProcessInDoorLockUnlockWithTimeout, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockUnlockWithTimeout, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 4
        MOV       A,#-0x4
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
//  854   ZStatus_t status;
//  855 
//  856   if ( pCBs->pfnDoorLockUnlockWithTimeout )
        MOV       A,R4
        ADD       A,#0x4
        LCALL     ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_423:
        JZ        ??zclClosures_ProcessInDoorLockUnlockWithTimeou_1
//  857   {
//  858     uint8 i;
//  859     uint8 offset;
//  860     uint8 calculatedArrayLen;
//  861     zclDoorLockUnlockTimeout_t cmd;
//  862 
//  863     // first octet of PIN/RFID Code variable string identifies its length
//  864     calculatedArrayLen = pInMsg->pData[2] + 1;  // add first byte of string
        LCALL     ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_206:
        MOV       DPL,R0
        MOV       DPH,A
        LCALL     ??Subroutine160_0 & 0xFFFF
??CrossCallReturnLabel_332:
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        INC       A
        MOV       ?V4,A
//  865 
//  866     cmd.pPinRfidCode = zcl_mem_alloc( calculatedArrayLen );
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,#0x0
        LCALL     ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_198:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine67 & 0xFFFF
//  867     if ( !cmd.pPinRfidCode )
??CrossCallReturnLabel_144:
        JNZ       ??zclClosures_ProcessInDoorLockUnlockWithTimeou_2
//  868     {
//  869       return ( ZMemError );  // no memory
        MOV       R1,#0x10
        SJMP      ??zclClosures_ProcessInDoorLockUnlockWithTimeou_3
//  870     }
//  871 
//  872     cmd.timeout = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
??zclClosures_ProcessInDoorLockUnlockWithTimeou_2:
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_130:
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,R2
        LCALL     ?Subroutine84 & 0xFFFF
//  873     offset = 2;
??CrossCallReturnLabel_301:
        MOV       R1,#0x2
//  874     for ( i = 0; i < calculatedArrayLen; i++ )
        MOV       R0,#0x0
        SJMP      ??zclClosures_ProcessInDoorLockUnlockWithTimeou_4
//  875     {
//  876       cmd.pPinRfidCode[i] = pInMsg->pData[offset++];
??zclClosures_ProcessInDoorLockUnlockWithTimeou_5:
        MOV       A,R1
        MOV       R2,A
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine190_0 & 0xFFFF
//  877     }
??CrossCallReturnLabel_459:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R0
        MOV       R2,A
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_47:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_ProcessInDoorLockUnlockWithTimeou_4:
        MOV       A,R0
        CLR       C
        SUBB      A,?V4
        JC        ??zclClosures_ProcessInDoorLockUnlockWithTimeou_5
//  878 
//  879     status = ( pCBs->pfnDoorLockUnlockWithTimeout( pInMsg, &cmd ) );
        ; Setup parameters for indirect call
        LCALL     ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_346:
        LCALL     ?CALL_IND
        MOV       A,R1
        MOV       R6,A
//  880     zcl_mem_free( cmd.pPinRfidCode );
        ; Setup parameters for call to function osal_mem_free
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine176_0 & 0xFFFF
//  881     return status;
//  882   }
??CrossCallReturnLabel_386:
        SJMP      ??zclClosures_ProcessInDoorLockUnlockWithTimeou_3
//  883 
//  884   return ( ZFailure );
??zclClosures_ProcessInDoorLockUnlockWithTimeou_1:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockUnlockWithTimeou_3:
        MOV       A,#0x4
        SJMP      ??Subroutine142_0
//  885 }
          CFI EndBlock cfiBlock58

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine92:
          CFI Block cfiCond59 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLock
          CFI Conditional ??CrossCallReturnLabel_205
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond60 Using cfiCommon0
          CFI (cfiCond60) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond60) Conditional ??CrossCallReturnLabel_206
          CFI (cfiCond60) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond60) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond60) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond60) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond60) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond60) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond60) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond60) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond60) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond60) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond60) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond60) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond60) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond60) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond60) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond60) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond60) CFA_SP SP+-2
          CFI (cfiCond60) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker61 Using cfiCommon1
          CFI (cfiPicker61) NoFunction
          CFI (cfiPicker61) Picker
        LCALL     ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_274:
        RET
          CFI EndBlock cfiCond59
          CFI EndBlock cfiCond60
          CFI EndBlock cfiPicker61

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine130:
          CFI Block cfiCond62 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLock
          CFI Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_205
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond63 Using cfiCommon0
          CFI (cfiCond63) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond63) Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_206
          CFI (cfiCond63) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond63) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond63) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond63) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond63) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond63) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond63) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond63) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond63) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond63) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond63) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond63) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond63) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond63) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond63) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond63) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond63) CFA_SP SP+-4
          CFI (cfiCond63) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond64 Using cfiCommon0
          CFI (cfiCond64) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond64) Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_12
          CFI (cfiCond64) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond64) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond64) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond64) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond64) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond64) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond64) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond64) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond64) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond64) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond64) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond64) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond64) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond64) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond64) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond64) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond64) CFA_SP SP+-4
          CFI (cfiCond64) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond65 Using cfiCommon0
          CFI (cfiCond65) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond65) Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_13
          CFI (cfiCond65) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond65) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond65) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond65) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond65) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond65) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond65) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond65) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond65) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond65) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond65) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond65) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond65) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond65) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond65) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond65) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond65) CFA_SP SP+-4
          CFI (cfiCond65) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond66 Using cfiCommon0
          CFI (cfiCond66) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond66) Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_14
          CFI (cfiCond66) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond66) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond66) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond66) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond66) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond66) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond66) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond66) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond66) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond66) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond66) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond66) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond66) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond66) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond66) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond66) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond66) CFA_SP SP+-4
          CFI (cfiCond66) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond67 Using cfiCommon0
          CFI (cfiCond67) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond67) Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_15
          CFI (cfiCond67) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond67) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond67) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond67) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond67) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond67) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond67) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond67) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond67) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond67) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond67) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond67) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond67) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond67) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond67) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond67) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond67) CFA_SP SP+-4
          CFI (cfiCond67) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker68 Using cfiCommon1
          CFI (cfiPicker68) NoFunction
          CFI (cfiPicker68) Picker
        MOV       A,R2
        ADD       A,#0x8
        MOV       R0,A
        CLR       A
        ADDC      A,R7
        MOV       ?V2,R0
        MOV       ?V3,A
        RET
          CFI EndBlock cfiCond62
          CFI EndBlock cfiCond63
          CFI EndBlock cfiCond64
          CFI EndBlock cfiCond65
          CFI EndBlock cfiCond66
          CFI EndBlock cfiCond67
          CFI EndBlock cfiPicker68

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine60:
          CFI Block cfiCond69 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_129
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond70 Using cfiCommon0
          CFI (cfiCond70) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond70) Conditional ??CrossCallReturnLabel_130
          CFI (cfiCond70) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond70) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond70) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond70) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond70) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond70) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond70) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond70) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond70) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond70) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond70) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond70) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond70) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond70) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond70) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond70) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond70) CFA_SP SP+-2
          CFI (cfiCond70) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker71 Using cfiCommon1
          CFI (cfiPicker71) NoFunction
          CFI (cfiPicker71) Picker
        LCALL     ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_245:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond69
          CFI EndBlock cfiCond70
          CFI EndBlock cfiPicker71

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine117:
          CFI Block cfiCond72 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_244
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond73 Using cfiCommon0
          CFI (cfiCond73) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond73) Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_129
          CFI (cfiCond73) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond73) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond73) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond73) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond73) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond73) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond73) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond73) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond73) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond73) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond73) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond73) CFA_SP SP+-4
          CFI (cfiCond73) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond74 Using cfiCommon0
          CFI (cfiCond74) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond74) Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_130
          CFI (cfiCond74) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond74) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond74) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond74) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond74) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond74) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond74) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond74) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond74) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond74) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond74) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond74) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond74) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond74) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond74) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond74) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond74) CFA_SP SP+-4
          CFI (cfiCond74) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker75 Using cfiCommon1
          CFI (cfiPicker75) NoFunction
          CFI (cfiPicker75) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPL,R0
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond72
          CFI EndBlock cfiCond73
          CFI EndBlock cfiCond74
          CFI EndBlock cfiPicker75
//  886 
//  887 /*********************************************************************
//  888  * @fn      zclClosures_ProcessInDoorLockGetLogRecord
//  889  *
//  890  * @brief   Process in the received Get Log Record cmd
//  891  *
//  892  * @param   pInMsg - pointer to the incoming message
//  893  * @param   pCBs - pointer to the application callbacks
//  894  *
//  895  * @return  ZStatus_t
//  896  */
//  897 static ZStatus_t zclClosures_ProcessInDoorLockGetLogRecord( zclIncoming_t *pInMsg,
//  898                                                             zclClosures_DoorLockAppCallbacks_t *pCBs )
//  899 {
//  900   if ( pCBs->pfnDoorLockGetLogRecord )
//  901   {
//  902     zclDoorLockGetLogRecord_t cmd;
//  903 
//  904     cmd.logIndex = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
//  905 
//  906     return ( pCBs->pfnDoorLockGetLogRecord( pInMsg, &cmd ) );
//  907   }
//  908 
//  909   return ( ZFailure );
//  910 }
//  911 
//  912 /*********************************************************************
//  913  * @fn      zclClosures_ProcessInDoorLockSetPINCode
//  914  *
//  915  * @brief   Process in the received Set PIN Code cmd
//  916  *
//  917  * @param   pInMsg - pointer to the incoming message
//  918  * @param   pCBs - pointer to the application callbacks
//  919  *
//  920  * @return  ZStatus_t
//  921  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine1:
          CFI Block cfiBlock76 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,#0x6
          CFI EndBlock cfiBlock76
        REQUIRE ??Subroutine142_0
        ; // Fall through to label ??Subroutine142_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine142_0:
          CFI Block cfiBlock77 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Valid
        MOV       R7,#0x8
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock77

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  922 static ZStatus_t zclClosures_ProcessInDoorLockSetPINCode( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockSetPINCode:
          CFI Block cfiBlock78 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetPINCode
        CODE
//  923                                                           zclClosures_DoorLockAppCallbacks_t *pCBs )
//  924 {
        FUNCALL zclClosures_ProcessInDoorLockSetPINCode, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockSetPINCode, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 6
        MOV       A,#-0x6
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
//  925  if ( pCBs->pfnDoorLockSetPINCode )
        MOV       A,R4
        ADD       A,#0x8
        LCALL     ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_424:
        JZ        ??zclClosures_ProcessInDoorLockSetPINCode_0
//  926  {
//  927     uint8 i;
//  928     uint8 offset;
//  929     uint8 calculatedArrayLen;
//  930     zclDoorLockSetPINCode_t cmd;
//  931     ZStatus_t status;
//  932 
//  933     // first octet of PIN/RFID Code variable string identifies its length
//  934     calculatedArrayLen = pInMsg->pData[4] + 1; // add first byte of string
        LCALL     ?Subroutine16 & 0xFFFF
//  935 
//  936     cmd.pPIN = zcl_mem_alloc( calculatedArrayLen );
??CrossCallReturnLabel_12:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine67 & 0xFFFF
//  937     if ( !cmd.pPIN )
??CrossCallReturnLabel_145:
        JNZ       ??zclClosures_ProcessInDoorLockSetPINCode_1
//  938     {
//  939       return ( ZMemError );  // no memory
        MOV       R1,#0x10
        SJMP      ??zclClosures_ProcessInDoorLockSetPINCode_2
//  940     }
//  941 
//  942     cmd.userID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
??zclClosures_ProcessInDoorLockSetPINCode_1:
        LCALL     ?Subroutine12 & 0xFFFF
//  943     cmd.userStatus = pInMsg->pData[2];
??CrossCallReturnLabel_8:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine26 & 0xFFFF
//  944     cmd.userType = pInMsg->pData[3];
??CrossCallReturnLabel_61:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine80 & 0xFFFF
//  945     offset = 4;
//  946     for ( i = 0; i < calculatedArrayLen; i++ )
??CrossCallReturnLabel_176:
        SJMP      ??zclClosures_ProcessInDoorLockSetPINCode_3
//  947     {
//  948       cmd.pPIN[i] = pInMsg->pData[offset++];
??zclClosures_ProcessInDoorLockSetPINCode_4:
        MOV       A,R1
        MOV       R2,A
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine190_0 & 0xFFFF
//  949     }
??CrossCallReturnLabel_460:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R0
        MOV       R2,A
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_48:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_ProcessInDoorLockSetPINCode_3:
        MOV       A,R0
        CLR       C
        SUBB      A,?V4
        JC        ??zclClosures_ProcessInDoorLockSetPINCode_4
//  950 
//  951     status = ( pCBs->pfnDoorLockSetPINCode( pInMsg, &cmd ) );
        ; Setup parameters for indirect call
        LCALL     ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_347:
        LCALL     ?CALL_IND
        MOV       A,R1
        MOV       R6,A
//  952     zcl_mem_free( cmd.pPIN );
        ; Setup parameters for call to function osal_mem_free
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine176_0 & 0xFFFF
//  953     return status;
//  954  }
??CrossCallReturnLabel_387:
        SJMP      ??zclClosures_ProcessInDoorLockSetPINCode_2
//  955 
//  956  return ( ZFailure );
??zclClosures_ProcessInDoorLockSetPINCode_0:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockSetPINCode_2:
        LJMP      ?Subroutine1 & 0xFFFF
//  957 }
          CFI EndBlock cfiBlock78
//  958 
//  959 /*********************************************************************
//  960  * @fn      zclClosures_ProcessInDoorLockGetPINCode
//  961  *
//  962  * @brief   Process in the received Get PIN Code cmd
//  963  *
//  964  * @param   pInMsg - pointer to the incoming message
//  965  * @param   pCBs - pointer to the application callbacks
//  966  *
//  967  * @return  ZStatus_t
//  968  */
//  969 static ZStatus_t zclClosures_ProcessInDoorLockGetPINCode( zclIncoming_t *pInMsg,
//  970                                                           zclClosures_DoorLockAppCallbacks_t *pCBs )
//  971 {
//  972  if ( pCBs->pfnDoorLockGetPINCode )
//  973  {
//  974    zclDoorLockUserID_t cmd;
//  975 
//  976    cmd.userID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
//  977 
//  978    return ( pCBs->pfnDoorLockGetPINCode( pInMsg, &cmd ) );
//  979  }
//  980 
//  981  return ( ZFailure );
//  982 }
//  983 
//  984 /*********************************************************************
//  985  * @fn      zclClosures_ProcessInDoorLockClearPINCode
//  986  *
//  987  * @brief   Process in the received Clear PIN Code cmd
//  988  *
//  989  * @param   pInMsg - pointer to the incoming message
//  990  * @param   pCBs - pointer to the application callbacks
//  991  *
//  992  * @return  ZStatus_t
//  993  */
//  994 static ZStatus_t zclClosures_ProcessInDoorLockClearPINCode( zclIncoming_t *pInMsg,
//  995                                                             zclClosures_DoorLockAppCallbacks_t *pCBs )
//  996 {
//  997  if ( pCBs->pfnDoorLockClearPINCode )
//  998  {
//  999    zclDoorLockUserID_t cmd;
// 1000 
// 1001    cmd.userID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
// 1002 
// 1003    return ( pCBs->pfnDoorLockClearPINCode( pInMsg, &cmd ) );
// 1004  }
// 1005 
// 1006  return ( ZFailure );
// 1007 }
// 1008 
// 1009 /*********************************************************************
// 1010  * @fn      zclClosures_ProcessInDoorLockClearAllPINCodes
// 1011  *
// 1012  * @brief   Process in the received Clear All PIN Codes cmd
// 1013  *
// 1014  * @param   pInMsg - pointer to the incoming message
// 1015  * @param   pCBs - pointer to the application callbacks
// 1016  *
// 1017  * @return  ZStatus_t
// 1018  */
// 1019 static ZStatus_t zclClosures_ProcessInDoorLockClearAllPINCodes( zclIncoming_t *pInMsg,
// 1020                                                                 zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1021 {
// 1022  if ( pCBs->pfnDoorLockClearAllPINCodes )
// 1023  {
// 1024    // no payload
// 1025 
// 1026    return ( pCBs->pfnDoorLockClearAllPINCodes( pInMsg ) );
// 1027  }
// 1028 
// 1029  return ( ZFailure );
// 1030 }
// 1031 
// 1032 /*********************************************************************
// 1033  * @fn      zclClosures_ProcessInDoorLockSetUserStatus
// 1034  *
// 1035  * @brief   Process in the received Set User Status cmd
// 1036  *
// 1037  * @param   pInMsg - pointer to the incoming message
// 1038  * @param   pCBs - pointer to the application callbacks
// 1039  *
// 1040  * @return  ZStatus_t
// 1041  */
// 1042 static ZStatus_t zclClosures_ProcessInDoorLockSetUserStatus( zclIncoming_t *pInMsg,
// 1043                                                              zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1044 {
// 1045  if ( pCBs->pfnDoorLockSetUserStatus )
// 1046  {
// 1047    zclDoorLockSetUserStatus_t cmd;
// 1048 
// 1049    cmd.userID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
// 1050    cmd.userStatus = pInMsg->pData[2];
// 1051 
// 1052    return ( pCBs->pfnDoorLockSetUserStatus( pInMsg, &cmd ) );
// 1053  }
// 1054 
// 1055  return ( ZFailure );
// 1056 }
// 1057 
// 1058 /*********************************************************************
// 1059  * @fn      zclClosures_ProcessInDoorLockGetUserStatus
// 1060  *
// 1061  * @brief   Process in the received Get User Status cmd
// 1062  *
// 1063  * @param   pInMsg - pointer to the incoming message
// 1064  * @param   pCBs - pointer to the application callbacks
// 1065  *
// 1066  * @return  ZStatus_t
// 1067  */
// 1068 static ZStatus_t zclClosures_ProcessInDoorLockGetUserStatus( zclIncoming_t *pInMsg,
// 1069                                                              zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1070 {
// 1071  if ( pCBs->pfnDoorLockGetUserStatus )
// 1072  {
// 1073    zclDoorLockUserID_t cmd;
// 1074 
// 1075    cmd.userID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
// 1076 
// 1077    return ( pCBs->pfnDoorLockGetUserStatus( pInMsg, &cmd ) );
// 1078  }
// 1079 
// 1080  return ( ZFailure );
// 1081 }
// 1082 
// 1083 /*********************************************************************
// 1084  * @fn      zclClosures_ProcessInDoorLockSetWeekDaySchedule
// 1085  *
// 1086  * @brief   Process in the received Set Week Day Schedule cmd
// 1087  *
// 1088  * @param   pInMsg - pointer to the incoming message
// 1089  * @param   pCBs - pointer to the application callbacks
// 1090  *
// 1091  * @return  ZStatus_t
// 1092  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1093 static ZStatus_t zclClosures_ProcessInDoorLockSetWeekDaySchedule( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockSetWeekDaySchedule:
          CFI Block cfiBlock79 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
        CODE
// 1094                                                                   zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1095 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 8
        MOV       A,#-0x8
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
// 1096  if ( pCBs->pfnDoorLockSetWeekDaySchedule )
        MOV       A,R4
        ADD       A,#0x14
        LCALL     ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_295:
        JZ        ??zclClosures_ProcessInDoorLockSetWeekDaySchedu_1
// 1097  {
// 1098    zclDoorLockSetWeekDaySchedule_t cmd;
// 1099 
// 1100    cmd.scheduleID = pInMsg->pData[0];
        LCALL     ?Subroutine22 & 0xFFFF
// 1101    cmd.userID = BUILD_UINT16( pInMsg->pData[1], pInMsg->pData[2] );
??CrossCallReturnLabel_55:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine71 & 0xFFFF
// 1102    cmd.daysMask = pInMsg->pData[3];
??CrossCallReturnLabel_158:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 1103    cmd.startHour = pInMsg->pData[4];
        LCALL     ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_107:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine42 & 0xFFFF
// 1104    cmd.startMinute = pInMsg->pData[5];
??CrossCallReturnLabel_93:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine43 & 0xFFFF
// 1105    cmd.endHour = pInMsg->pData[6];
??CrossCallReturnLabel_95:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine77 & 0xFFFF
// 1106    cmd.endMinute = pInMsg->pData[7];
??CrossCallReturnLabel_169:
        ADD       A,#0x7
        MOV       DPL,A
        CLR       A
        ADDC      A,R4
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 1107 
// 1108    return ( pCBs->pfnDoorLockSetWeekDaySchedule( pInMsg, &cmd ) );
        ; Setup parameters for indirect call
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ??Subroutine160_0 & 0xFFFF
// 1109  }
??CrossCallReturnLabel_333:
        LCALL     ?CALL_IND
        SJMP      ??zclClosures_ProcessInDoorLockSetWeekDaySchedu_2
// 1110 
// 1111  return ( ZFailure );
??zclClosures_ProcessInDoorLockSetWeekDaySchedu_1:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockSetWeekDaySchedu_2:
          CFI EndBlock cfiBlock79
        REQUIRE ?Subroutine8
        ; // Fall through to label ?Subroutine8
// 1112 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine8:
          CFI Block cfiBlock80 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,#0x8
        LJMP      ??Subroutine186_0 & 0xFFFF
          CFI EndBlock cfiBlock80

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine24:
          CFI Block cfiCond81 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_290
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond82 Using cfiCommon0
          CFI (cfiCond82) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond82) Conditional ??CrossCallReturnLabel_291
          CFI (cfiCond82) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond82) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond82) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond82) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond82) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond82) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond82) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond82) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond82) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond82) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond82) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond82) CFA_SP SP+-2
          CFI (cfiCond82) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond83 Using cfiCommon0
          CFI (cfiCond83) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond83) Conditional ??CrossCallReturnLabel_292
          CFI (cfiCond83) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond83) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond83) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond83) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond83) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond83) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond83) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond83) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond83) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond83) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond83) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond83) CFA_SP SP+-2
          CFI (cfiCond83) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond84 Using cfiCommon0
          CFI (cfiCond84) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond84) Conditional ??CrossCallReturnLabel_293
          CFI (cfiCond84) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond84) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond84) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond84) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond84) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond84) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond84) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond84) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond84) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond84) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond84) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond84) CFA_SP SP+-2
          CFI (cfiCond84) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond85 Using cfiCommon0
          CFI (cfiCond85) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond85) Conditional ??CrossCallReturnLabel_294
          CFI (cfiCond85) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond85) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond85) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond85) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond85) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond85) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond85) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond85) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond85) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond85) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond85) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond85) CFA_SP SP+-2
          CFI (cfiCond85) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond86 Using cfiCommon0
          CFI (cfiCond86) Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI (cfiCond86) Conditional ??CrossCallReturnLabel_295
          CFI (cfiCond86) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond86) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond86) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond86) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond86) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond86) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond86) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond86) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond86) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond86) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond86) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond86) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond86) CFA_SP SP+-2
          CFI (cfiCond86) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond87 Using cfiCommon0
          CFI (cfiCond87) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond87) Conditional ??CrossCallReturnLabel_296
          CFI (cfiCond87) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond87) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond87) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond87) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond87) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond87) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond87) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond87) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond87) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond87) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond87) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond87) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond87) CFA_SP SP+-2
          CFI (cfiCond87) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker88 Using cfiCommon1
          CFI (cfiPicker88) NoFunction
          CFI (cfiPicker88) Picker
        MOV       R0,A
        CLR       A
        ADDC      A,R5
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,A
          CFI EndBlock cfiCond81
          CFI EndBlock cfiCond82
          CFI EndBlock cfiCond83
          CFI EndBlock cfiCond84
          CFI EndBlock cfiCond85
          CFI EndBlock cfiCond86
          CFI EndBlock cfiCond87
          CFI EndBlock cfiPicker88
        REQUIRE ??Subroutine143_0
        ; // Fall through to label ??Subroutine143_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine143_0:
          CFI Block cfiCond89 Using cfiCommon0
          CFI Function zclClosures_HdlIncoming
          CFI Conditional ??CrossCallReturnLabel_289
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond90 Using cfiCommon0
          CFI (cfiCond90) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond90) Conditional ??CrossCallReturnLabel_290
          CFI (cfiCond90) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond90) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond90) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond90) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond90) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond90) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond90) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond90) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond90) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond90) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond90) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond90) CFA_SP SP+-2
          CFI (cfiCond90) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond91 Using cfiCommon0
          CFI (cfiCond91) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond91) Conditional ??CrossCallReturnLabel_291
          CFI (cfiCond91) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond91) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond91) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond91) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond91) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond91) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond91) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond91) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond91) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond91) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond91) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond91) CFA_SP SP+-2
          CFI (cfiCond91) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond92 Using cfiCommon0
          CFI (cfiCond92) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond92) Conditional ??CrossCallReturnLabel_292
          CFI (cfiCond92) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond92) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond92) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond92) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond92) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond92) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond92) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond92) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond92) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond92) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond92) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond92) CFA_SP SP+-2
          CFI (cfiCond92) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond93 Using cfiCommon0
          CFI (cfiCond93) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond93) Conditional ??CrossCallReturnLabel_293
          CFI (cfiCond93) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond93) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond93) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond93) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond93) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond93) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond93) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond93) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond93) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond93) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond93) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond93) CFA_SP SP+-2
          CFI (cfiCond93) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond94 Using cfiCommon0
          CFI (cfiCond94) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond94) Conditional ??CrossCallReturnLabel_294
          CFI (cfiCond94) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond94) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond94) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond94) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond94) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond94) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond94) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond94) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond94) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond94) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond94) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond94) CFA_SP SP+-2
          CFI (cfiCond94) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond95 Using cfiCommon0
          CFI (cfiCond95) Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI (cfiCond95) Conditional ??CrossCallReturnLabel_295
          CFI (cfiCond95) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond95) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond95) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond95) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond95) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond95) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond95) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond95) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond95) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond95) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond95) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond95) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond95) CFA_SP SP+-2
          CFI (cfiCond95) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond96 Using cfiCommon0
          CFI (cfiCond96) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond96) Conditional ??CrossCallReturnLabel_296
          CFI (cfiCond96) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond96) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond96) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond96) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond96) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond96) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond96) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond96) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond96) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond96) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond96) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond96) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond96) CFA_SP SP+-2
          CFI (cfiCond96) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker97 Using cfiCommon1
          CFI (cfiPicker97) NoFunction
          CFI (cfiPicker97) Picker
        LCALL     ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_363:
        MOV       R5,A
        MOV       A,R4
        ORL       A,R5
        RET
          CFI EndBlock cfiCond89
          CFI EndBlock cfiCond90
          CFI EndBlock cfiCond91
          CFI EndBlock cfiCond92
          CFI EndBlock cfiCond93
          CFI EndBlock cfiCond94
          CFI EndBlock cfiCond95
          CFI EndBlock cfiCond96
          CFI EndBlock cfiPicker97
// 1113 
// 1114 /*********************************************************************
// 1115  * @fn      zclClosures_ProcessInDoorLockGetWeekDaySchedule
// 1116  *
// 1117  * @brief   Process in the received Get Week Day Schedule cmd
// 1118  *
// 1119  * @param   pInMsg - pointer to the incoming message
// 1120  * @param   pCBs - pointer to the application callbacks
// 1121  *
// 1122  * @return  ZStatus_t
// 1123  */
// 1124 static ZStatus_t zclClosures_ProcessInDoorLockGetWeekDaySchedule( zclIncoming_t *pInMsg,
// 1125                                                                   zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1126 {
// 1127  if ( pCBs->pfnDoorLockGetWeekDaySchedule )
// 1128  {
// 1129    zclDoorLockSchedule_t cmd;
// 1130 
// 1131    cmd.scheduleID = pInMsg->pData[0];
// 1132    cmd.userID = BUILD_UINT16( pInMsg->pData[1], pInMsg->pData[2] );
// 1133 
// 1134    return ( pCBs->pfnDoorLockGetWeekDaySchedule( pInMsg, &cmd ) );
// 1135  }
// 1136 
// 1137  return ( ZFailure );
// 1138 }
// 1139 
// 1140 /*********************************************************************
// 1141  * @fn      zclClosures_ProcessInDoorLockClearWeekDaySchedule
// 1142  *
// 1143  * @brief   Process in the received Clear Week Day Schedule cmd
// 1144  *
// 1145  * @param   pInMsg - pointer to the incoming message
// 1146  * @param   pCBs - pointer to the application callbacks
// 1147  *
// 1148  * @return  ZStatus_t
// 1149  */
// 1150 static ZStatus_t zclClosures_ProcessInDoorLockClearWeekDaySchedule( zclIncoming_t *pInMsg,
// 1151                                                                     zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1152 {
// 1153  if ( pCBs->pfnDoorLockClearWeekDaySchedule )
// 1154  {
// 1155    zclDoorLockSchedule_t cmd;
// 1156 
// 1157    cmd.scheduleID = pInMsg->pData[0];
// 1158    cmd.userID = BUILD_UINT16( pInMsg->pData[1], pInMsg->pData[2] );
// 1159 
// 1160    return ( pCBs->pfnDoorLockClearWeekDaySchedule( pInMsg, &cmd ) );
// 1161  }
// 1162 
// 1163  return ( ZFailure );
// 1164 }
// 1165 /*********************************************************************
// 1166  * @fn      zclClosures_ProcessInDoorLockSetYearDaySchedule
// 1167  *
// 1168  * @brief   Process in the received Set Year Day Schedule cmd
// 1169  *
// 1170  * @param   pInMsg - pointer to the incoming message
// 1171  * @param   pCBs - pointer to the application callbacks
// 1172  *
// 1173  * @return  ZStatus_t
// 1174  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1175 static ZStatus_t zclClosures_ProcessInDoorLockSetYearDaySchedule( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockSetYearDaySchedule:
          CFI Block cfiBlock98 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetYearDaySchedule
        CODE
// 1176                                                                   zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1177 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 11
        MOV       A,#-0xb
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
// 1178  if ( pCBs->pfnDoorLockSetYearDaySchedule )
        MOV       A,R4
        ADD       A,#0x1a
        MOV       R6,A
        CLR       A
        ADDC      A,R5
        MOV       R7,A
        MOV       DPL,R6
        LCALL     ??Subroutine180_0 & 0xFFFF
??CrossCallReturnLabel_413:
        JNZ       $+5
        LJMP      ??zclClosures_ProcessInDoorLockSetYearDaySchedu_1 & 0xFFFF
// 1179  {
// 1180    zclDoorLockSetYearDaySchedule_t cmd;
// 1181 
// 1182    cmd.scheduleID = pInMsg->pData[0];
        LCALL     ?Subroutine23 & 0xFFFF
// 1183    cmd.userID = BUILD_UINT16( pInMsg->pData[1], pInMsg->pData[2] );
??CrossCallReturnLabel_57:
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        LCALL     ??Subroutine144_0 & 0xFFFF
// 1184    cmd.zigBeeLocalStartTime = BUILD_UINT32( pInMsg->pData[3], pInMsg->pData[4], pInMsg->pData[5], pInMsg->pData[6] );
??CrossCallReturnLabel_299:
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine165_0 & 0xFFFF
??CrossCallReturnLabel_366:
        LCALL     ??Subroutine155_0 & 0xFFFF
??CrossCallReturnLabel_323:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine150_0 & 0xFFFF
??CrossCallReturnLabel_311:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine171_0 & 0xFFFF
??CrossCallReturnLabel_377:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       R0,#?V0
        LCALL     ?L_MOV_TO_X
// 1185    cmd.zigBeeLocalEndTime = BUILD_UINT32( pInMsg->pData[7], pInMsg->pData[8], pInMsg->pData[9], pInMsg->pData[10] );
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_370:
        LCALL     ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_305:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_316:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_382:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        MOV       R0,#?V0
        LCALL     ?L_MOV_TO_X
// 1186 
// 1187    return ( pCBs->pfnDoorLockSetYearDaySchedule( pInMsg, &cmd ) );
        ; Setup parameters for indirect call
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine160_0 & 0xFFFF
// 1188  }
??CrossCallReturnLabel_334:
        LCALL     ?CALL_IND
        SJMP      ??zclClosures_ProcessInDoorLockSetYearDaySchedu_2
// 1189 
// 1190  return ( ZFailure );
??zclClosures_ProcessInDoorLockSetYearDaySchedu_1:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockSetYearDaySchedu_2:
          CFI EndBlock cfiBlock98
        REQUIRE ?Subroutine7
        ; // Fall through to label ?Subroutine7
// 1191 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine7:
          CFI Block cfiBlock99 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,#0xb
        LJMP      ??Subroutine142_0 & 0xFFFF
          CFI EndBlock cfiBlock99

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine84:
          CFI Block cfiCond100 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI Conditional ??CrossCallReturnLabel_301
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond101 Using cfiCommon0
          CFI (cfiCond101) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond101) Conditional ??CrossCallReturnLabel_302
          CFI (cfiCond101) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond101) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond101) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond101) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond101) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond101) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond101) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond101) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond101) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond101) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond101) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond101) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond101) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond101) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond101) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond101) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond101) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond101) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond101) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond101) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond101) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond101) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond101) CFA_SP SP+-2
          CFI (cfiCond101) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker102 Using cfiCommon1
          CFI (cfiPicker102) NoFunction
          CFI (cfiPicker102) Picker
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
          CFI EndBlock cfiCond100
          CFI EndBlock cfiCond101
          CFI EndBlock cfiPicker102
        REQUIRE ??Subroutine144_0
        ; // Fall through to label ??Subroutine144_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine144_0:
          CFI Block cfiCond103 Using cfiCommon0
          CFI Function zclClosures_RegisterDoorLockCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_297
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond104 Using cfiCommon0
          CFI (cfiCond104) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond104) Conditional ??CrossCallReturnLabel_298
          CFI (cfiCond104) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond104) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond104) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond104) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond104) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond104) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond104) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond104) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond104) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond104) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond104) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond104) CFA_SP SP+-2
          CFI (cfiCond104) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond105 Using cfiCommon0
          CFI (cfiCond105) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond105) Conditional ??CrossCallReturnLabel_299
          CFI (cfiCond105) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond105) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond105) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond105) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond105) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond105) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond105) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond105) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond105) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond105) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond105) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond105) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond105) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond105) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond105) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond105) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond105) CFA_SP SP+-2
          CFI (cfiCond105) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond106 Using cfiCommon0
          CFI (cfiCond106) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond106) Conditional ??CrossCallReturnLabel_300
          CFI (cfiCond106) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond106) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond106) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond106) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond106) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond106) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond106) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond106) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond106) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond106) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond106) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond106) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond106) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond106) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond106) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond106) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond106) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond106) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond106) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond106) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond106) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond106) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond106) CFA_SP SP+-2
          CFI (cfiCond106) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond107 Using cfiCommon0
          CFI (cfiCond107) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond107) Conditional ??CrossCallReturnLabel_301
          CFI (cfiCond107) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond107) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond107) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond107) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond107) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond107) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond107) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond107) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond107) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond107) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond107) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond107) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond107) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond107) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond107) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond107) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond107) CFA_SP SP+-2
          CFI (cfiCond107) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond108 Using cfiCommon0
          CFI (cfiCond108) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond108) Conditional ??CrossCallReturnLabel_302
          CFI (cfiCond108) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond108) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond108) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond108) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond108) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond108) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond108) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond108) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond108) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond108) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond108) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond108) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond108) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond108) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond108) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond108) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond108) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond108) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond108) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond108) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond108) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond108) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond108) CFA_SP SP+-2
          CFI (cfiCond108) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker109 Using cfiCommon1
          CFI (cfiPicker109) NoFunction
          CFI (cfiPicker109) Picker
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond103
          CFI EndBlock cfiCond104
          CFI EndBlock cfiCond105
          CFI EndBlock cfiCond106
          CFI EndBlock cfiCond107
          CFI EndBlock cfiCond108
          CFI EndBlock cfiPicker109

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine32:
          CFI Block cfiCond110 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI Conditional ??CrossCallReturnLabel_305
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond111 Using cfiCommon0
          CFI (cfiCond111) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond111) Conditional ??CrossCallReturnLabel_306
          CFI (cfiCond111) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond111) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond111) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond111) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond111) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond111) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond111) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond111) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond111) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond111) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond111) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond111) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond111) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond111) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond111) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond111) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond111) CFA_SP SP+-2
          CFI (cfiCond111) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker112 Using cfiCommon1
          CFI (cfiPicker112) NoFunction
          CFI (cfiPicker112) Picker
        INC       DPTR
          CFI EndBlock cfiCond110
          CFI EndBlock cfiCond111
          CFI EndBlock cfiPicker112
        REQUIRE ??Subroutine145_0
        ; // Fall through to label ??Subroutine145_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine145_0:
          CFI Block cfiCond113 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI Conditional ??CrossCallReturnLabel_304
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond114 Using cfiCommon0
          CFI (cfiCond114) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond114) Conditional ??CrossCallReturnLabel_305
          CFI (cfiCond114) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond114) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond114) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond114) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond114) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond114) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond114) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond114) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond114) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond114) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond114) CFA_SP SP+-2
          CFI (cfiCond114) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond115 Using cfiCommon0
          CFI (cfiCond115) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond115) Conditional ??CrossCallReturnLabel_306
          CFI (cfiCond115) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond115) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond115) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond115) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond115) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond115) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond115) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond115) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond115) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond115) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond115) CFA_SP SP+-2
          CFI (cfiCond115) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker116 Using cfiCommon1
          CFI (cfiPicker116) NoFunction
          CFI (cfiPicker116) Picker
        INC       DPTR
          CFI EndBlock cfiCond113
          CFI EndBlock cfiCond114
          CFI EndBlock cfiCond115
          CFI EndBlock cfiPicker116
        REQUIRE ??Subroutine146_0
        ; // Fall through to label ??Subroutine146_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine146_0:
          CFI Block cfiCond117 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI Conditional ??CrossCallReturnLabel_303
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond118 Using cfiCommon0
          CFI (cfiCond118) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond118) Conditional ??CrossCallReturnLabel_304
          CFI (cfiCond118) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond118) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond118) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond118) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond118) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond118) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond118) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond118) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond118) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond118) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond118) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond118) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond118) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond118) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond118) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond118) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond118) CFA_SP SP+-2
          CFI (cfiCond118) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond119 Using cfiCommon0
          CFI (cfiCond119) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond119) Conditional ??CrossCallReturnLabel_305
          CFI (cfiCond119) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond119) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond119) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond119) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond119) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond119) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond119) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond119) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond119) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond119) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond119) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond119) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond119) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond119) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond119) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond119) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond119) CFA_SP SP+-2
          CFI (cfiCond119) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond120 Using cfiCommon0
          CFI (cfiCond120) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond120) Conditional ??CrossCallReturnLabel_306
          CFI (cfiCond120) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond120) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond120) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond120) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond120) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond120) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond120) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond120) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond120) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond120) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond120) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond120) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond120) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond120) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond120) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond120) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond120) CFA_SP SP+-2
          CFI (cfiCond120) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker121 Using cfiCommon1
          CFI (cfiPicker121) NoFunction
          CFI (cfiPicker121) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V4,A
        CLR       A
        MOV       ?V7,A
        MOV       A,#0x8
        MOV       R0,#?V4
        RET
          CFI EndBlock cfiCond117
          CFI EndBlock cfiCond118
          CFI EndBlock cfiCond119
          CFI EndBlock cfiCond120
          CFI EndBlock cfiPicker121

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine14:
          CFI Block cfiCond122 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI Conditional ??CrossCallReturnLabel_316
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond123 Using cfiCommon0
          CFI (cfiCond123) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond123) Conditional ??CrossCallReturnLabel_317
          CFI (cfiCond123) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond123) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond123) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond123) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond123) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond123) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond123) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond123) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond123) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond123) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond123) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond123) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond123) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond123) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond123) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond123) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond123) CFA_SP SP+-2
          CFI (cfiCond123) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond124 Using cfiCommon0
          CFI (cfiCond124) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond124) Conditional ??CrossCallReturnLabel_318
          CFI (cfiCond124) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond124) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond124) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond124) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond124) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond124) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond124) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond124) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond124) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond124) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond124) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond124) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond124) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond124) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond124) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond124) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond124) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond124) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond124) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond124) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond124) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond124) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond124) CFA_SP SP+-2
          CFI (cfiCond124) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker125 Using cfiCommon1
          CFI (cfiPicker125) NoFunction
          CFI (cfiPicker125) Picker
        INC       DPTR
          CFI EndBlock cfiCond122
          CFI EndBlock cfiCond123
          CFI EndBlock cfiCond124
          CFI EndBlock cfiPicker125
        REQUIRE ??Subroutine147_0
        ; // Fall through to label ??Subroutine147_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine147_0:
          CFI Block cfiCond126 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI Conditional ??CrossCallReturnLabel_315
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond127 Using cfiCommon0
          CFI (cfiCond127) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond127) Conditional ??CrossCallReturnLabel_316
          CFI (cfiCond127) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond127) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond127) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond127) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond127) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond127) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond127) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond127) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond127) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond127) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond127) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond127) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond127) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond127) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond127) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond127) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond127) CFA_SP SP+-2
          CFI (cfiCond127) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond128 Using cfiCommon0
          CFI (cfiCond128) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond128) Conditional ??CrossCallReturnLabel_317
          CFI (cfiCond128) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond128) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond128) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond128) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond128) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond128) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond128) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond128) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond128) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond128) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond128) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond128) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond128) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond128) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond128) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond128) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond128) CFA_SP SP+-2
          CFI (cfiCond128) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond129 Using cfiCommon0
          CFI (cfiCond129) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond129) Conditional ??CrossCallReturnLabel_318
          CFI (cfiCond129) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond129) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond129) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond129) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond129) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond129) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond129) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond129) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond129) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond129) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond129) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond129) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond129) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond129) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond129) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond129) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond129) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond129) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond129) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond129) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond129) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond129) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond129) CFA_SP SP+-2
          CFI (cfiCond129) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker130 Using cfiCommon1
          CFI (cfiPicker130) NoFunction
          CFI (cfiPicker130) Picker
        INC       DPTR
          CFI EndBlock cfiCond126
          CFI EndBlock cfiCond127
          CFI EndBlock cfiCond128
          CFI EndBlock cfiCond129
          CFI EndBlock cfiPicker130
        REQUIRE ??Subroutine148_0
        ; // Fall through to label ??Subroutine148_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine148_0:
          CFI Block cfiCond131 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI Conditional ??CrossCallReturnLabel_313
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond132 Using cfiCommon0
          CFI (cfiCond132) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond132) Conditional ??CrossCallReturnLabel_314
          CFI (cfiCond132) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond132) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond132) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond132) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond132) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond132) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond132) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond132) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond132) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond132) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond132) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond132) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond132) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond132) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond132) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond132) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond132) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond132) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond132) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond132) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond132) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond132) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond132) CFA_SP SP+-2
          CFI (cfiCond132) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond133 Using cfiCommon0
          CFI (cfiCond133) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond133) Conditional ??CrossCallReturnLabel_315
          CFI (cfiCond133) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond133) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond133) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond133) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond133) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond133) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond133) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond133) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond133) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond133) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond133) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond133) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond133) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond133) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond133) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond133) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond133) CFA_SP SP+-2
          CFI (cfiCond133) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond134 Using cfiCommon0
          CFI (cfiCond134) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond134) Conditional ??CrossCallReturnLabel_316
          CFI (cfiCond134) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond134) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond134) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond134) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond134) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond134) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond134) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond134) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond134) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond134) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond134) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond134) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond134) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond134) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond134) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond134) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond134) CFA_SP SP+-2
          CFI (cfiCond134) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond135 Using cfiCommon0
          CFI (cfiCond135) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond135) Conditional ??CrossCallReturnLabel_317
          CFI (cfiCond135) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond135) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond135) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond135) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond135) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond135) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond135) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond135) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond135) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond135) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond135) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond135) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond135) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond135) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond135) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond135) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond135) CFA_SP SP+-2
          CFI (cfiCond135) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond136 Using cfiCommon0
          CFI (cfiCond136) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond136) Conditional ??CrossCallReturnLabel_318
          CFI (cfiCond136) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond136) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond136) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond136) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond136) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond136) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond136) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond136) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond136) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond136) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond136) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond136) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond136) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond136) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond136) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond136) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond136) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond136) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond136) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond136) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond136) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond136) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond136) CFA_SP SP+-2
          CFI (cfiCond136) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker137 Using cfiCommon1
          CFI (cfiPicker137) NoFunction
          CFI (cfiPicker137) Picker
        INC       DPTR
          CFI EndBlock cfiCond131
          CFI EndBlock cfiCond132
          CFI EndBlock cfiCond133
          CFI EndBlock cfiCond134
          CFI EndBlock cfiCond135
          CFI EndBlock cfiCond136
          CFI EndBlock cfiPicker137
        REQUIRE ??Subroutine149_0
        ; // Fall through to label ??Subroutine149_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine149_0:
          CFI Block cfiCond138 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI Conditional ??CrossCallReturnLabel_312
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond139 Using cfiCommon0
          CFI (cfiCond139) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond139) Conditional ??CrossCallReturnLabel_313
          CFI (cfiCond139) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond139) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond139) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond139) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond139) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond139) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond139) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond139) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond139) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond139) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond139) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond139) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond139) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond139) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond139) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond139) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond139) CFA_SP SP+-2
          CFI (cfiCond139) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond140 Using cfiCommon0
          CFI (cfiCond140) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond140) Conditional ??CrossCallReturnLabel_314
          CFI (cfiCond140) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond140) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond140) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond140) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond140) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond140) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond140) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond140) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond140) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond140) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond140) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond140) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond140) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond140) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond140) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond140) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond140) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond140) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond140) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond140) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond140) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond140) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond140) CFA_SP SP+-2
          CFI (cfiCond140) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond141 Using cfiCommon0
          CFI (cfiCond141) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond141) Conditional ??CrossCallReturnLabel_315
          CFI (cfiCond141) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond141) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond141) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond141) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond141) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond141) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond141) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond141) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond141) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond141) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond141) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond141) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond141) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond141) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond141) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond141) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond141) CFA_SP SP+-2
          CFI (cfiCond141) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond142 Using cfiCommon0
          CFI (cfiCond142) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond142) Conditional ??CrossCallReturnLabel_316
          CFI (cfiCond142) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond142) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond142) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond142) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond142) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond142) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond142) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond142) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond142) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond142) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond142) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond142) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond142) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond142) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond142) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond142) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond142) CFA_SP SP+-2
          CFI (cfiCond142) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond143 Using cfiCommon0
          CFI (cfiCond143) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond143) Conditional ??CrossCallReturnLabel_317
          CFI (cfiCond143) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond143) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond143) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond143) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond143) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond143) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond143) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond143) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond143) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond143) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond143) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond143) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond143) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond143) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond143) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond143) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond143) CFA_SP SP+-2
          CFI (cfiCond143) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond144 Using cfiCommon0
          CFI (cfiCond144) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond144) Conditional ??CrossCallReturnLabel_318
          CFI (cfiCond144) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond144) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond144) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond144) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond144) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond144) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond144) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond144) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond144) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond144) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond144) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond144) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond144) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond144) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond144) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond144) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond144) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond144) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond144) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond144) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond144) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond144) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond144) CFA_SP SP+-2
          CFI (cfiCond144) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker145 Using cfiCommon1
          CFI (cfiPicker145) NoFunction
          CFI (cfiPicker145) Picker
        INC       DPTR
          CFI EndBlock cfiCond138
          CFI EndBlock cfiCond139
          CFI EndBlock cfiCond140
          CFI EndBlock cfiCond141
          CFI EndBlock cfiCond142
          CFI EndBlock cfiCond143
          CFI EndBlock cfiCond144
          CFI EndBlock cfiPicker145
        REQUIRE ??Subroutine150_0
        ; // Fall through to label ??Subroutine150_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine150_0:
          CFI Block cfiCond146 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI Conditional ??CrossCallReturnLabel_311
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond147 Using cfiCommon0
          CFI (cfiCond147) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond147) Conditional ??CrossCallReturnLabel_312
          CFI (cfiCond147) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond147) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond147) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond147) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond147) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond147) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond147) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond147) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond147) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond147) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond147) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond147) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond147) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond147) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond147) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond147) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond147) CFA_SP SP+-2
          CFI (cfiCond147) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond148 Using cfiCommon0
          CFI (cfiCond148) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond148) Conditional ??CrossCallReturnLabel_313
          CFI (cfiCond148) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond148) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond148) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond148) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond148) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond148) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond148) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond148) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond148) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond148) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond148) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond148) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond148) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond148) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond148) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond148) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond148) CFA_SP SP+-2
          CFI (cfiCond148) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond149 Using cfiCommon0
          CFI (cfiCond149) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond149) Conditional ??CrossCallReturnLabel_314
          CFI (cfiCond149) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond149) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond149) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond149) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond149) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond149) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond149) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond149) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond149) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond149) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond149) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond149) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond149) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond149) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond149) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond149) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond149) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond149) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond149) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond149) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond149) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond149) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond149) CFA_SP SP+-2
          CFI (cfiCond149) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond150 Using cfiCommon0
          CFI (cfiCond150) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond150) Conditional ??CrossCallReturnLabel_315
          CFI (cfiCond150) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond150) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond150) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond150) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond150) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond150) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond150) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond150) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond150) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond150) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond150) CFA_SP SP+-2
          CFI (cfiCond150) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond151 Using cfiCommon0
          CFI (cfiCond151) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond151) Conditional ??CrossCallReturnLabel_316
          CFI (cfiCond151) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond151) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond151) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond151) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond151) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond151) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond151) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond151) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond151) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond151) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond151) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond151) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond151) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond151) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond151) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond151) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond151) CFA_SP SP+-2
          CFI (cfiCond151) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond152 Using cfiCommon0
          CFI (cfiCond152) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond152) Conditional ??CrossCallReturnLabel_317
          CFI (cfiCond152) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond152) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond152) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond152) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond152) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond152) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond152) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond152) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond152) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond152) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond152) CFA_SP SP+-2
          CFI (cfiCond152) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond153 Using cfiCommon0
          CFI (cfiCond153) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond153) Conditional ??CrossCallReturnLabel_318
          CFI (cfiCond153) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond153) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond153) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond153) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond153) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond153) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond153) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond153) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond153) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond153) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond153) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond153) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond153) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond153) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond153) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond153) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond153) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond153) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond153) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond153) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond153) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond153) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond153) CFA_SP SP+-2
          CFI (cfiCond153) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker154 Using cfiCommon1
          CFI (cfiPicker154) NoFunction
          CFI (cfiPicker154) Picker
        INC       DPTR
          CFI EndBlock cfiCond146
          CFI EndBlock cfiCond147
          CFI EndBlock cfiCond148
          CFI EndBlock cfiCond149
          CFI EndBlock cfiCond150
          CFI EndBlock cfiCond151
          CFI EndBlock cfiCond152
          CFI EndBlock cfiCond153
          CFI EndBlock cfiPicker154
        REQUIRE ??Subroutine151_0
        ; // Fall through to label ??Subroutine151_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine151_0:
          CFI Block cfiCond155 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI Conditional ??CrossCallReturnLabel_309
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond156 Using cfiCommon0
          CFI (cfiCond156) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond156) Conditional ??CrossCallReturnLabel_310
          CFI (cfiCond156) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond156) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond156) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond156) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond156) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond156) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond156) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond156) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond156) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond156) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond156) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond156) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond156) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond156) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond156) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond156) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond156) CFA_SP SP+-2
          CFI (cfiCond156) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond157 Using cfiCommon0
          CFI (cfiCond157) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond157) Conditional ??CrossCallReturnLabel_311
          CFI (cfiCond157) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond157) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond157) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond157) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond157) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond157) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond157) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond157) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond157) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond157) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond157) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond157) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond157) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond157) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond157) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond157) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond157) CFA_SP SP+-2
          CFI (cfiCond157) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond158 Using cfiCommon0
          CFI (cfiCond158) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond158) Conditional ??CrossCallReturnLabel_312
          CFI (cfiCond158) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond158) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond158) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond158) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond158) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond158) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond158) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond158) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond158) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond158) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond158) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond158) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond158) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond158) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond158) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond158) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond158) CFA_SP SP+-2
          CFI (cfiCond158) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond159 Using cfiCommon0
          CFI (cfiCond159) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond159) Conditional ??CrossCallReturnLabel_313
          CFI (cfiCond159) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond159) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond159) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond159) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond159) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond159) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond159) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond159) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond159) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond159) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond159) CFA_SP SP+-2
          CFI (cfiCond159) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond160 Using cfiCommon0
          CFI (cfiCond160) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond160) Conditional ??CrossCallReturnLabel_314
          CFI (cfiCond160) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond160) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond160) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond160) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond160) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond160) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond160) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond160) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond160) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond160) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond160) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond160) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond160) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond160) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond160) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond160) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond160) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond160) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond160) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond160) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond160) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond160) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond160) CFA_SP SP+-2
          CFI (cfiCond160) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond161 Using cfiCommon0
          CFI (cfiCond161) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond161) Conditional ??CrossCallReturnLabel_315
          CFI (cfiCond161) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond161) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond161) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond161) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond161) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond161) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond161) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond161) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond161) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond161) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond161) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond161) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond161) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond161) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond161) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond161) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond161) CFA_SP SP+-2
          CFI (cfiCond161) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond162 Using cfiCommon0
          CFI (cfiCond162) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond162) Conditional ??CrossCallReturnLabel_316
          CFI (cfiCond162) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond162) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond162) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond162) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond162) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond162) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond162) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond162) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond162) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond162) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond162) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond162) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond162) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond162) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond162) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond162) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond162) CFA_SP SP+-2
          CFI (cfiCond162) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond163 Using cfiCommon0
          CFI (cfiCond163) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond163) Conditional ??CrossCallReturnLabel_317
          CFI (cfiCond163) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond163) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond163) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond163) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond163) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond163) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond163) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond163) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond163) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond163) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond163) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond163) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond163) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond163) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond163) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond163) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond163) CFA_SP SP+-2
          CFI (cfiCond163) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond164 Using cfiCommon0
          CFI (cfiCond164) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond164) Conditional ??CrossCallReturnLabel_318
          CFI (cfiCond164) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond164) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond164) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond164) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond164) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond164) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond164) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond164) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond164) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond164) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond164) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond164) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond164) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond164) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond164) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond164) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond164) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond164) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond164) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond164) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond164) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond164) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond164) CFA_SP SP+-2
          CFI (cfiCond164) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker165 Using cfiCommon1
          CFI (cfiPicker165) NoFunction
          CFI (cfiPicker165) Picker
        INC       DPTR
          CFI EndBlock cfiCond155
          CFI EndBlock cfiCond156
          CFI EndBlock cfiCond157
          CFI EndBlock cfiCond158
          CFI EndBlock cfiCond159
          CFI EndBlock cfiCond160
          CFI EndBlock cfiCond161
          CFI EndBlock cfiCond162
          CFI EndBlock cfiCond163
          CFI EndBlock cfiCond164
          CFI EndBlock cfiPicker165
        REQUIRE ??Subroutine152_0
        ; // Fall through to label ??Subroutine152_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine152_0:
          CFI Block cfiCond166 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI Conditional ??CrossCallReturnLabel_308
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond167 Using cfiCommon0
          CFI (cfiCond167) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond167) Conditional ??CrossCallReturnLabel_309
          CFI (cfiCond167) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond167) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond167) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond167) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond167) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond167) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond167) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond167) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond167) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond167) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond167) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond167) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond167) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond167) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond167) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond167) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond167) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond167) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond167) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond167) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond167) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond167) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond167) CFA_SP SP+-2
          CFI (cfiCond167) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond168 Using cfiCommon0
          CFI (cfiCond168) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond168) Conditional ??CrossCallReturnLabel_310
          CFI (cfiCond168) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond168) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond168) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond168) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond168) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond168) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond168) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond168) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond168) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond168) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond168) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond168) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond168) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond168) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond168) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond168) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond168) CFA_SP SP+-2
          CFI (cfiCond168) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond169 Using cfiCommon0
          CFI (cfiCond169) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond169) Conditional ??CrossCallReturnLabel_311
          CFI (cfiCond169) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond169) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond169) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond169) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond169) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond169) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond169) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond169) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond169) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond169) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond169) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond169) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond169) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond169) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond169) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond169) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond169) CFA_SP SP+-2
          CFI (cfiCond169) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond170 Using cfiCommon0
          CFI (cfiCond170) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond170) Conditional ??CrossCallReturnLabel_312
          CFI (cfiCond170) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond170) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond170) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond170) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond170) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond170) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond170) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond170) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond170) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond170) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond170) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond170) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond170) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond170) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond170) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond170) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond170) CFA_SP SP+-2
          CFI (cfiCond170) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond171 Using cfiCommon0
          CFI (cfiCond171) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond171) Conditional ??CrossCallReturnLabel_313
          CFI (cfiCond171) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond171) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond171) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond171) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond171) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond171) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond171) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond171) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond171) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond171) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond171) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond171) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond171) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond171) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond171) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond171) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond171) CFA_SP SP+-2
          CFI (cfiCond171) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond172 Using cfiCommon0
          CFI (cfiCond172) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond172) Conditional ??CrossCallReturnLabel_314
          CFI (cfiCond172) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond172) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond172) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond172) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond172) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond172) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond172) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond172) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond172) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond172) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond172) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond172) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond172) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond172) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond172) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond172) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond172) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond172) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond172) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond172) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond172) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond172) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond172) CFA_SP SP+-2
          CFI (cfiCond172) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond173 Using cfiCommon0
          CFI (cfiCond173) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond173) Conditional ??CrossCallReturnLabel_315
          CFI (cfiCond173) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond173) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond173) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond173) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond173) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond173) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond173) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond173) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond173) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond173) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond173) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond173) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond173) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond173) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond173) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond173) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond173) CFA_SP SP+-2
          CFI (cfiCond173) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond174 Using cfiCommon0
          CFI (cfiCond174) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond174) Conditional ??CrossCallReturnLabel_316
          CFI (cfiCond174) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond174) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond174) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond174) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond174) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond174) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond174) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond174) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond174) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond174) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond174) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond174) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond174) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond174) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond174) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond174) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond174) CFA_SP SP+-2
          CFI (cfiCond174) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond175 Using cfiCommon0
          CFI (cfiCond175) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond175) Conditional ??CrossCallReturnLabel_317
          CFI (cfiCond175) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond175) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond175) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond175) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond175) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond175) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond175) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond175) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond175) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond175) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond175) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond175) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond175) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond175) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond175) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond175) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond175) CFA_SP SP+-2
          CFI (cfiCond175) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond176 Using cfiCommon0
          CFI (cfiCond176) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond176) Conditional ??CrossCallReturnLabel_318
          CFI (cfiCond176) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond176) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond176) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond176) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond176) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond176) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond176) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond176) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond176) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond176) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond176) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond176) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond176) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond176) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond176) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond176) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond176) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond176) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond176) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond176) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond176) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond176) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond176) CFA_SP SP+-2
          CFI (cfiCond176) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker177 Using cfiCommon1
          CFI (cfiPicker177) NoFunction
          CFI (cfiPicker177) Picker
        INC       DPTR
          CFI EndBlock cfiCond166
          CFI EndBlock cfiCond167
          CFI EndBlock cfiCond168
          CFI EndBlock cfiCond169
          CFI EndBlock cfiCond170
          CFI EndBlock cfiCond171
          CFI EndBlock cfiCond172
          CFI EndBlock cfiCond173
          CFI EndBlock cfiCond174
          CFI EndBlock cfiCond175
          CFI EndBlock cfiCond176
          CFI EndBlock cfiPicker177
        REQUIRE ??Subroutine153_0
        ; // Fall through to label ??Subroutine153_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine153_0:
          CFI Block cfiCond178 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI Conditional ??CrossCallReturnLabel_307
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond179 Using cfiCommon0
          CFI (cfiCond179) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond179) Conditional ??CrossCallReturnLabel_308
          CFI (cfiCond179) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond179) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond179) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond179) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond179) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond179) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond179) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond179) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond179) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond179) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond179) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond179) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond179) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond179) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond179) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond179) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond179) CFA_SP SP+-2
          CFI (cfiCond179) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond180 Using cfiCommon0
          CFI (cfiCond180) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond180) Conditional ??CrossCallReturnLabel_309
          CFI (cfiCond180) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond180) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond180) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond180) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond180) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond180) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond180) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond180) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond180) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond180) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond180) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond180) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond180) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond180) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond180) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond180) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond180) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond180) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond180) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond180) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond180) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond180) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond180) CFA_SP SP+-2
          CFI (cfiCond180) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond181 Using cfiCommon0
          CFI (cfiCond181) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond181) Conditional ??CrossCallReturnLabel_310
          CFI (cfiCond181) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond181) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond181) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond181) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond181) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond181) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond181) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond181) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond181) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond181) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond181) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond181) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond181) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond181) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond181) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond181) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond181) CFA_SP SP+-2
          CFI (cfiCond181) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond182 Using cfiCommon0
          CFI (cfiCond182) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond182) Conditional ??CrossCallReturnLabel_311
          CFI (cfiCond182) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond182) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond182) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond182) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond182) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond182) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond182) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond182) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond182) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond182) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond182) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond182) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond182) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond182) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond182) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond182) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond182) CFA_SP SP+-2
          CFI (cfiCond182) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond183 Using cfiCommon0
          CFI (cfiCond183) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond183) Conditional ??CrossCallReturnLabel_312
          CFI (cfiCond183) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond183) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond183) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond183) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond183) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond183) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond183) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond183) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond183) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond183) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond183) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond183) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond183) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond183) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond183) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond183) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond183) CFA_SP SP+-2
          CFI (cfiCond183) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond184 Using cfiCommon0
          CFI (cfiCond184) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond184) Conditional ??CrossCallReturnLabel_313
          CFI (cfiCond184) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond184) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond184) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond184) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond184) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond184) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond184) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond184) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond184) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond184) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond184) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond184) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond184) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond184) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond184) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond184) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond184) CFA_SP SP+-2
          CFI (cfiCond184) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond185 Using cfiCommon0
          CFI (cfiCond185) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond185) Conditional ??CrossCallReturnLabel_314
          CFI (cfiCond185) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond185) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond185) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond185) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond185) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond185) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond185) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond185) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond185) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond185) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond185) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond185) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond185) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond185) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond185) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond185) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond185) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond185) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond185) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond185) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond185) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond185) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond185) CFA_SP SP+-2
          CFI (cfiCond185) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond186 Using cfiCommon0
          CFI (cfiCond186) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond186) Conditional ??CrossCallReturnLabel_315
          CFI (cfiCond186) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond186) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond186) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond186) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond186) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond186) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond186) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond186) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond186) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond186) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond186) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond186) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond186) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond186) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond186) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond186) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond186) CFA_SP SP+-2
          CFI (cfiCond186) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond187 Using cfiCommon0
          CFI (cfiCond187) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond187) Conditional ??CrossCallReturnLabel_316
          CFI (cfiCond187) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond187) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond187) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond187) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond187) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond187) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond187) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond187) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond187) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond187) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond187) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond187) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond187) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond187) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond187) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond187) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond187) CFA_SP SP+-2
          CFI (cfiCond187) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond188 Using cfiCommon0
          CFI (cfiCond188) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond188) Conditional ??CrossCallReturnLabel_317
          CFI (cfiCond188) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond188) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond188) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond188) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond188) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond188) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond188) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond188) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond188) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond188) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond188) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond188) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond188) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond188) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond188) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond188) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond188) CFA_SP SP+-2
          CFI (cfiCond188) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond189 Using cfiCommon0
          CFI (cfiCond189) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond189) Conditional ??CrossCallReturnLabel_318
          CFI (cfiCond189) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond189) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond189) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond189) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond189) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond189) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond189) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond189) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond189) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond189) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond189) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond189) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond189) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond189) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond189) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond189) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond189) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond189) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond189) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond189) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond189) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond189) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond189) CFA_SP SP+-2
          CFI (cfiCond189) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker190 Using cfiCommon1
          CFI (cfiPicker190) NoFunction
          CFI (cfiPicker190) Picker
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V4,A
        CLR       A
        MOV       ?V5,A
        MOV       A,#0x10
        MOV       R0,#?V4
        RET
          CFI EndBlock cfiCond178
          CFI EndBlock cfiCond179
          CFI EndBlock cfiCond180
          CFI EndBlock cfiCond181
          CFI EndBlock cfiCond182
          CFI EndBlock cfiCond183
          CFI EndBlock cfiCond184
          CFI EndBlock cfiCond185
          CFI EndBlock cfiCond186
          CFI EndBlock cfiCond187
          CFI EndBlock cfiCond188
          CFI EndBlock cfiCond189
          CFI EndBlock cfiPicker190

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine13:
          CFI Block cfiCond191 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_325
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond192 Using cfiCommon0
          CFI (cfiCond192) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond192) Conditional ??CrossCallReturnLabel_326
          CFI (cfiCond192) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond192) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond192) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond192) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond192) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond192) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond192) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond192) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond192) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond192) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond192) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond192) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond192) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond192) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond192) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond192) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond192) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond192) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond192) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond192) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond192) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond192) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond192) CFA_SP SP+-2
          CFI (cfiCond192) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker193 Using cfiCommon1
          CFI (cfiPicker193) NoFunction
          CFI (cfiPicker193) Picker
        INC       DPTR
          CFI EndBlock cfiCond191
          CFI EndBlock cfiCond192
          CFI EndBlock cfiPicker193
        REQUIRE ??Subroutine154_0
        ; // Fall through to label ??Subroutine154_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine154_0:
          CFI Block cfiCond194 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI Conditional ??CrossCallReturnLabel_324
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond195 Using cfiCommon0
          CFI (cfiCond195) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond195) Conditional ??CrossCallReturnLabel_325
          CFI (cfiCond195) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond195) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond195) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond195) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond195) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond195) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond195) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond195) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond195) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond195) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond195) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond195) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond195) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond195) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond195) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond195) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond195) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond195) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond195) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond195) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond195) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond195) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond195) CFA_SP SP+-2
          CFI (cfiCond195) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond196 Using cfiCommon0
          CFI (cfiCond196) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond196) Conditional ??CrossCallReturnLabel_326
          CFI (cfiCond196) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond196) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond196) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond196) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond196) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond196) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond196) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond196) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond196) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond196) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond196) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond196) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond196) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond196) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond196) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond196) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond196) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond196) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond196) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond196) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond196) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond196) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond196) CFA_SP SP+-2
          CFI (cfiCond196) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker197 Using cfiCommon1
          CFI (cfiPicker197) NoFunction
          CFI (cfiPicker197) Picker
        INC       DPTR
          CFI EndBlock cfiCond194
          CFI EndBlock cfiCond195
          CFI EndBlock cfiCond196
          CFI EndBlock cfiPicker197
        REQUIRE ??Subroutine155_0
        ; // Fall through to label ??Subroutine155_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine155_0:
          CFI Block cfiCond198 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI Conditional ??CrossCallReturnLabel_323
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond199 Using cfiCommon0
          CFI (cfiCond199) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond199) Conditional ??CrossCallReturnLabel_324
          CFI (cfiCond199) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond199) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond199) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond199) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond199) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond199) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond199) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond199) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond199) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond199) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond199) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond199) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond199) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond199) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond199) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond199) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond199) CFA_SP SP+-2
          CFI (cfiCond199) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond200 Using cfiCommon0
          CFI (cfiCond200) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond200) Conditional ??CrossCallReturnLabel_325
          CFI (cfiCond200) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond200) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond200) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond200) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond200) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond200) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond200) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond200) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond200) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond200) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond200) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond200) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond200) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond200) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond200) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond200) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond200) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond200) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond200) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond200) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond200) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond200) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond200) CFA_SP SP+-2
          CFI (cfiCond200) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond201 Using cfiCommon0
          CFI (cfiCond201) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond201) Conditional ??CrossCallReturnLabel_326
          CFI (cfiCond201) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond201) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond201) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond201) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond201) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond201) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond201) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond201) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond201) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond201) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond201) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond201) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond201) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond201) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond201) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond201) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond201) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond201) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond201) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond201) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond201) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond201) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond201) CFA_SP SP+-2
          CFI (cfiCond201) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker202 Using cfiCommon1
          CFI (cfiPicker202) NoFunction
          CFI (cfiPicker202) Picker
        INC       DPTR
          CFI EndBlock cfiCond198
          CFI EndBlock cfiCond199
          CFI EndBlock cfiCond200
          CFI EndBlock cfiCond201
          CFI EndBlock cfiPicker202
        REQUIRE ??Subroutine156_0
        ; // Fall through to label ??Subroutine156_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine156_0:
          CFI Block cfiCond203 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI Conditional ??CrossCallReturnLabel_321
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond204 Using cfiCommon0
          CFI (cfiCond204) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond204) Conditional ??CrossCallReturnLabel_322
          CFI (cfiCond204) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond204) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond204) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond204) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond204) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond204) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond204) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond204) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond204) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond204) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond204) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond204) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond204) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond204) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond204) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond204) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond204) CFA_SP SP+-2
          CFI (cfiCond204) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond205 Using cfiCommon0
          CFI (cfiCond205) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond205) Conditional ??CrossCallReturnLabel_323
          CFI (cfiCond205) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond205) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond205) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond205) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond205) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond205) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond205) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond205) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond205) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond205) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond205) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond205) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond205) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond205) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond205) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond205) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond205) CFA_SP SP+-2
          CFI (cfiCond205) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond206 Using cfiCommon0
          CFI (cfiCond206) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond206) Conditional ??CrossCallReturnLabel_324
          CFI (cfiCond206) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond206) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond206) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond206) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond206) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond206) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond206) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond206) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond206) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond206) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond206) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond206) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond206) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond206) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond206) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond206) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond206) CFA_SP SP+-2
          CFI (cfiCond206) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond207 Using cfiCommon0
          CFI (cfiCond207) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond207) Conditional ??CrossCallReturnLabel_325
          CFI (cfiCond207) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond207) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond207) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond207) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond207) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond207) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond207) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond207) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond207) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond207) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond207) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond207) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond207) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond207) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond207) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond207) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond207) CFA_SP SP+-2
          CFI (cfiCond207) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond208 Using cfiCommon0
          CFI (cfiCond208) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond208) Conditional ??CrossCallReturnLabel_326
          CFI (cfiCond208) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond208) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond208) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond208) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond208) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond208) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond208) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond208) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond208) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond208) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond208) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond208) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond208) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond208) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond208) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond208) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond208) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond208) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond208) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond208) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond208) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond208) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond208) CFA_SP SP+-2
          CFI (cfiCond208) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker209 Using cfiCommon1
          CFI (cfiPicker209) NoFunction
          CFI (cfiPicker209) Picker
        INC       DPTR
          CFI EndBlock cfiCond203
          CFI EndBlock cfiCond204
          CFI EndBlock cfiCond205
          CFI EndBlock cfiCond206
          CFI EndBlock cfiCond207
          CFI EndBlock cfiCond208
          CFI EndBlock cfiPicker209
        REQUIRE ??Subroutine157_0
        ; // Fall through to label ??Subroutine157_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine157_0:
          CFI Block cfiCond210 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI Conditional ??CrossCallReturnLabel_320
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond211 Using cfiCommon0
          CFI (cfiCond211) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond211) Conditional ??CrossCallReturnLabel_321
          CFI (cfiCond211) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond211) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond211) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond211) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond211) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond211) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond211) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond211) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond211) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond211) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond211) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond211) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond211) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond211) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond211) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond211) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond211) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond211) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond211) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond211) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond211) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond211) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond211) CFA_SP SP+-2
          CFI (cfiCond211) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond212 Using cfiCommon0
          CFI (cfiCond212) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond212) Conditional ??CrossCallReturnLabel_322
          CFI (cfiCond212) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond212) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond212) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond212) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond212) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond212) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond212) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond212) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond212) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond212) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond212) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond212) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond212) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond212) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond212) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond212) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond212) CFA_SP SP+-2
          CFI (cfiCond212) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond213 Using cfiCommon0
          CFI (cfiCond213) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond213) Conditional ??CrossCallReturnLabel_323
          CFI (cfiCond213) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond213) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond213) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond213) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond213) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond213) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond213) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond213) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond213) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond213) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond213) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond213) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond213) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond213) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond213) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond213) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond213) CFA_SP SP+-2
          CFI (cfiCond213) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond214 Using cfiCommon0
          CFI (cfiCond214) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond214) Conditional ??CrossCallReturnLabel_324
          CFI (cfiCond214) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond214) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond214) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond214) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond214) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond214) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond214) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond214) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond214) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond214) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond214) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond214) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond214) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond214) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond214) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond214) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond214) CFA_SP SP+-2
          CFI (cfiCond214) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond215 Using cfiCommon0
          CFI (cfiCond215) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond215) Conditional ??CrossCallReturnLabel_325
          CFI (cfiCond215) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond215) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond215) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond215) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond215) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond215) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond215) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond215) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond215) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond215) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond215) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond215) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond215) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond215) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond215) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond215) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond215) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond215) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond215) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond215) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond215) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond215) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond215) CFA_SP SP+-2
          CFI (cfiCond215) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond216 Using cfiCommon0
          CFI (cfiCond216) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond216) Conditional ??CrossCallReturnLabel_326
          CFI (cfiCond216) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond216) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond216) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond216) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond216) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond216) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond216) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond216) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond216) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond216) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond216) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond216) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond216) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond216) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond216) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond216) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond216) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond216) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond216) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond216) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond216) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond216) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond216) CFA_SP SP+-2
          CFI (cfiCond216) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker217 Using cfiCommon1
          CFI (cfiPicker217) NoFunction
          CFI (cfiPicker217) Picker
        INC       DPTR
          CFI EndBlock cfiCond210
          CFI EndBlock cfiCond211
          CFI EndBlock cfiCond212
          CFI EndBlock cfiCond213
          CFI EndBlock cfiCond214
          CFI EndBlock cfiCond215
          CFI EndBlock cfiCond216
          CFI EndBlock cfiPicker217
        REQUIRE ??Subroutine158_0
        ; // Fall through to label ??Subroutine158_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine158_0:
          CFI Block cfiCond218 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI Conditional ??CrossCallReturnLabel_319
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond219 Using cfiCommon0
          CFI (cfiCond219) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond219) Conditional ??CrossCallReturnLabel_320
          CFI (cfiCond219) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond219) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond219) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond219) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond219) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond219) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond219) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond219) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond219) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond219) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond219) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond219) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond219) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond219) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond219) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond219) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond219) CFA_SP SP+-2
          CFI (cfiCond219) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond220 Using cfiCommon0
          CFI (cfiCond220) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond220) Conditional ??CrossCallReturnLabel_321
          CFI (cfiCond220) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond220) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond220) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond220) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond220) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond220) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond220) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond220) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond220) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond220) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond220) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond220) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond220) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond220) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond220) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond220) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond220) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond220) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond220) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond220) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond220) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond220) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond220) CFA_SP SP+-2
          CFI (cfiCond220) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond221 Using cfiCommon0
          CFI (cfiCond221) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond221) Conditional ??CrossCallReturnLabel_322
          CFI (cfiCond221) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond221) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond221) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond221) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond221) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond221) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond221) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond221) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond221) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond221) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond221) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond221) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond221) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond221) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond221) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond221) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond221) CFA_SP SP+-2
          CFI (cfiCond221) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond222 Using cfiCommon0
          CFI (cfiCond222) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond222) Conditional ??CrossCallReturnLabel_323
          CFI (cfiCond222) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond222) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond222) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond222) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond222) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond222) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond222) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond222) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond222) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond222) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond222) CFA_SP SP+-2
          CFI (cfiCond222) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond223 Using cfiCommon0
          CFI (cfiCond223) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond223) Conditional ??CrossCallReturnLabel_324
          CFI (cfiCond223) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond223) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond223) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond223) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond223) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond223) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond223) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond223) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond223) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond223) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond223) CFA_SP SP+-2
          CFI (cfiCond223) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond224 Using cfiCommon0
          CFI (cfiCond224) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond224) Conditional ??CrossCallReturnLabel_325
          CFI (cfiCond224) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond224) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond224) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond224) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond224) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond224) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond224) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond224) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond224) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond224) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond224) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond224) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond224) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond224) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond224) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond224) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond224) CFA_SP SP+-2
          CFI (cfiCond224) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond225 Using cfiCommon0
          CFI (cfiCond225) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond225) Conditional ??CrossCallReturnLabel_326
          CFI (cfiCond225) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond225) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond225) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond225) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond225) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond225) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond225) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond225) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond225) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond225) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond225) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond225) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond225) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond225) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond225) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond225) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond225) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond225) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond225) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond225) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond225) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond225) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond225) CFA_SP SP+-2
          CFI (cfiCond225) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker226 Using cfiCommon1
          CFI (cfiPicker226) NoFunction
          CFI (cfiPicker226) Picker
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V4,A
        CLR       A
        MOV       ?V5,A
        MOV       ?V6,A
        MOV       ?V7,A
        MOV       A,#0x8
        MOV       R0,#?V4
        RET
          CFI EndBlock cfiCond218
          CFI EndBlock cfiCond219
          CFI EndBlock cfiCond220
          CFI EndBlock cfiCond221
          CFI EndBlock cfiCond222
          CFI EndBlock cfiCond223
          CFI EndBlock cfiCond224
          CFI EndBlock cfiCond225
          CFI EndBlock cfiPicker226
// 1192 
// 1193 /*********************************************************************
// 1194  * @fn      zclClosures_ProcessInDoorLockGetYearDaySchedule
// 1195  *
// 1196  * @brief   Process in the received Get Year Day Schedule cmd
// 1197  *
// 1198  * @param   pInMsg - pointer to the incoming message
// 1199  * @param   pCBs - pointer to the application callbacks
// 1200  *
// 1201  * @return  ZStatus_t
// 1202  */
// 1203 static ZStatus_t zclClosures_ProcessInDoorLockGetYearDaySchedule( zclIncoming_t *pInMsg,
// 1204                                                                   zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1205 {
// 1206  if ( pCBs->pfnDoorLockGetYearDaySchedule )
// 1207  {
// 1208    zclDoorLockSchedule_t cmd;
// 1209 
// 1210    cmd.scheduleID = pInMsg->pData[0];
// 1211    cmd.userID = BUILD_UINT16( pInMsg->pData[1], pInMsg->pData[2] );
// 1212 
// 1213    return ( pCBs->pfnDoorLockGetYearDaySchedule( pInMsg, &cmd ) );
// 1214  }
// 1215 
// 1216  return ( ZFailure );
// 1217 }
// 1218 
// 1219 /*********************************************************************
// 1220  * @fn      zclClosures_ProcessInDoorLockClearYearDaySchedule
// 1221  *
// 1222  * @brief   Process in the received Clear Year Day Schedule cmd
// 1223  *
// 1224  * @param   pInMsg - pointer to the incoming message
// 1225  * @param   pCBs - pointer to the application callbacks
// 1226  *
// 1227  * @return  ZStatus_t
// 1228  */
// 1229 static ZStatus_t zclClosures_ProcessInDoorLockClearYearDaySchedule( zclIncoming_t *pInMsg,
// 1230                                                                     zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1231 {
// 1232  if ( pCBs->pfnDoorLockClearYearDaySchedule )
// 1233  {
// 1234    zclDoorLockSchedule_t cmd;
// 1235 
// 1236    cmd.scheduleID = pInMsg->pData[0];
// 1237    cmd.userID = BUILD_UINT16( pInMsg->pData[1], pInMsg->pData[2] );
// 1238 
// 1239    return ( pCBs->pfnDoorLockClearYearDaySchedule( pInMsg, &cmd ) );
// 1240  }
// 1241 
// 1242  return ( ZFailure );
// 1243 }
// 1244 
// 1245 /*********************************************************************
// 1246  * @fn      zclClosures_ProcessInDoorLockSetHolidaySchedule
// 1247  *
// 1248  * @brief   Process in the received Set Holiday Schedule cmd
// 1249  *
// 1250  * @param   pInMsg - pointer to the incoming message
// 1251  * @param   pCBs - pointer to the application callbacks
// 1252  *
// 1253  * @return  ZStatus_t
// 1254  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1255 static ZStatus_t zclClosures_ProcessInDoorLockSetHolidaySchedule( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockSetHolidaySchedule:
          CFI Block cfiBlock227 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetHolidaySchedule
        CODE
// 1256                                                                   zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1257 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 10
        MOV       A,#-0xa
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
// 1258  if ( pCBs->pfnDoorLockSetHolidaySchedule )
        MOV       A,R4
        ADD       A,#0x20
        MOV       R6,A
        CLR       A
        ADDC      A,R5
        MOV       R7,A
        MOV       DPL,R6
        LCALL     ??Subroutine180_0 & 0xFFFF
??CrossCallReturnLabel_414:
        JNZ       $+5
        LJMP      ??zclClosures_ProcessInDoorLockSetHolidaySchedu_1 & 0xFFFF
// 1259  {
// 1260    zclDoorLockSetHolidaySchedule_t cmd;
// 1261 
// 1262    cmd.holidayScheduleID = pInMsg->pData[0];
        LCALL     ?Subroutine23 & 0xFFFF
// 1263    cmd.zigBeeLocalStartTime = BUILD_UINT32( pInMsg->pData[1], pInMsg->pData[2], pInMsg->pData[3], pInMsg->pData[4] );
??CrossCallReturnLabel_58:
        CLR       A
        MOV       ?V1,A
        MOV       ?V2,A
        MOV       ?V3,A
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine157_0 & 0xFFFF
??CrossCallReturnLabel_320:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine152_0 & 0xFFFF
??CrossCallReturnLabel_308:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine173_0 & 0xFFFF
??CrossCallReturnLabel_374:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       R0,#?V0
        LCALL     ?L_MOV_TO_X
// 1264    cmd.zigBeeLocalEndTime = BUILD_UINT32( pInMsg->pData[5], pInMsg->pData[6], pInMsg->pData[7], pInMsg->pData[8] );
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine163_0 & 0xFFFF
??CrossCallReturnLabel_368:
        LCALL     ??Subroutine146_0 & 0xFFFF
??CrossCallReturnLabel_303:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine148_0 & 0xFFFF
??CrossCallReturnLabel_313:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine169_0 & 0xFFFF
??CrossCallReturnLabel_379:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOV       R0,#?V0
        LCALL     ?L_MOV_TO_X
// 1265    cmd.operatingModeDuringHoliday = pInMsg->pData[9];
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine78 & 0xFFFF
// 1266 
// 1267    return ( pCBs->pfnDoorLockSetHolidaySchedule( pInMsg, &cmd ) );
// 1268  }
??CrossCallReturnLabel_171:
        LCALL     ??Subroutine160_0 & 0xFFFF
??CrossCallReturnLabel_335:
        LCALL     ?CALL_IND
        SJMP      ??zclClosures_ProcessInDoorLockSetHolidaySchedu_2
// 1269 
// 1270  return ( ZFailure );
??zclClosures_ProcessInDoorLockSetHolidaySchedu_1:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockSetHolidaySchedu_2:
        MOV       A,#0xa
        LJMP      ??Subroutine142_0 & 0xFFFF
// 1271 }
          CFI EndBlock cfiBlock227

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine78:
          CFI Block cfiCond228 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_172
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond229 Using cfiCommon0
          CFI (cfiCond229) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond229) Conditional ??CrossCallReturnLabel_171
          CFI (cfiCond229) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond229) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond229) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond229) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond229) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond229) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond229) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond229) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond229) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond229) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond229) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond229) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond229) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond229) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond229) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond229) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond229) CFA_SP SP+-2
          CFI (cfiCond229) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker230 Using cfiCommon1
          CFI (cfiPicker230) NoFunction
          CFI (cfiPicker230) Picker
        MOVX      @DPTR,A
        ; Setup parameters for indirect call
        ; Setup parameters for indirect call
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       DPL,R6
        MOV       DPH,R7
        RET
          CFI EndBlock cfiCond228
          CFI EndBlock cfiCond229
          CFI EndBlock cfiPicker230

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine23:
          CFI Block cfiCond231 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI Conditional ??CrossCallReturnLabel_57
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond232 Using cfiCommon0
          CFI (cfiCond232) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond232) Conditional ??CrossCallReturnLabel_58
          CFI (cfiCond232) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond232) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond232) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond232) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond232) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond232) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond232) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond232) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond232) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond232) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond232) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond232) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond232) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond232) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond232) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond232) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond232) CFA_SP SP+-2
          CFI (cfiCond232) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker233 Using cfiCommon1
          CFI (cfiPicker233) NoFunction
          CFI (cfiPicker233) Picker
        LCALL     ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_221:
        MOV       R5,A
        MOV       DPL,R4
        MOV       DPH,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V0,A
        RET
          CFI EndBlock cfiCond231
          CFI EndBlock cfiCond232
          CFI EndBlock cfiPicker233
// 1272 
// 1273 /*********************************************************************
// 1274  * @fn      zclClosures_ProcessInDoorLockGetHolidaySchedule
// 1275  *
// 1276  * @brief   Process in the received Get Holiday Schedule cmd
// 1277  *
// 1278  * @param   pInMsg - pointer to the incoming message
// 1279  * @param   pCBs - pointer to the application callbacks
// 1280  *
// 1281  * @return  ZStatus_t
// 1282  */
// 1283 static ZStatus_t zclClosures_ProcessInDoorLockGetHolidaySchedule( zclIncoming_t *pInMsg,
// 1284                                                                   zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1285 {
// 1286  if ( pCBs->pfnDoorLockGetHolidaySchedule )
// 1287  {
// 1288    zclDoorLockHolidayScheduleID_t cmd;
// 1289 
// 1290    cmd.holidayScheduleID = pInMsg->pData[0];
// 1291 
// 1292    return ( pCBs->pfnDoorLockGetHolidaySchedule( pInMsg, &cmd ) );
// 1293  }
// 1294 
// 1295  return ( ZFailure );
// 1296 }
// 1297 
// 1298 /*********************************************************************
// 1299  * @fn      zclClosures_ProcessInDoorLockClearHolidaySchedule
// 1300  *
// 1301  * @brief   Process in the received Clear Holiday Schedule cmd
// 1302  *
// 1303  * @param   pInMsg - pointer to the incoming message
// 1304  * @param   pCBs - pointer to the application callbacks
// 1305  *
// 1306  * @return  ZStatus_t
// 1307  */
// 1308 static ZStatus_t zclClosures_ProcessInDoorLockClearHolidaySchedule( zclIncoming_t *pInMsg,
// 1309                                                                     zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1310 {
// 1311  if ( pCBs->pfnDoorLockClearHolidaySchedule )
// 1312  {
// 1313    zclDoorLockHolidayScheduleID_t cmd;
// 1314 
// 1315    cmd.holidayScheduleID = pInMsg->pData[0];
// 1316 
// 1317    return ( pCBs->pfnDoorLockClearHolidaySchedule( pInMsg, &cmd ) );
// 1318  }
// 1319 
// 1320  return ( ZFailure );
// 1321 }
// 1322 
// 1323 /*********************************************************************
// 1324  * @fn      zclClosures_ProcessInDoorLockSetUserType
// 1325  *
// 1326  * @brief   Process in the received Set User Type cmd
// 1327  *
// 1328  * @param   pInMsg - pointer to the incoming message
// 1329  * @param   pCBs - pointer to the application callbacks
// 1330  *
// 1331  * @return  ZStatus_t
// 1332  */
// 1333 static ZStatus_t zclClosures_ProcessInDoorLockSetUserType( zclIncoming_t *pInMsg,
// 1334                                                            zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1335 {
// 1336  if ( pCBs->pfnDoorLockSetUserType )
// 1337  {
// 1338    zclDoorLockSetUserType_t cmd;
// 1339 
// 1340    cmd.userID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
// 1341    cmd.userType = pInMsg->pData[2];
// 1342 
// 1343    return ( pCBs->pfnDoorLockSetUserType( pInMsg, &cmd ) );
// 1344  }
// 1345 
// 1346  return ( ZFailure );
// 1347 }
// 1348 
// 1349 /*********************************************************************
// 1350  * @fn      zclClosures_ProcessInDoorLockGetUserType
// 1351  *
// 1352  * @brief   Process in the received Get User Type cmd
// 1353  *
// 1354  * @param   pInMsg - pointer to the incoming message
// 1355  * @param   pCBs - pointer to the application callbacks
// 1356  *
// 1357  * @return  ZStatus_t
// 1358  */
// 1359 static ZStatus_t zclClosures_ProcessInDoorLockGetUserType( zclIncoming_t *pInMsg,
// 1360                                                            zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1361 {
// 1362  if ( pCBs->pfnDoorLockGetUserType )
// 1363  {
// 1364    zclDoorLockUserID_t cmd;
// 1365 
// 1366    cmd.userID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
// 1367 
// 1368    return ( pCBs->pfnDoorLockGetUserType( pInMsg, &cmd ) );
// 1369  }
// 1370 
// 1371  return ( ZFailure );
// 1372 }
// 1373 
// 1374 /*********************************************************************
// 1375  * @fn      zclClosures_ProcessInDoorLockSetRFIDCode
// 1376  *
// 1377  * @brief   Process in the received Set RFID Code cmd
// 1378  *
// 1379  * @param   pInMsg - pointer to the incoming message
// 1380  * @param   pCBs - pointer to the application callbacks
// 1381  *
// 1382  * @return  ZStatus_t
// 1383  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1384 static ZStatus_t zclClosures_ProcessInDoorLockSetRFIDCode( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockSetRFIDCode:
          CFI Block cfiBlock234 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetRFIDCode
        CODE
// 1385                                                            zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1386 {
        FUNCALL zclClosures_ProcessInDoorLockSetRFIDCode, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockSetRFIDCode, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 6
        MOV       A,#-0x6
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
// 1387   ZStatus_t status;
// 1388 
// 1389   if ( pCBs->pfnDoorLockSetRFIDCode )
        MOV       A,R4
        ADD       A,#0x2a
        LCALL     ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_425:
        JZ        ??zclClosures_ProcessInDoorLockSetRFIDCode_0
// 1390   {
// 1391     uint8 i;
// 1392     uint8 offset;
// 1393     uint8 calculatedArrayLen;
// 1394     zclDoorLockSetRFIDCode_t cmd;
// 1395 
// 1396     // first octet of PIN/RFID Code variable string identifies its length
// 1397     calculatedArrayLen = pInMsg->pData[4] + 1;  // add first byte of string
        LCALL     ?Subroutine16 & 0xFFFF
// 1398 
// 1399     cmd.pRfidCode = zcl_mem_alloc( calculatedArrayLen );
??CrossCallReturnLabel_13:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine67 & 0xFFFF
// 1400     if ( !cmd.pRfidCode )
??CrossCallReturnLabel_146:
        JNZ       ??zclClosures_ProcessInDoorLockSetRFIDCode_1
// 1401     {
// 1402       return ( ZMemError );  // no memory
        MOV       R1,#0x10
        SJMP      ??zclClosures_ProcessInDoorLockSetRFIDCode_2
// 1403     }
// 1404 
// 1405     cmd.userID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
??zclClosures_ProcessInDoorLockSetRFIDCode_1:
        LCALL     ?Subroutine12 & 0xFFFF
// 1406     cmd.userStatus = pInMsg->pData[2];
??CrossCallReturnLabel_9:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine26 & 0xFFFF
// 1407     cmd.userType = pInMsg->pData[3];
??CrossCallReturnLabel_62:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine80 & 0xFFFF
// 1408     offset = 4;
// 1409     for ( i = 0; i < calculatedArrayLen; i++ )
??CrossCallReturnLabel_177:
        SJMP      ??zclClosures_ProcessInDoorLockSetRFIDCode_3
// 1410     {
// 1411       cmd.pRfidCode[i] = pInMsg->pData[offset++];
??zclClosures_ProcessInDoorLockSetRFIDCode_4:
        MOV       A,R1
        MOV       R2,A
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine190_0 & 0xFFFF
// 1412     }
??CrossCallReturnLabel_461:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R0
        MOV       R2,A
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_49:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_ProcessInDoorLockSetRFIDCode_3:
        MOV       A,R0
        CLR       C
        SUBB      A,?V4
        JC        ??zclClosures_ProcessInDoorLockSetRFIDCode_4
// 1413 
// 1414     status = ( pCBs->pfnDoorLockSetRFIDCode( pInMsg, &cmd ) );
        ; Setup parameters for indirect call
        LCALL     ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_348:
        LCALL     ?CALL_IND
        MOV       A,R1
        MOV       R6,A
// 1415     zcl_mem_free( cmd.pRfidCode );
        ; Setup parameters for call to function osal_mem_free
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine176_0 & 0xFFFF
// 1416     return status;
// 1417   }
??CrossCallReturnLabel_388:
        SJMP      ??zclClosures_ProcessInDoorLockSetRFIDCode_2
// 1418 
// 1419  return ( ZFailure );
??zclClosures_ProcessInDoorLockSetRFIDCode_0:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockSetRFIDCode_2:
        LJMP      ?Subroutine1 & 0xFFFF
// 1420 }
          CFI EndBlock cfiBlock234
// 1421 
// 1422 /*********************************************************************
// 1423  * @fn      zclClosures_ProcessInDoorLockGetRFIDCode
// 1424  *
// 1425  * @brief   Process in the received Get RFID Code cmd
// 1426  *
// 1427  * @param   pInMsg - pointer to the incoming message
// 1428  * @param   pCBs - pointer to the application callbacks
// 1429  *
// 1430  * @return  ZStatus_t
// 1431  */
// 1432 static ZStatus_t zclClosures_ProcessInDoorLockGetRFIDCode( zclIncoming_t *pInMsg,
// 1433                                                            zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1434 {
// 1435  if ( pCBs->pfnDoorLockGetRFIDCode )
// 1436  {
// 1437    zclDoorLockUserID_t cmd;
// 1438 
// 1439    cmd.userID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
// 1440 
// 1441    return ( pCBs->pfnDoorLockGetRFIDCode( pInMsg, &cmd ) );
// 1442  }
// 1443 
// 1444  return ( ZFailure );
// 1445 }
// 1446 
// 1447 /*********************************************************************
// 1448  * @fn      zclClosures_ProcessInDoorLockClearRFIDCode
// 1449  *
// 1450  * @brief   Process in the received Clear RFID Code cmd
// 1451  *
// 1452  * @param   pInMsg - pointer to the incoming message
// 1453  * @param   pCBs - pointer to the application callbacks
// 1454  *
// 1455  * @return  ZStatus_t
// 1456  */
// 1457 static ZStatus_t zclClosures_ProcessInDoorLockClearRFIDCode( zclIncoming_t *pInMsg,
// 1458                                                              zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1459 {
// 1460  if ( pCBs->pfnDoorLockClearRFIDCode )
// 1461  {
// 1462    zclDoorLockUserID_t cmd;
// 1463 
// 1464    cmd.userID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
// 1465 
// 1466    return ( pCBs->pfnDoorLockClearRFIDCode( pInMsg, &cmd ) );
// 1467  }
// 1468 
// 1469  return ( ZFailure );
// 1470 }
// 1471 
// 1472 /*********************************************************************
// 1473  * @fn      zclClosures_ProcessInDoorLockClearAllRFIDCodes
// 1474  *
// 1475  * @brief   Process in the received Clear All RFID Codes cmd
// 1476  *
// 1477  * @param   pInMsg - pointer to the incoming message
// 1478  * @param   pCBs - pointer to the application callbacks
// 1479  *
// 1480  * @return  ZStatus_t
// 1481  */
// 1482 static ZStatus_t zclClosures_ProcessInDoorLockClearAllRFIDCodes( zclIncoming_t *pInMsg,
// 1483                                                                  zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1484 {
// 1485  if ( pCBs->pfnDoorLockClearAllRFIDCodes )
// 1486  {
// 1487    // no payload
// 1488 
// 1489    return ( pCBs->pfnDoorLockClearAllRFIDCodes( pInMsg ) );
// 1490  }
// 1491 
// 1492  return ( ZFailure );
// 1493 }
// 1494 
// 1495 /*********************************************************************
// 1496  * @fn      zclClosures_ProcessInDoorLockSetTemporaryPin
// 1497  *
// 1498  * @brief   Process in the received Set Temporary Pin cmd
// 1499  *
// 1500  * @param   pInMsg - pointer to the incoming message
// 1501  * @param   pCBs - pointer to the application callbacks
// 1502  *
// 1503  * @return  ZStatus_t
// 1504  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1505 static ZStatus_t zclClosures_ProcessInDoorLockSetTemporaryPin( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockSetTemporaryPin:
          CFI Block cfiBlock235 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetTemporaryPin
        CODE
// 1506                                                                zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1507 {
        FUNCALL zclClosures_ProcessInDoorLockSetTemporaryPin, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockSetTemporaryPin, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockSetTemporaryPin, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockSetTemporaryPin, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockSetTemporaryPin, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        MOV       A,#-0x13
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
        ; Saved register size: 19
        ; Auto size: 9
        MOV       A,#-0x9
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       ?V8,R2
        MOV       ?V9,R3
// 1508   ZStatus_t status;
// 1509   uint8 i,j;
// 1510   uint8 offset = 0;
        MOV       ?V4,#0x0
// 1511 
// 1512   if ( pCBs->pfnDoorLockSetTemporaryPin )
        MOV       A,R4
        ADD       A,#0x32
        MOV       R6,A
        CLR       A
        ADDC      A,R5
        MOV       R7,A
        MOV       DPL,R6
        LCALL     ??Subroutine180_0 & 0xFFFF
??CrossCallReturnLabel_415:
        JNZ       $+5
        LJMP      ??zclClosures_ProcessInDoorLockSetTemporaryPin_0 & 0xFFFF
// 1513   {
// 1514     zclDoorLockSetTemporaryPin_t cmd;
// 1515 
// 1516     // adminPin
// 1517     j = offset;
// 1518     cmd.adminPin = (uint8 *)zcl_mem_alloc( pInMsg->pData[j] + 1 );
        MOV       A,R2
        ADD       A,#0x8
        MOV       ?V0,A
        CLR       A
        ADDC      A,?V9
        MOV       ?V1,A
        ; Setup parameters for call to function osal_mem_alloc
        MOV       DPL,?V0
        MOV       DPH,A
        LCALL     ??Subroutine160_0 & 0xFFFF
??CrossCallReturnLabel_336:
        MOVX      A,@DPTR
        ADD       A,#0x1
        MOV       R2,A
        CLR       A
        ADDC      A,#0x0
        MOV       R3,A
        LCALL     ?Subroutine76 & 0xFFFF
// 1519     if ( !cmd.adminPin )
??CrossCallReturnLabel_168:
        LCALL     ??Subroutine181_0 & 0xFFFF
??CrossCallReturnLabel_412:
        JZ        ??CrossCallReturnLabel_125
// 1520     {
// 1521       return ( ZMemError );  // no memory
// 1522     }
// 1523     for ( i=0; i<pInMsg->pData[j]+1; i++ )
        MOV       R2,#0x0
        SJMP      ??CrossCallReturnLabel_83
// 1524     {
// 1525       cmd.adminPin[i] = pInMsg->pData[offset++];
??zclClosures_ProcessInDoorLockSetTemporaryPin_1:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine35 & 0xFFFF
// 1526     }
??CrossCallReturnLabel_83:
        LCALL     ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_446:
        MOV       A,?V4
        MOV       ?V2,A
        LCALL     ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_217:
        MOV       R3,A
        MOV       A,R2
        MOV       R4,A
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        MOV       R1,#0x0
        ADD       A,#0x1
        MOV       R0,A
        JNC       ??zclClosures_ProcessInDoorLockSetTemporaryPin_2
        INC       R1
??zclClosures_ProcessInDoorLockSetTemporaryPin_2:
        LCALL     ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_219:
        JC        ??zclClosures_ProcessInDoorLockSetTemporaryPin_1
// 1527 
// 1528     // tempPin
// 1529     j = offset;
// 1530     cmd.tempPin = (uint8 *)zcl_mem_alloc( pInMsg->pData[j] + 1 );
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,R3
        ADD       A,#0x1
        MOV       R2,A
        CLR       A
        ADDC      A,#0x0
        MOV       R3,A
        LCALL     ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_199:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine67 & 0xFFFF
// 1531     if ( !cmd.tempPin )
??CrossCallReturnLabel_147:
        JNZ       ??zclClosures_ProcessInDoorLockSetTemporaryPin_3
// 1532     {
// 1533       zcl_mem_free( cmd.adminPin );
        ; Setup parameters for call to function osal_mem_free
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine57 & 0xFFFF
// 1534       return ( ZMemError );  // no memory
??CrossCallReturnLabel_125:
        MOV       R1,#0x10
        LJMP      ??zclClosures_ProcessInDoorLockSetTemporaryPin_4 & 0xFFFF
// 1535     }
// 1536     for ( i=0; i<pInMsg->pData[j]+1; i++ )
??zclClosures_ProcessInDoorLockSetTemporaryPin_3:
        MOV       R2,#0x0
        SJMP      ??CrossCallReturnLabel_84
// 1537     {
// 1538       cmd.tempPin[i] = pInMsg->pData[offset++];
??zclClosures_ProcessInDoorLockSetTemporaryPin_5:
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine35 & 0xFFFF
// 1539     }
??CrossCallReturnLabel_84:
        LCALL     ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_447:
        MOV       R4,?V4
        MOV       A,R0
        ADD       A,R4
        MOV       DPL,A
        CLR       A
        ADDC      A,R1
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R3,A
        MOV       A,R2
        MOV       R4,A
        LCALL     ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_218:
        MOV       R1,#0x0
        ADD       A,#0x1
        MOV       R0,A
        JNC       ??zclClosures_ProcessInDoorLockSetTemporaryPin_6
        INC       R1
??zclClosures_ProcessInDoorLockSetTemporaryPin_6:
        LCALL     ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_220:
        JC        ??zclClosures_ProcessInDoorLockSetTemporaryPin_5
// 1540 
// 1541     // activeTimes
// 1542     cmd.activeTimes = pInMsg->pData[offset++];
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R3
        MOVX      @DPTR,A
        INC       ?V4
// 1543 
// 1544     // activeTime
// 1545     cmd.activeTime = BUILD_UINT32( pInMsg->pData[offset], pInMsg->pData[offset+1], pInMsg->pData[offset+2], pInMsg->pData[offset+3] );
        MOV       R0,?V4
        MOV       DPL,?V0
        MOV       DPH,?V1
        MOVX      A,@DPTR
        ADD       A,R0
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R3,A
        MOV       DPL,R2
        MOV       DPH,A
        LCALL     ??Subroutine167_0 & 0xFFFF
??CrossCallReturnLabel_406:
        LCALL     ??Subroutine158_0 & 0xFFFF
??CrossCallReturnLabel_319:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ??Subroutine153_0 & 0xFFFF
??CrossCallReturnLabel_307:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ??Subroutine174_0 & 0xFFFF
??CrossCallReturnLabel_373:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine68 & 0xFFFF
// 1546 
// 1547     status = ( pCBs->pfnDoorLockSetTemporaryPin( pInMsg, &cmd ) );
??CrossCallReturnLabel_153:
        ; Setup parameters for indirect call
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       R2,?V8
        MOV       R3,?V9
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine160_0 & 0xFFFF
??CrossCallReturnLabel_337:
        LCALL     ?CALL_IND
        MOV       A,R1
        MOV       R6,A
// 1548     zcl_mem_free( cmd.tempPin );
        ; Setup parameters for call to function osal_mem_free
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine57 & 0xFFFF
// 1549     zcl_mem_free( cmd.adminPin );
??CrossCallReturnLabel_126:
        ; Setup parameters for call to function osal_mem_free
        LCALL     ?Subroutine19 & 0xFFFF
// 1550     return status;
// 1551   }
??CrossCallReturnLabel_385:
        SJMP      ??zclClosures_ProcessInDoorLockSetTemporaryPin_4
// 1552 
// 1553   return ( ZFailure );
??zclClosures_ProcessInDoorLockSetTemporaryPin_0:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockSetTemporaryPin_4:
        MOV       A,#0x9
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       R7,#0xb
        LJMP      ?BANKED_LEAVE_XDATA
// 1554 }
          CFI EndBlock cfiBlock235

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine98:
          CFI Block cfiCond236 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI Conditional ??CrossCallReturnLabel_219
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond237 Using cfiCommon0
          CFI (cfiCond237) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond237) Conditional ??CrossCallReturnLabel_220
          CFI (cfiCond237) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond237) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond237) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond237) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond237) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond237) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond237) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond237) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond237) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond237) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond237) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond237) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond237) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond237) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond237) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond237) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond237) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond237) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond237) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond237) CFA_SP SP+-2
          CFI (cfiCond237) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker238 Using cfiCommon1
          CFI (cfiPicker238) NoFunction
          CFI (cfiPicker238) Picker
        CLR       C
        MOV       A,R4
        SUBB      A,R0
        CLR       A
        SUBB      A,R1
        MOV       C,0xD0 /* PSW */.2
        XRL       A,PSW
        RLC       A
        RET
          CFI EndBlock cfiCond236
          CFI EndBlock cfiCond237
          CFI EndBlock cfiPicker238

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine97:
          CFI Block cfiCond239 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI Conditional ??CrossCallReturnLabel_217
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond240 Using cfiCommon0
          CFI (cfiCond240) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond240) Conditional ??CrossCallReturnLabel_218
          CFI (cfiCond240) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond240) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond240) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond240) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond240) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond240) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond240) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond240) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond240) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond240) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond240) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond240) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond240) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond240) CFA_SP SP+-2
          CFI (cfiCond240) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker241 Using cfiCommon1
          CFI (cfiPicker241) NoFunction
          CFI (cfiPicker241) Picker
        MOV       A,R0
        ADD       A,?V2
        MOV       DPL,A
        CLR       A
        ADDC      A,R1
        MOV       DPH,A
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond239
          CFI EndBlock cfiCond240
          CFI EndBlock cfiPicker241

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine89:
          CFI Block cfiCond242 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI Conditional ??CrossCallReturnLabel_198
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond243 Using cfiCommon0
          CFI (cfiCond243) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond243) Conditional ??CrossCallReturnLabel_199
          CFI (cfiCond243) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond243) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond243) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond243) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond243) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond243) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond243) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond243) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond243) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond243) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond243) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond243) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond243) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond243) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond243) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond243) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond243) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond243) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond243) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond243) CFA_SP SP+-2
          CFI (cfiCond243) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker244 Using cfiCommon1
          CFI (cfiPicker244) NoFunction
          CFI (cfiPicker244) Picker
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V7,R3
        MOV       R1,?V7
        MOV       A,#0x2
        RET
          CFI EndBlock cfiCond242
          CFI EndBlock cfiCond243
          CFI EndBlock cfiPicker244

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine76:
          CFI Block cfiCond245 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLock
          CFI Conditional ??CrossCallReturnLabel_167
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond246 Using cfiCommon0
          CFI (cfiCond246) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond246) Conditional ??CrossCallReturnLabel_168
          CFI (cfiCond246) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond246) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond246) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond246) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond246) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond246) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond246) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond246) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond246) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond246) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond246) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond246) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond246) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond246) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond246) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond246) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond246) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond246) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond246) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond246) CFA_SP SP+-2
          CFI (cfiCond246) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker247 Using cfiCommon1
          CFI (cfiPicker247) NoFunction
          CFI (cfiPicker247) Picker
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,R2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        MOVX      @DPTR,A
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        RET
          CFI EndBlock cfiCond245
          CFI EndBlock cfiCond246
          CFI EndBlock cfiPicker247

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine57:
          CFI Block cfiCond248 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI Conditional ??CrossCallReturnLabel_125
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond249 Using cfiCommon0
          CFI (cfiCond249) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond249) Conditional ??CrossCallReturnLabel_126
          CFI (cfiCond249) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond249) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond249) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond249) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond249) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond249) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond249) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond249) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond249) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond249) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond249) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond249) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond249) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond249) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond249) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond249) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond249) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond249) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond249) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond249) CFA_SP SP+-2
          CFI (cfiCond249) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker250 Using cfiCommon1
          CFI (cfiPicker250) NoFunction
          CFI (cfiPicker250) Picker
        LCALL     ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_394:
        RET
          CFI EndBlock cfiCond248
          CFI EndBlock cfiCond249
          CFI EndBlock cfiPicker250

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine111:
          CFI Block cfiCond251 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI Conditional ??CrossCallReturnLabel_394, ??CrossCallReturnLabel_125
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond252 Using cfiCommon0
          CFI (cfiCond252) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond252) Conditional ??CrossCallReturnLabel_394, ??CrossCallReturnLabel_126
          CFI (cfiCond252) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond252) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond252) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond252) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond252) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond252) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond252) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond252) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond252) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond252) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond252) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond252) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond252) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond252) CFA_SP SP+-4
          CFI (cfiCond252) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond253 Using cfiCommon0
          CFI (cfiCond253) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond253) Conditional ??CrossCallReturnLabel_395, ??CrossCallReturnLabel_384
          CFI (cfiCond253) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond253) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond253) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond253) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond253) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond253) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond253) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond253) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond253) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond253) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond253) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond253) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond253) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond253) CFA_SP SP+-4
          CFI (cfiCond253) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond254 Using cfiCommon0
          CFI (cfiCond254) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond254) Conditional ??CrossCallReturnLabel_395, ??CrossCallReturnLabel_385
          CFI (cfiCond254) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond254) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond254) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond254) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond254) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond254) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond254) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond254) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond254) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond254) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond254) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond254) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond254) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond254) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond254) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond254) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond254) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond254) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond254) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond254) CFA_SP SP+-4
          CFI (cfiCond254) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond255 Using cfiCommon0
          CFI (cfiCond255) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond255) Conditional ??CrossCallReturnLabel_395, ??CrossCallReturnLabel_386
          CFI (cfiCond255) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond255) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond255) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond255) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond255) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond255) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond255) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond255) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond255) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond255) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond255) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond255) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond255) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond255) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond255) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond255) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond255) CFA_SP SP+-4
          CFI (cfiCond255) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond256 Using cfiCommon0
          CFI (cfiCond256) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond256) Conditional ??CrossCallReturnLabel_395, ??CrossCallReturnLabel_387
          CFI (cfiCond256) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond256) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond256) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond256) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond256) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond256) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond256) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond256) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond256) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond256) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond256) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond256) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond256) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond256) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond256) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond256) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond256) CFA_SP SP+-4
          CFI (cfiCond256) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond257 Using cfiCommon0
          CFI (cfiCond257) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond257) Conditional ??CrossCallReturnLabel_395, ??CrossCallReturnLabel_388
          CFI (cfiCond257) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond257) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond257) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond257) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond257) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond257) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond257) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond257) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond257) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond257) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond257) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond257) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond257) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond257) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond257) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond257) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond257) CFA_SP SP+-4
          CFI (cfiCond257) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond258 Using cfiCommon0
          CFI (cfiCond258) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond258) Conditional ??CrossCallReturnLabel_395, ??CrossCallReturnLabel_389
          CFI (cfiCond258) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond258) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond258) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond258) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond258) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond258) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond258) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond258) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond258) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond258) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond258) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond258) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond258) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond258) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond258) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond258) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond258) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond258) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond258) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond258) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond258) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond258) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond258) CFA_SP SP+-4
          CFI (cfiCond258) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond259 Using cfiCommon0
          CFI (cfiCond259) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond259) Conditional ??CrossCallReturnLabel_395, ??CrossCallReturnLabel_390
          CFI (cfiCond259) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond259) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond259) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond259) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond259) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond259) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond259) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond259) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond259) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond259) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond259) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond259) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond259) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond259) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond259) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond259) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond259) CFA_SP SP+-4
          CFI (cfiCond259) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond260 Using cfiCommon0
          CFI (cfiCond260) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond260) Conditional ??CrossCallReturnLabel_395, ??CrossCallReturnLabel_391
          CFI (cfiCond260) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond260) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond260) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond260) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond260) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond260) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond260) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond260) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond260) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond260) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond260) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond260) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond260) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond260) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond260) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond260) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond260) CFA_SP SP+-4
          CFI (cfiCond260) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond261 Using cfiCommon0
          CFI (cfiCond261) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond261) Conditional ??CrossCallReturnLabel_395, ??CrossCallReturnLabel_392
          CFI (cfiCond261) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond261) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond261) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond261) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond261) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond261) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond261) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond261) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond261) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond261) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond261) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond261) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond261) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond261) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond261) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond261) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond261) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond261) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond261) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond261) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond261) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond261) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond261) CFA_SP SP+-4
          CFI (cfiCond261) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond262 Using cfiCommon0
          CFI (cfiCond262) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond262) Conditional ??CrossCallReturnLabel_395, ??CrossCallReturnLabel_393
          CFI (cfiCond262) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond262) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond262) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond262) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond262) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond262) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond262) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond262) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond262) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond262) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond262) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond262) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond262) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond262) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond262) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond262) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond262) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond262) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond262) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond262) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond262) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond262) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond262) CFA_SP SP+-4
          CFI (cfiCond262) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker263 Using cfiCommon1
          CFI (cfiPicker263) NoFunction
          CFI (cfiPicker263) Picker
        LCALL     ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_401:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        RET
          CFI EndBlock cfiCond251
          CFI EndBlock cfiCond252
          CFI EndBlock cfiCond253
          CFI EndBlock cfiCond254
          CFI EndBlock cfiCond255
          CFI EndBlock cfiCond256
          CFI EndBlock cfiCond257
          CFI EndBlock cfiCond258
          CFI EndBlock cfiCond259
          CFI EndBlock cfiCond260
          CFI EndBlock cfiCond261
          CFI EndBlock cfiCond262
          CFI EndBlock cfiPicker263

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine133:
          CFI Block cfiCond264 Using cfiCommon0
          CFI Function zclClosures_HdlIncoming
          CFI Conditional ??CrossCallReturnLabel_399
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond265 Using cfiCommon0
          CFI (cfiCond265) Function zclClosures_RegisterDoorLockCmdCallbacks
          CFI (cfiCond265) Conditional ??CrossCallReturnLabel_400, ??CrossCallReturnLabel_120
          CFI (cfiCond265) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond265) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond265) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond265) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond265) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond265) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond265) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond265) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond265) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond265) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond265) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond265) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond265) CFA_SP SP+-4
          CFI (cfiCond265) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond266 Using cfiCommon0
          CFI (cfiCond266) Function zclClosures_RegisterDoorLockCmdCallbacks
          CFI (cfiCond266) Conditional ??CrossCallReturnLabel_400, ??CrossCallReturnLabel_121
          CFI (cfiCond266) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond266) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond266) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond266) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond266) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond266) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond266) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond266) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond266) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond266) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond266) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond266) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond266) CFA_SP SP+-4
          CFI (cfiCond266) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond267 Using cfiCommon0
          CFI (cfiCond267) Function zclClosures_HdlIncoming
          CFI (cfiCond267) Conditional ??CrossCallReturnLabel_400, ??CrossCallReturnLabel_122
          CFI (cfiCond267) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond267) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond267) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond267) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond267) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond267) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond267) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond267) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond267) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond267) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond267) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond267) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond267) CFA_SP SP+-4
          CFI (cfiCond267) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond268 Using cfiCommon0
          CFI (cfiCond268) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond268) Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_394, ??CrossCallReturnLabel_125
          CFI (cfiCond268) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond268) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond268) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond268) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond268) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond268) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond268) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond268) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond268) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond268) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond268) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond268) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond268) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond268) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond268) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond268) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond268) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond268) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond268) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond268) CFA_SP SP+-6
          CFI (cfiCond268) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond269 Using cfiCommon0
          CFI (cfiCond269) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond269) Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_394, ??CrossCallReturnLabel_126
          CFI (cfiCond269) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond269) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond269) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond269) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond269) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond269) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond269) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond269) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond269) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond269) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond269) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond269) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond269) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond269) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond269) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond269) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond269) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond269) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond269) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond269) CFA_SP SP+-6
          CFI (cfiCond269) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond270 Using cfiCommon0
          CFI (cfiCond270) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond270) Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_395, ??CrossCallReturnLabel_384
          CFI (cfiCond270) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond270) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond270) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond270) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond270) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond270) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond270) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond270) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond270) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond270) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond270) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond270) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond270) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond270) CFA_SP SP+-6
          CFI (cfiCond270) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond271 Using cfiCommon0
          CFI (cfiCond271) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond271) Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_395, ??CrossCallReturnLabel_385
          CFI (cfiCond271) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond271) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond271) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond271) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond271) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond271) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond271) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond271) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond271) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond271) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond271) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond271) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond271) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond271) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond271) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond271) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond271) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond271) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond271) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond271) CFA_SP SP+-6
          CFI (cfiCond271) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond272 Using cfiCommon0
          CFI (cfiCond272) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond272) Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_395, ??CrossCallReturnLabel_386
          CFI (cfiCond272) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond272) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond272) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond272) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond272) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond272) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond272) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond272) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond272) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond272) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond272) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond272) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond272) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond272) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond272) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond272) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond272) CFA_SP SP+-6
          CFI (cfiCond272) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond273 Using cfiCommon0
          CFI (cfiCond273) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond273) Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_395, ??CrossCallReturnLabel_387
          CFI (cfiCond273) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond273) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond273) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond273) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond273) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond273) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond273) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond273) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond273) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond273) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond273) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond273) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond273) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond273) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond273) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond273) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond273) CFA_SP SP+-6
          CFI (cfiCond273) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond274 Using cfiCommon0
          CFI (cfiCond274) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond274) Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_395, ??CrossCallReturnLabel_388
          CFI (cfiCond274) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond274) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond274) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond274) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond274) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond274) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond274) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond274) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond274) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond274) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond274) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond274) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond274) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond274) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond274) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond274) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond274) CFA_SP SP+-6
          CFI (cfiCond274) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond275 Using cfiCommon0
          CFI (cfiCond275) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond275) Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_395, ??CrossCallReturnLabel_389
          CFI (cfiCond275) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond275) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond275) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond275) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond275) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond275) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond275) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond275) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond275) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond275) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond275) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond275) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond275) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond275) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond275) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond275) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond275) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond275) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond275) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond275) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond275) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond275) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond275) CFA_SP SP+-6
          CFI (cfiCond275) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond276 Using cfiCommon0
          CFI (cfiCond276) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond276) Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_395, ??CrossCallReturnLabel_390
          CFI (cfiCond276) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond276) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond276) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond276) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond276) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond276) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond276) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond276) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond276) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond276) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond276) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond276) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond276) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond276) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond276) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond276) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond276) CFA_SP SP+-6
          CFI (cfiCond276) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond277 Using cfiCommon0
          CFI (cfiCond277) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond277) Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_395, ??CrossCallReturnLabel_391
          CFI (cfiCond277) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond277) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond277) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond277) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond277) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond277) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond277) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond277) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond277) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond277) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond277) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond277) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond277) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond277) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond277) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond277) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond277) CFA_SP SP+-6
          CFI (cfiCond277) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond278 Using cfiCommon0
          CFI (cfiCond278) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond278) Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_395, ??CrossCallReturnLabel_392
          CFI (cfiCond278) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond278) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond278) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond278) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond278) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond278) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond278) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond278) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond278) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond278) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond278) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond278) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond278) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond278) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond278) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond278) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond278) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond278) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond278) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond278) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond278) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond278) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond278) CFA_SP SP+-6
          CFI (cfiCond278) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond279 Using cfiCommon0
          CFI (cfiCond279) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond279) Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_395, ??CrossCallReturnLabel_393
          CFI (cfiCond279) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond279) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond279) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond279) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond279) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond279) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond279) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond279) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond279) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond279) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond279) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond279) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond279) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond279) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond279) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond279) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond279) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond279) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond279) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond279) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond279) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond279) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond279) CFA_SP SP+-6
          CFI (cfiCond279) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond280 Using cfiCommon0
          CFI (cfiCond280) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond280) Conditional ??CrossCallReturnLabel_402, ??CrossCallReturnLabel_396
          CFI (cfiCond280) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond280) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond280) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond280) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond280) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond280) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond280) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond280) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond280) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond280) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond280) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond280) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond280) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond280) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond280) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond280) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond280) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond280) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond280) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond280) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond280) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond280) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond280) CFA_SP SP+-4
          CFI (cfiCond280) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond281 Using cfiCommon0
          CFI (cfiCond281) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond281) Conditional ??CrossCallReturnLabel_402, ??CrossCallReturnLabel_397
          CFI (cfiCond281) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond281) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond281) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond281) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond281) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond281) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond281) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond281) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond281) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond281) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond281) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond281) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond281) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond281) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond281) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond281) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond281) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond281) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond281) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond281) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond281) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond281) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond281) CFA_SP SP+-4
          CFI (cfiCond281) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond282 Using cfiCommon0
          CFI (cfiCond282) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond282) Conditional ??CrossCallReturnLabel_402, ??CrossCallReturnLabel_398
          CFI (cfiCond282) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond282) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond282) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond282) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond282) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond282) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond282) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond282) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond282) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond282) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond282) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond282) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond282) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond282) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond282) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond282) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond282) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond282) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond282) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond282) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond282) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond282) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond282) CFA_SP SP+-4
          CFI (cfiCond282) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker283 Using cfiCommon1
          CFI (cfiPicker283) NoFunction
          CFI (cfiPicker283) Picker
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R3,A
        RET
          CFI EndBlock cfiCond264
          CFI EndBlock cfiCond265
          CFI EndBlock cfiCond266
          CFI EndBlock cfiCond267
          CFI EndBlock cfiCond268
          CFI EndBlock cfiCond269
          CFI EndBlock cfiCond270
          CFI EndBlock cfiCond271
          CFI EndBlock cfiCond272
          CFI EndBlock cfiCond273
          CFI EndBlock cfiCond274
          CFI EndBlock cfiCond275
          CFI EndBlock cfiCond276
          CFI EndBlock cfiCond277
          CFI EndBlock cfiCond278
          CFI EndBlock cfiCond279
          CFI EndBlock cfiCond280
          CFI EndBlock cfiCond281
          CFI EndBlock cfiCond282
          CFI EndBlock cfiPicker283

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine35:
          CFI Block cfiCond284 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI Conditional ??CrossCallReturnLabel_83
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond285 Using cfiCommon0
          CFI (cfiCond285) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond285) Conditional ??CrossCallReturnLabel_84
          CFI (cfiCond285) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond285) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond285) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond285) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond285) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond285) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond285) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond285) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond285) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond285) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond285) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond285) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond285) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond285) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond285) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond285) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond285) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond285) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond285) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond285) CFA_SP SP+-2
          CFI (cfiCond285) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker286 Using cfiCommon1
          CFI (cfiPicker286) NoFunction
          CFI (cfiPicker286) Picker
        MOVX      A,@DPTR
        ADD       A,R4
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       DPL,R0
        MOV       DPH,A
        MOV       A,R3
        MOVX      @DPTR,A
        INC       ?V4
        INC       R2
        RET
          CFI EndBlock cfiCond284
          CFI EndBlock cfiCond285
          CFI EndBlock cfiPicker286
// 1555 
// 1556 /*********************************************************************
// 1557  * @fn      zclClosures_ModifyPin
// 1558  *
// 1559  * @brief   Process in the received Modify Pin cmd
// 1560  *
// 1561  * @param   pInMsg - pointer to the incoming message
// 1562  * @param   pCBs - pointer to the application callbacks
// 1563  *
// 1564  * @return  ZStatus_t
// 1565  */
// 1566 static ZStatus_t zclClosures_ModifyPin( zclIncoming_t *pInMsg,
// 1567                                             zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1568 {
// 1569   if ( pCBs->pfnDoorLockModifyPin )
// 1570   {
// 1571     zclDoorLockModifyPin_t cmd;
// 1572     uint8 count,num = 0;
// 1573     
// 1574     for(count=0;count<PIN_LEN_MAX;count++)
// 1575     {
// 1576       cmd.OriginalPin[count] = pInMsg->pData[num++];
// 1577     }
// 1578     
// 1579     for(count=0;count<PIN_LEN_MAX;count++)
// 1580     {
// 1581       cmd.ModifyPin[count] = pInMsg->pData[num++];
// 1582     }
// 1583     
// 1584     return ( pCBs->pfnDoorLockModifyPin( pInMsg, &cmd ) );
// 1585   }
// 1586   
// 1587   return ( ZFailure );
// 1588 }
// 1589 
// 1590 /*********************************************************************
// 1591  * @fn      zclClosures_ProcessInDoorLockUnlockWithTimeoutRsp
// 1592  *
// 1593  * @brief   Process in the received Unlock With Timeout Response cmd
// 1594  *
// 1595  * @param   pInMsg - pointer to the incoming message
// 1596  * @param   pCBs - pointer to the application callbacks
// 1597  *
// 1598  * @return  ZStatus_t
// 1599  */
// 1600 static ZStatus_t zclClosures_ProcessInDoorLockUnlockWithTimeoutRsp( zclIncoming_t *pInMsg,
// 1601                                                                     zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1602 {
// 1603  if ( pCBs->pfnDoorLockUnlockWithTimeoutRsp )
// 1604  {
// 1605    return ( pCBs->pfnDoorLockUnlockWithTimeoutRsp( pInMsg, pInMsg->pData[0] ) );
// 1606  }
// 1607 
// 1608  return ( ZFailure );
// 1609 }
// 1610 
// 1611 /*********************************************************************
// 1612  * @fn      zclClosures_ProcessInDoorLockGetLogRecordRsp
// 1613  *
// 1614  * @brief   Process in the received Get Log Record Response cmd
// 1615  *
// 1616  * @param   pInMsg - pointer to the incoming message
// 1617  * @param   pCBs - pointer to the application callbacks
// 1618  *
// 1619  * @return  ZStatus_t
// 1620  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1621 static ZStatus_t zclClosures_ProcessInDoorLockGetLogRecordRsp( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockGetLogRecordRsp:
          CFI Block cfiBlock287 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetLogRecordRsp
        CODE
// 1622                                                                zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1623 {
        FUNCALL zclClosures_ProcessInDoorLockGetLogRecordRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockGetLogRecordRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV       A,#-0x16
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 13
        MOV       A,#-0xd
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       ?V12,R2
        MOV       ?V13,R3
// 1624   ZStatus_t status;
// 1625 
// 1626   if ( pCBs->pfnDoorLockGetLogRecordRsp )
        MOV       A,R4
        ADD       A,#0x38
        MOV       ?V10,A
        CLR       A
        ADDC      A,R5
        MOV       ?V11,A
        MOV       DPL,?V10
        LCALL     ??Subroutine180_0 & 0xFFFF
??CrossCallReturnLabel_416:
        JNZ       $+5
        LJMP      ??zclClosures_ProcessInDoorLockGetLogRecordRsp_0 & 0xFFFF
// 1627   {
// 1628     uint8 i;
// 1629     uint8 offset;
// 1630     uint8 calculatedArrayLen;
// 1631     zclDoorLockGetLogRecordRsp_t cmd;
// 1632 
// 1633     // first octet of PIN/RFID Code variable string identifies its length
// 1634     calculatedArrayLen = pInMsg->pData[11] + 1;  // add first byte of string
        LCALL     ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_87:
        MOV       ?V8,A
// 1635 
// 1636     cmd.pPIN = zcl_mem_alloc( calculatedArrayLen );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_200:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine67 & 0xFFFF
// 1637     if ( !cmd.pPIN )
??CrossCallReturnLabel_148:
        JNZ       ??zclClosures_ProcessInDoorLockGetLogRecordRsp_1
// 1638     {
// 1639       return ( ZMemError );  // no memory
        MOV       R1,#0x10
        LJMP      ??zclClosures_ProcessInDoorLockGetLogRecordRsp_2 & 0xFFFF
// 1640     }
// 1641 
// 1642     cmd.logEntryID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
??zclClosures_ProcessInDoorLockGetLogRecordRsp_1:
        LCALL     ??Subroutine177_0 & 0xFFFF
??CrossCallReturnLabel_398:
        LCALL     ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_359:
        MOV       R1,A
        MOV       A,R4
        LCALL     ?Subroutine84 & 0xFFFF
// 1643     cmd.timestamp = BUILD_UINT32( pInMsg->pData[2], pInMsg->pData[3], pInMsg->pData[4], pInMsg->pData[5] );
??CrossCallReturnLabel_302:
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ??Subroutine178_0 & 0xFFFF
??CrossCallReturnLabel_403:
        LCALL     ??Subroutine156_0 & 0xFFFF
??CrossCallReturnLabel_321:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ??Subroutine151_0 & 0xFFFF
??CrossCallReturnLabel_309:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ??Subroutine172_0 & 0xFFFF
??CrossCallReturnLabel_375:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       R0,#?V0
        LCALL     ?L_MOV_TO_X
// 1644     cmd.eventType = pInMsg->pData[6];
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine61 & 0xFFFF
// 1645     cmd.source = pInMsg->pData[7];
??CrossCallReturnLabel_327:
        ADD       A,#0x7
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine61 & 0xFFFF
// 1646     cmd.eventIDAlarmCode = pInMsg->pData[8];
??CrossCallReturnLabel_328:
        ADD       A,#0x8
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine82 & 0xFFFF
// 1647     cmd.userID = BUILD_UINT16( pInMsg->pData[9], pInMsg->pData[10] );
??CrossCallReturnLabel_183:
        LCALL     ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_128:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R2,A
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R2
        LCALL     ??Subroutine144_0 & 0xFFFF
// 1648     offset = 11;
??CrossCallReturnLabel_300:
        MOV       R1,#0xb
// 1649     for ( i = 0; i < calculatedArrayLen; i++ )
        MOV       R0,#0x0
        SJMP      ??zclClosures_ProcessInDoorLockGetLogRecordRsp_3
// 1650     {
// 1651       cmd.pPIN[i] = pInMsg->pData[offset++];
??zclClosures_ProcessInDoorLockGetLogRecordRsp_4:
        MOV       A,R1
        MOV       R2,A
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine190_0 & 0xFFFF
// 1652     }
??CrossCallReturnLabel_462:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R0
        MOV       R2,A
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_50:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_ProcessInDoorLockGetLogRecordRsp_3:
        MOV       A,R0
        CLR       C
        SUBB      A,?V8
        JC        ??zclClosures_ProcessInDoorLockGetLogRecordRsp_4
// 1653 
// 1654     status = ( pCBs->pfnDoorLockGetLogRecordRsp( pInMsg, &cmd ) );
        ; Setup parameters for indirect call
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       R2,?V12
        MOV       R3,?V13
        MOV       DPL,?V10
        MOV       DPH,?V11
        LCALL     ??Subroutine160_0 & 0xFFFF
??CrossCallReturnLabel_338:
        LCALL     ?CALL_IND
        MOV       A,R1
        MOV       R6,A
// 1655     zcl_mem_free( cmd.pPIN );
        ; Setup parameters for call to function osal_mem_free
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine176_0 & 0xFFFF
// 1656     return status;
// 1657   }
??CrossCallReturnLabel_389:
        SJMP      ??zclClosures_ProcessInDoorLockGetLogRecordRsp_2
// 1658 
// 1659  return ( ZFailure );
??zclClosures_ProcessInDoorLockGetLogRecordRsp_0:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockGetLogRecordRsp_2:
        LJMP      ?Subroutine2 & 0xFFFF
// 1660 }
          CFI EndBlock cfiBlock287

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine110:
          CFI Block cfiCond288 Using cfiCommon0
          CFI Function zclClosures_RegisterDoorLockCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_358
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond289 Using cfiCommon0
          CFI (cfiCond289) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond289) Conditional ??CrossCallReturnLabel_361, ??CrossCallReturnLabel_123
          CFI (cfiCond289) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond289) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond289) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond289) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond289) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond289) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond289) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond289) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond289) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond289) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond289) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond289) CFA_SP SP+-4
          CFI (cfiCond289) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond290 Using cfiCommon0
          CFI (cfiCond290) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond290) Conditional ??CrossCallReturnLabel_361, ??CrossCallReturnLabel_124
          CFI (cfiCond290) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond290) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond290) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond290) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond290) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond290) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond290) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond290) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond290) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond290) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond290) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond290) CFA_SP SP+-4
          CFI (cfiCond290) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond291 Using cfiCommon0
          CFI (cfiCond291) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond291) Conditional ??CrossCallReturnLabel_363, ??CrossCallReturnLabel_290
          CFI (cfiCond291) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond291) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond291) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond291) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond291) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond291) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond291) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond291) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond291) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond291) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond291) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond291) CFA_SP SP+-4
          CFI (cfiCond291) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond292 Using cfiCommon0
          CFI (cfiCond292) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond292) Conditional ??CrossCallReturnLabel_363, ??CrossCallReturnLabel_291
          CFI (cfiCond292) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond292) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond292) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond292) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond292) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond292) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond292) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond292) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond292) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond292) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond292) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond292) CFA_SP SP+-4
          CFI (cfiCond292) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond293 Using cfiCommon0
          CFI (cfiCond293) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond293) Conditional ??CrossCallReturnLabel_363, ??CrossCallReturnLabel_292
          CFI (cfiCond293) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond293) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond293) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond293) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond293) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond293) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond293) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond293) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond293) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond293) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond293) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond293) CFA_SP SP+-4
          CFI (cfiCond293) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond294 Using cfiCommon0
          CFI (cfiCond294) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond294) Conditional ??CrossCallReturnLabel_363, ??CrossCallReturnLabel_293
          CFI (cfiCond294) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond294) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond294) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond294) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond294) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond294) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond294) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond294) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond294) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond294) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond294) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond294) CFA_SP SP+-4
          CFI (cfiCond294) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond295 Using cfiCommon0
          CFI (cfiCond295) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond295) Conditional ??CrossCallReturnLabel_363, ??CrossCallReturnLabel_294
          CFI (cfiCond295) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond295) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond295) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond295) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond295) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond295) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond295) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond295) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond295) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond295) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond295) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond295) CFA_SP SP+-4
          CFI (cfiCond295) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond296 Using cfiCommon0
          CFI (cfiCond296) Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI (cfiCond296) Conditional ??CrossCallReturnLabel_363, ??CrossCallReturnLabel_295
          CFI (cfiCond296) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond296) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond296) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond296) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond296) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond296) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond296) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond296) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond296) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond296) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond296) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond296) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond296) CFA_SP SP+-4
          CFI (cfiCond296) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond297 Using cfiCommon0
          CFI (cfiCond297) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond297) Conditional ??CrossCallReturnLabel_363, ??CrossCallReturnLabel_296
          CFI (cfiCond297) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond297) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond297) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond297) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond297) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond297) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond297) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond297) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond297) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond297) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond297) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond297) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond297) CFA_SP SP+-4
          CFI (cfiCond297) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond298 Using cfiCommon0
          CFI (cfiCond298) Function zclClosures_HdlIncoming
          CFI (cfiCond298) Conditional ??CrossCallReturnLabel_363, ??CrossCallReturnLabel_289
          CFI (cfiCond298) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond298) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond298) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond298) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond298) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond298) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond298) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond298) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond298) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond298) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond298) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond298) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond298) CFA_SP SP+-4
          CFI (cfiCond298) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond299 Using cfiCommon0
          CFI (cfiCond299) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond299) Conditional ??CrossCallReturnLabel_359
          CFI (cfiCond299) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond299) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond299) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond299) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond299) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond299) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond299) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond299) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond299) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond299) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond299) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond299) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond299) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond299) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond299) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond299) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond299) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond299) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond299) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond299) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond299) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond299) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond299) CFA_SP SP+-2
          CFI (cfiCond299) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond300 Using cfiCommon0
          CFI (cfiCond300) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond300) Conditional ??CrossCallReturnLabel_360, ??CrossCallReturnLabel_8
          CFI (cfiCond300) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond300) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond300) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond300) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond300) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond300) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond300) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond300) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond300) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond300) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond300) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond300) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond300) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond300) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond300) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond300) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond300) CFA_SP SP+-4
          CFI (cfiCond300) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond301 Using cfiCommon0
          CFI (cfiCond301) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond301) Conditional ??CrossCallReturnLabel_360, ??CrossCallReturnLabel_9
          CFI (cfiCond301) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond301) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond301) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond301) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond301) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond301) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond301) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond301) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond301) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond301) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond301) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond301) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond301) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond301) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond301) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond301) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond301) CFA_SP SP+-4
          CFI (cfiCond301) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond302 Using cfiCommon0
          CFI (cfiCond302) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond302) Conditional ??CrossCallReturnLabel_360, ??CrossCallReturnLabel_10
          CFI (cfiCond302) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond302) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond302) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond302) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond302) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond302) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond302) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond302) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond302) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond302) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond302) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond302) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond302) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond302) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond302) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond302) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond302) CFA_SP SP+-4
          CFI (cfiCond302) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond303 Using cfiCommon0
          CFI (cfiCond303) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond303) Conditional ??CrossCallReturnLabel_360, ??CrossCallReturnLabel_11
          CFI (cfiCond303) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond303) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond303) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond303) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond303) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond303) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond303) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond303) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond303) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond303) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond303) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond303) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond303) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond303) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond303) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond303) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond303) CFA_SP SP+-4
          CFI (cfiCond303) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond304 Using cfiCommon0
          CFI (cfiCond304) Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI (cfiCond304) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_169
          CFI (cfiCond304) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond304) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond304) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond304) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond304) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond304) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond304) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond304) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond304) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond304) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond304) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond304) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond304) CFA_SP SP+-4
          CFI (cfiCond304) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond305 Using cfiCommon0
          CFI (cfiCond305) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond305) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_170
          CFI (cfiCond305) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond305) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond305) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond305) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond305) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond305) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond305) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond305) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond305) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond305) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond305) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond305) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond305) CFA_SP SP+-4
          CFI (cfiCond305) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond306 Using cfiCommon0
          CFI (cfiCond306) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond306) Conditional ??CrossCallReturnLabel_364, ??CrossCallReturnLabel_356
          CFI (cfiCond306) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond306) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond306) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond306) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond306) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond306) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond306) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond306) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond306) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond306) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond306) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond306) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond306) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond306) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond306) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond306) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond306) CFA_SP SP+-4
          CFI (cfiCond306) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond307 Using cfiCommon0
          CFI (cfiCond307) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond307) Conditional ??CrossCallReturnLabel_364, ??CrossCallReturnLabel_357
          CFI (cfiCond307) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond307) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond307) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond307) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond307) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond307) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond307) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond307) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond307) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond307) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond307) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond307) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond307) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond307) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond307) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond307) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond307) CFA_SP SP+-4
          CFI (cfiCond307) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond308 Using cfiCommon0
          CFI (cfiCond308) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond308) Conditional ??CrossCallReturnLabel_364, ??CrossCallReturnLabel_355
          CFI (cfiCond308) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond308) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond308) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond308) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond308) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond308) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond308) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond308) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond308) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond308) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond308) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond308) CFA_SP SP+-4
          CFI (cfiCond308) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiPicker309 Using cfiCommon1
          CFI (cfiPicker309) NoFunction
          CFI (cfiPicker309) Picker
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond288
          CFI EndBlock cfiCond289
          CFI EndBlock cfiCond290
          CFI EndBlock cfiCond291
          CFI EndBlock cfiCond292
          CFI EndBlock cfiCond293
          CFI EndBlock cfiCond294
          CFI EndBlock cfiCond295
          CFI EndBlock cfiCond296
          CFI EndBlock cfiCond297
          CFI EndBlock cfiCond298
          CFI EndBlock cfiCond299
          CFI EndBlock cfiCond300
          CFI EndBlock cfiCond301
          CFI EndBlock cfiCond302
          CFI EndBlock cfiCond303
          CFI EndBlock cfiCond304
          CFI EndBlock cfiCond305
          CFI EndBlock cfiCond306
          CFI EndBlock cfiCond307
          CFI EndBlock cfiCond308
          CFI EndBlock cfiPicker309

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine67:
          CFI Block cfiCond310 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI Conditional ??CrossCallReturnLabel_144
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond311 Using cfiCommon0
          CFI (cfiCond311) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond311) Conditional ??CrossCallReturnLabel_145
          CFI (cfiCond311) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond311) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond311) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond311) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond311) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond311) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond311) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond311) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond311) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond311) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond311) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond311) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond311) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond311) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond311) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond311) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond311) CFA_SP SP+-2
          CFI (cfiCond311) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond312 Using cfiCommon0
          CFI (cfiCond312) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond312) Conditional ??CrossCallReturnLabel_146
          CFI (cfiCond312) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond312) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond312) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond312) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond312) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond312) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond312) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond312) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond312) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond312) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond312) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond312) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond312) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond312) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond312) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond312) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond312) CFA_SP SP+-2
          CFI (cfiCond312) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond313 Using cfiCommon0
          CFI (cfiCond313) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond313) Conditional ??CrossCallReturnLabel_147
          CFI (cfiCond313) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond313) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond313) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond313) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond313) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond313) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond313) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond313) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond313) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond313) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond313) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond313) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond313) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond313) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond313) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond313) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond313) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond313) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond313) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond313) CFA_SP SP+-2
          CFI (cfiCond313) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond314 Using cfiCommon0
          CFI (cfiCond314) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond314) Conditional ??CrossCallReturnLabel_148
          CFI (cfiCond314) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond314) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond314) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond314) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond314) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond314) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond314) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond314) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond314) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond314) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond314) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond314) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond314) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond314) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond314) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond314) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond314) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond314) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond314) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond314) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond314) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond314) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond314) CFA_SP SP+-2
          CFI (cfiCond314) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond315 Using cfiCommon0
          CFI (cfiCond315) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond315) Conditional ??CrossCallReturnLabel_149
          CFI (cfiCond315) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond315) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond315) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond315) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond315) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond315) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond315) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond315) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond315) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond315) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond315) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond315) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond315) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond315) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond315) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond315) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond315) CFA_SP SP+-2
          CFI (cfiCond315) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond316 Using cfiCommon0
          CFI (cfiCond316) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond316) Conditional ??CrossCallReturnLabel_150
          CFI (cfiCond316) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond316) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond316) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond316) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond316) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond316) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond316) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond316) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond316) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond316) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond316) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond316) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond316) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond316) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond316) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond316) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond316) CFA_SP SP+-2
          CFI (cfiCond316) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond317 Using cfiCommon0
          CFI (cfiCond317) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond317) Conditional ??CrossCallReturnLabel_151
          CFI (cfiCond317) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond317) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond317) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond317) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond317) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond317) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond317) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond317) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond317) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond317) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond317) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond317) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond317) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond317) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond317) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond317) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond317) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond317) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond317) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond317) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond317) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond317) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond317) CFA_SP SP+-2
          CFI (cfiCond317) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond318 Using cfiCommon0
          CFI (cfiCond318) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond318) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond318) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond318) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond318) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond318) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond318) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond318) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond318) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond318) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond318) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond318) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond318) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond318) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond318) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond318) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond318) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond318) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond318) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond318) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond318) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond318) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond318) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond318) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond318) CFA_SP SP+-2
          CFI (cfiCond318) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker319 Using cfiCommon1
          CFI (cfiPicker319) NoFunction
          CFI (cfiPicker319) Picker
        MOV       A,R2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        MOVX      @DPTR,A
        MOV       A,R2
        ORL       A,R1
        RET
          CFI EndBlock cfiCond310
          CFI EndBlock cfiCond311
          CFI EndBlock cfiCond312
          CFI EndBlock cfiCond313
          CFI EndBlock cfiCond314
          CFI EndBlock cfiCond315
          CFI EndBlock cfiCond316
          CFI EndBlock cfiCond317
          CFI EndBlock cfiCond318
          CFI EndBlock cfiPicker319

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine61:
          CFI Block cfiCond320 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI Conditional ??CrossCallReturnLabel_327
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond321 Using cfiCommon0
          CFI (cfiCond321) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond321) Conditional ??CrossCallReturnLabel_328
          CFI (cfiCond321) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond321) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond321) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond321) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond321) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond321) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond321) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond321) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond321) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond321) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond321) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond321) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond321) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond321) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond321) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond321) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond321) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond321) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond321) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond321) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond321) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond321) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond321) CFA_SP SP+-2
          CFI (cfiCond321) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond322 Using cfiCommon0
          CFI (cfiCond322) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond322) Conditional ??CrossCallReturnLabel_329
          CFI (cfiCond322) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond322) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond322) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond322) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond322) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond322) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond322) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond322) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond322) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond322) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond322) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond322) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond322) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond322) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond322) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond322) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond322) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond322) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond322) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond322) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond322) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond322) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond322) CFA_SP SP+-2
          CFI (cfiCond322) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker323 Using cfiCommon1
          CFI (cfiPicker323) NoFunction
          CFI (cfiPicker323) Picker
        LCALL     ?Subroutine121 & 0xFFFF
??CrossCallReturnLabel_248:
          CFI EndBlock cfiCond320
          CFI EndBlock cfiCond321
          CFI EndBlock cfiCond322
          CFI EndBlock cfiPicker323
        REQUIRE ??Subroutine159_0
        ; // Fall through to label ??Subroutine159_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine159_0:
          CFI Block cfiCond324 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_330
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond325 Using cfiCommon0
          CFI (cfiCond325) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond325) Conditional ??CrossCallReturnLabel_327
          CFI (cfiCond325) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond325) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond325) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond325) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond325) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond325) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond325) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond325) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond325) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond325) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond325) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond325) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond325) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond325) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond325) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond325) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond325) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond325) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond325) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond325) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond325) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond325) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond325) CFA_SP SP+-2
          CFI (cfiCond325) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond326 Using cfiCommon0
          CFI (cfiCond326) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond326) Conditional ??CrossCallReturnLabel_328
          CFI (cfiCond326) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond326) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond326) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond326) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond326) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond326) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond326) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond326) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond326) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond326) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond326) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond326) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond326) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond326) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond326) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond326) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond326) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond326) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond326) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond326) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond326) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond326) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond326) CFA_SP SP+-2
          CFI (cfiCond326) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond327 Using cfiCommon0
          CFI (cfiCond327) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond327) Conditional ??CrossCallReturnLabel_329
          CFI (cfiCond327) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond327) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond327) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond327) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond327) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond327) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond327) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond327) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond327) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond327) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond327) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond327) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond327) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond327) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond327) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond327) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond327) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond327) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond327) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond327) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond327) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond327) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond327) CFA_SP SP+-2
          CFI (cfiCond327) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker328 Using cfiCommon1
          CFI (cfiPicker328) NoFunction
          CFI (cfiPicker328) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        XCH       A,R0
        RET
          CFI EndBlock cfiCond324
          CFI EndBlock cfiCond325
          CFI EndBlock cfiCond326
          CFI EndBlock cfiCond327
          CFI EndBlock cfiPicker328

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine58:
          CFI Block cfiCond329 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_127
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond330 Using cfiCommon0
          CFI (cfiCond330) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond330) Conditional ??CrossCallReturnLabel_128
          CFI (cfiCond330) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond330) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond330) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond330) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond330) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond330) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond330) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond330) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond330) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond330) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond330) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond330) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond330) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond330) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond330) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond330) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond330) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond330) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond330) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond330) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond330) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond330) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond330) CFA_SP SP+-2
          CFI (cfiCond330) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker331 Using cfiCommon1
          CFI (cfiPicker331) NoFunction
          CFI (cfiPicker331) Picker
        LCALL     ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_225:
        RET
          CFI EndBlock cfiCond329
          CFI EndBlock cfiCond330
          CFI EndBlock cfiPicker331

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine103:
          CFI Block cfiCond332 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_127
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond333 Using cfiCommon0
          CFI (cfiCond333) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond333) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_128
          CFI (cfiCond333) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond333) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond333) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond333) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond333) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond333) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond333) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond333) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond333) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond333) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond333) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond333) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond333) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond333) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond333) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond333) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond333) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond333) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond333) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond333) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond333) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond333) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond333) CFA_SP SP+-4
          CFI (cfiCond333) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond334 Using cfiCommon0
          CFI (cfiCond334) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond334) Conditional ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_8
          CFI (cfiCond334) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond334) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond334) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond334) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond334) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond334) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond334) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond334) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond334) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond334) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond334) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond334) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond334) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond334) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond334) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond334) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond334) CFA_SP SP+-4
          CFI (cfiCond334) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond335 Using cfiCommon0
          CFI (cfiCond335) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond335) Conditional ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_9
          CFI (cfiCond335) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond335) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond335) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond335) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond335) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond335) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond335) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond335) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond335) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond335) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond335) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond335) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond335) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond335) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond335) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond335) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond335) CFA_SP SP+-4
          CFI (cfiCond335) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond336 Using cfiCommon0
          CFI (cfiCond336) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond336) Conditional ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_10
          CFI (cfiCond336) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond336) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond336) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond336) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond336) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond336) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond336) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond336) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond336) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond336) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond336) CFA_SP SP+-4
          CFI (cfiCond336) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond337 Using cfiCommon0
          CFI (cfiCond337) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond337) Conditional ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_11
          CFI (cfiCond337) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond337) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond337) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond337) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond337) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond337) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond337) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond337) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond337) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond337) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond337) CFA_SP SP+-4
          CFI (cfiCond337) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond338 Using cfiCommon0
          CFI (cfiCond338) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond338) Conditional ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_79
          CFI (cfiCond338) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond338) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond338) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond338) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond338) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond338) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond338) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond338) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond338) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond338) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond338) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond338) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond338) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond338) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond338) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond338) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond338) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond338) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond338) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond338) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond338) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond338) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond338) CFA_SP SP+-4
          CFI (cfiCond338) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond339 Using cfiCommon0
          CFI (cfiCond339) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond339) Conditional ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_80
          CFI (cfiCond339) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond339) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond339) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond339) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond339) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond339) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond339) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond339) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond339) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond339) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond339) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond339) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond339) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond339) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond339) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond339) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond339) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond339) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond339) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond339) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond339) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond339) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond339) CFA_SP SP+-4
          CFI (cfiCond339) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker340 Using cfiCommon1
          CFI (cfiPicker340) NoFunction
          CFI (cfiPicker340) Picker
        LCALL     ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_449:
        MOV       DPL,R0
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond332
          CFI EndBlock cfiCond333
          CFI EndBlock cfiCond334
          CFI EndBlock cfiCond335
          CFI EndBlock cfiCond336
          CFI EndBlock cfiCond337
          CFI EndBlock cfiCond338
          CFI EndBlock cfiCond339
          CFI EndBlock cfiPicker340
// 1661 
// 1662 /*********************************************************************
// 1663  * @fn      zclClosures_ProcessInDoorLockSetPINCodeRsp
// 1664  *
// 1665  * @brief   Process in the received Set PIN Code Response cmd
// 1666  *
// 1667  * @param   pInMsg - pointer to the incoming message
// 1668  * @param   pCBs - pointer to the application callbacks
// 1669  *
// 1670  * @return  ZStatus_t
// 1671  */
// 1672 static ZStatus_t zclClosures_ProcessInDoorLockSetPINCodeRsp( zclIncoming_t *pInMsg,
// 1673                                                              zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1674 {
// 1675  if ( pCBs->pfnDoorLockSetPINCodeRsp )
// 1676  {
// 1677    return ( pCBs->pfnDoorLockSetPINCodeRsp( pInMsg, pInMsg->pData[0] ) );
// 1678  }
// 1679 
// 1680  return ( ZFailure );
// 1681 }
// 1682 
// 1683 /*********************************************************************
// 1684  * @fn      zclClosures_ProcessInDoorLockGetPINCodeRsp
// 1685  *
// 1686  * @brief   Process in the received Get PIN Code Response cmd
// 1687  *
// 1688  * @param   pInMsg - pointer to the incoming message
// 1689  * @param   pCBs - pointer to the application callbacks
// 1690  *
// 1691  * @return  ZStatus_t
// 1692  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1693 static ZStatus_t zclClosures_ProcessInDoorLockGetPINCodeRsp( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockGetPINCodeRsp:
          CFI Block cfiBlock341 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetPINCodeRsp
        CODE
// 1694                                                              zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1695 {
        FUNCALL zclClosures_ProcessInDoorLockGetPINCodeRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockGetPINCodeRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 6
        MOV       A,#-0x6
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
// 1696   ZStatus_t status;
// 1697 
// 1698   if ( pCBs->pfnDoorLockGetPINCodeRsp )
        MOV       A,R4
        ADD       A,#0x3c
        LCALL     ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_426:
        JZ        ??zclClosures_ProcessInDoorLockGetPINCodeRsp_0
// 1699   {
// 1700     uint8 i;
// 1701     uint8 offset;
// 1702     uint8 calculatedArrayLen;
// 1703     zclDoorLockGetPINCodeRsp_t cmd;
// 1704 
// 1705     // first octet of PIN/RFID Code variable string identifies its length
// 1706     calculatedArrayLen = pInMsg->pData[4] + 1; // add first byte of string
        LCALL     ?Subroutine16 & 0xFFFF
// 1707 
// 1708     cmd.pCode = zcl_mem_alloc( calculatedArrayLen );
??CrossCallReturnLabel_14:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine67 & 0xFFFF
// 1709     if ( !cmd.pCode )
??CrossCallReturnLabel_149:
        JNZ       ??zclClosures_ProcessInDoorLockGetPINCodeRsp_1
// 1710     {
// 1711       return ( ZMemError );  // no memory
        MOV       R1,#0x10
        SJMP      ??zclClosures_ProcessInDoorLockGetPINCodeRsp_2
// 1712     }
// 1713 
// 1714     cmd.userID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
??zclClosures_ProcessInDoorLockGetPINCodeRsp_1:
        LCALL     ?Subroutine12 & 0xFFFF
// 1715     cmd.userStatus = pInMsg->pData[2];
??CrossCallReturnLabel_10:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine26 & 0xFFFF
// 1716     cmd.userType = pInMsg->pData[3];
??CrossCallReturnLabel_63:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine80 & 0xFFFF
// 1717     offset = 4;
// 1718     for ( i = 0; i < calculatedArrayLen; i++ )
??CrossCallReturnLabel_178:
        SJMP      ??zclClosures_ProcessInDoorLockGetPINCodeRsp_3
// 1719     {
// 1720       cmd.pCode[i] = pInMsg->pData[offset++];
??zclClosures_ProcessInDoorLockGetPINCodeRsp_4:
        MOV       A,R1
        MOV       R2,A
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine190_0 & 0xFFFF
// 1721     }
??CrossCallReturnLabel_463:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R0
        MOV       R2,A
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_51:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_ProcessInDoorLockGetPINCodeRsp_3:
        MOV       A,R0
        CLR       C
        SUBB      A,?V4
        JC        ??zclClosures_ProcessInDoorLockGetPINCodeRsp_4
// 1722 
// 1723     status = ( pCBs->pfnDoorLockGetPINCodeRsp( pInMsg, &cmd ) );
        ; Setup parameters for indirect call
        LCALL     ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_349:
        LCALL     ?CALL_IND
        MOV       A,R1
        MOV       R6,A
// 1724     zcl_mem_free( cmd.pCode );
        ; Setup parameters for call to function osal_mem_free
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine176_0 & 0xFFFF
// 1725     return status;
// 1726   }
??CrossCallReturnLabel_390:
        SJMP      ??zclClosures_ProcessInDoorLockGetPINCodeRsp_2
// 1727 
// 1728  return ( ZFailure );
??zclClosures_ProcessInDoorLockGetPINCodeRsp_0:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockGetPINCodeRsp_2:
        LJMP      ?Subroutine1 & 0xFFFF
// 1729 }
          CFI EndBlock cfiBlock341

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine80:
          CFI Block cfiCond342 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetPINCode
          CFI Conditional ??CrossCallReturnLabel_176
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond343 Using cfiCommon0
          CFI (cfiCond343) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond343) Conditional ??CrossCallReturnLabel_177
          CFI (cfiCond343) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond343) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond343) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond343) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond343) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond343) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond343) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond343) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond343) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond343) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond343) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond343) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond343) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond343) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond343) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond343) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond343) CFA_SP SP+-2
          CFI (cfiCond343) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond344 Using cfiCommon0
          CFI (cfiCond344) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond344) Conditional ??CrossCallReturnLabel_178
          CFI (cfiCond344) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond344) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond344) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond344) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond344) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond344) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond344) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond344) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond344) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond344) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond344) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond344) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond344) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond344) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond344) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond344) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond344) CFA_SP SP+-2
          CFI (cfiCond344) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond345 Using cfiCommon0
          CFI (cfiCond345) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond345) Conditional ??CrossCallReturnLabel_179
          CFI (cfiCond345) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond345) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond345) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond345) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond345) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond345) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond345) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond345) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond345) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond345) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond345) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond345) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond345) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond345) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond345) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond345) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond345) CFA_SP SP+-2
          CFI (cfiCond345) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker346 Using cfiCommon1
          CFI (cfiPicker346) NoFunction
          CFI (cfiPicker346) Picker
        MOVX      @DPTR,A
        MOV       R1,#0x4
        MOV       R0,#0x0
        RET
          CFI EndBlock cfiCond342
          CFI EndBlock cfiCond343
          CFI EndBlock cfiCond344
          CFI EndBlock cfiCond345
          CFI EndBlock cfiPicker346

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine26:
          CFI Block cfiCond347 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetPINCode
          CFI Conditional ??CrossCallReturnLabel_61
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond348 Using cfiCommon0
          CFI (cfiCond348) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond348) Conditional ??CrossCallReturnLabel_62
          CFI (cfiCond348) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond348) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond348) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond348) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond348) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond348) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond348) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond348) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond348) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond348) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond348) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond348) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond348) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond348) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond348) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond348) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond348) CFA_SP SP+-2
          CFI (cfiCond348) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond349 Using cfiCommon0
          CFI (cfiCond349) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond349) Conditional ??CrossCallReturnLabel_63
          CFI (cfiCond349) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond349) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond349) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond349) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond349) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond349) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond349) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond349) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond349) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond349) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond349) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond349) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond349) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond349) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond349) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond349) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond349) CFA_SP SP+-2
          CFI (cfiCond349) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond350 Using cfiCommon0
          CFI (cfiCond350) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond350) Conditional ??CrossCallReturnLabel_64
          CFI (cfiCond350) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond350) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond350) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond350) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond350) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond350) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond350) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond350) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond350) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond350) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond350) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond350) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond350) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond350) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond350) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond350) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond350) CFA_SP SP+-2
          CFI (cfiCond350) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker351 Using cfiCommon1
          CFI (cfiPicker351) NoFunction
          CFI (cfiPicker351) Picker
        MOVX      @DPTR,A
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ?Subroutine107 & 0xFFFF
??CrossCallReturnLabel_233:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond347
          CFI EndBlock cfiCond348
          CFI EndBlock cfiCond349
          CFI EndBlock cfiCond350
          CFI EndBlock cfiPicker351

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine21:
          CFI Block cfiCond352 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI Conditional ??CrossCallReturnLabel_47
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond353 Using cfiCommon0
          CFI (cfiCond353) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond353) Conditional ??CrossCallReturnLabel_48
          CFI (cfiCond353) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond353) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond353) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond353) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond353) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond353) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond353) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond353) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond353) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond353) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond353) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond353) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond353) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond353) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond353) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond353) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond353) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond354 Using cfiCommon0
          CFI (cfiCond354) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond354) Conditional ??CrossCallReturnLabel_49
          CFI (cfiCond354) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond354) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond354) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond354) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond354) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond354) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond354) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond354) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond354) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond354) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond354) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond354) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond354) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond354) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond354) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond354) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond354) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond355 Using cfiCommon0
          CFI (cfiCond355) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond355) Conditional ??CrossCallReturnLabel_50
          CFI (cfiCond355) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond355) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond355) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond355) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond355) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond355) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond355) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond355) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond355) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond355) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond355) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond355) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond355) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond355) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond355) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond355) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond355) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond355) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond355) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond355) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond355) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond355) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond355) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond356 Using cfiCommon0
          CFI (cfiCond356) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond356) Conditional ??CrossCallReturnLabel_51
          CFI (cfiCond356) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond356) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond356) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond356) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond356) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond356) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond356) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond356) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond356) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond356) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond356) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond356) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond356) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond356) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond356) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond356) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond356) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond357 Using cfiCommon0
          CFI (cfiCond357) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond357) Conditional ??CrossCallReturnLabel_52
          CFI (cfiCond357) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond357) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond357) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond357) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond357) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond357) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond357) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond357) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond357) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond357) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond357) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond357) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond357) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond357) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond357) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond357) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond357) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond358 Using cfiCommon0
          CFI (cfiCond358) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond358) Conditional ??CrossCallReturnLabel_53
          CFI (cfiCond358) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond358) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond358) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond358) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond358) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond358) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond358) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond358) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond358) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond358) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond358) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond358) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond358) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond358) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond358) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond358) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond358) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond358) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond358) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond358) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond358) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond358) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond358) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond359 Using cfiCommon0
          CFI (cfiCond359) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond359) Conditional ??CrossCallReturnLabel_54
          CFI (cfiCond359) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond359) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond359) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond359) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond359) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond359) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond359) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond359) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond359) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond359) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond359) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond359) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond359) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond359) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond359) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond359) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond359) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond359) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond359) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond359) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond359) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond359) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond359) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker360 Using cfiCommon1
          CFI (cfiPicker360) NoFunction
          CFI (cfiPicker360) Picker
        LCALL     ?Subroutine109 & 0xFFFF
??CrossCallReturnLabel_475:
        RET
          CFI EndBlock cfiCond352
          CFI EndBlock cfiCond353
          CFI EndBlock cfiCond354
          CFI EndBlock cfiCond355
          CFI EndBlock cfiCond356
          CFI EndBlock cfiCond357
          CFI EndBlock cfiCond358
          CFI EndBlock cfiCond359
          CFI EndBlock cfiPicker360

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine109:
          CFI Block cfiCond361 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI Conditional ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_47
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-5
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond362 Using cfiCommon0
          CFI (cfiCond362) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond362) Conditional ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_48
          CFI (cfiCond362) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond362) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond362) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond362) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond362) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond362) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond362) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond362) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond362) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond362) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond362) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond362) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond362) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond362) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond362) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond362) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond362) CFA_SP SP+-5
          CFI (cfiCond362) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond363 Using cfiCommon0
          CFI (cfiCond363) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond363) Conditional ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_49
          CFI (cfiCond363) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond363) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond363) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond363) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond363) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond363) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond363) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond363) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond363) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond363) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond363) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond363) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond363) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond363) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond363) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond363) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond363) CFA_SP SP+-5
          CFI (cfiCond363) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond364 Using cfiCommon0
          CFI (cfiCond364) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond364) Conditional ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_50
          CFI (cfiCond364) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond364) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond364) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond364) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond364) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond364) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond364) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond364) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond364) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond364) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond364) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond364) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond364) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond364) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond364) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond364) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond364) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond364) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond364) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond364) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond364) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond364) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond364) CFA_SP SP+-5
          CFI (cfiCond364) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond365 Using cfiCommon0
          CFI (cfiCond365) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond365) Conditional ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_51
          CFI (cfiCond365) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond365) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond365) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond365) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond365) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond365) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond365) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond365) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond365) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond365) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond365) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond365) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond365) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond365) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond365) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond365) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond365) CFA_SP SP+-5
          CFI (cfiCond365) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond366 Using cfiCommon0
          CFI (cfiCond366) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond366) Conditional ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_52
          CFI (cfiCond366) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond366) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond366) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond366) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond366) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond366) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond366) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond366) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond366) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond366) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond366) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond366) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond366) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond366) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond366) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond366) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond366) CFA_SP SP+-5
          CFI (cfiCond366) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond367 Using cfiCommon0
          CFI (cfiCond367) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond367) Conditional ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_53
          CFI (cfiCond367) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond367) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond367) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond367) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond367) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond367) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond367) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond367) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond367) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond367) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond367) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond367) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond367) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond367) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond367) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond367) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond367) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond367) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond367) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond367) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond367) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond367) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond367) CFA_SP SP+-5
          CFI (cfiCond367) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond368 Using cfiCommon0
          CFI (cfiCond368) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond368) Conditional ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_54
          CFI (cfiCond368) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond368) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond368) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond368) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond368) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond368) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond368) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond368) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond368) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond368) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond368) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond368) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond368) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond368) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond368) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond368) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond368) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond368) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond368) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond368) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond368) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond368) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond368) CFA_SP SP+-5
          CFI (cfiCond368) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond369 Using cfiCommon0
          CFI (cfiCond369) Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI (cfiCond369) Conditional ??CrossCallReturnLabel_476, ??CrossCallReturnLabel_468
          CFI (cfiCond369) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond369) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond369) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond369) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond369) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond369) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond369) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond369) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond369) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond369) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond369) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond369) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond369) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond369) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond369) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond369) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond369) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond369) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond369) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond369) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond369) CFA_SP SP+-4
          CFI (cfiCond369) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond370 Using cfiCommon0
          CFI (cfiCond370) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond370) Conditional ??CrossCallReturnLabel_476, ??CrossCallReturnLabel_469
          CFI (cfiCond370) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond370) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond370) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond370) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond370) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond370) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond370) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond370) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond370) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond370) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond370) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond370) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond370) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond370) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond370) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond370) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond370) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond370) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond370) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond370) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond370) CFA_SP SP+-4
          CFI (cfiCond370) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond371 Using cfiCommon0
          CFI (cfiCond371) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond371) Conditional ??CrossCallReturnLabel_476, ??CrossCallReturnLabel_470
          CFI (cfiCond371) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond371) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond371) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond371) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond371) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond371) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond371) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond371) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond371) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond371) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond371) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond371) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond371) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond371) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond371) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond371) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond371) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond371) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond371) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond371) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond371) CFA_SP SP+-4
          CFI (cfiCond371) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond372 Using cfiCommon0
          CFI (cfiCond372) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond372) Conditional ??CrossCallReturnLabel_476, ??CrossCallReturnLabel_471
          CFI (cfiCond372) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond372) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond372) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond372) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond372) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond372) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond372) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond372) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond372) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond372) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond372) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond372) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond372) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond372) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond372) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond372) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond372) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond372) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond372) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond372) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond372) CFA_SP SP+-4
          CFI (cfiCond372) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond373 Using cfiCommon0
          CFI (cfiCond373) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond373) Conditional ??CrossCallReturnLabel_476, ??CrossCallReturnLabel_472
          CFI (cfiCond373) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond373) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond373) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond373) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond373) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond373) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond373) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond373) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond373) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond373) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond373) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond373) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond373) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond373) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond373) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond373) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond373) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond373) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond373) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond373) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond373) CFA_SP SP+-4
          CFI (cfiCond373) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond374 Using cfiCommon0
          CFI (cfiCond374) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond374) Conditional ??CrossCallReturnLabel_476, ??CrossCallReturnLabel_473
          CFI (cfiCond374) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond374) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond374) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond374) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond374) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond374) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond374) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond374) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond374) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond374) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond374) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond374) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond374) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond374) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond374) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond374) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond374) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond374) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond374) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond374) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond374) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond374) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond374) CFA_SP SP+-4
          CFI (cfiCond374) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond375 Using cfiCommon0
          CFI (cfiCond375) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond375) Conditional ??CrossCallReturnLabel_476, ??CrossCallReturnLabel_474
          CFI (cfiCond375) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond375) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond375) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond375) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond375) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond375) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond375) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond375) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond375) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond375) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond375) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond375) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond375) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond375) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond375) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond375) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond375) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond375) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond375) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond375) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond375) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond375) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond375) CFA_SP SP+-4
          CFI (cfiCond375) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond376 Using cfiCommon0
          CFI (cfiCond376) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond376) Conditional ??CrossCallReturnLabel_476, ??CrossCallReturnLabel_459
          CFI (cfiCond376) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond376) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond376) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond376) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond376) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond376) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond376) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond376) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond376) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond376) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond376) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond376) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond376) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond376) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond376) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond376) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond376) CFA_SP SP+-4
          CFI (cfiCond376) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond377 Using cfiCommon0
          CFI (cfiCond377) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond377) Conditional ??CrossCallReturnLabel_476, ??CrossCallReturnLabel_460
          CFI (cfiCond377) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond377) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond377) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond377) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond377) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond377) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond377) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond377) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond377) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond377) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond377) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond377) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond377) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond377) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond377) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond377) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond377) CFA_SP SP+-4
          CFI (cfiCond377) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond378 Using cfiCommon0
          CFI (cfiCond378) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond378) Conditional ??CrossCallReturnLabel_476, ??CrossCallReturnLabel_461
          CFI (cfiCond378) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond378) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond378) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond378) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond378) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond378) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond378) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond378) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond378) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond378) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond378) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond378) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond378) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond378) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond378) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond378) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond378) CFA_SP SP+-4
          CFI (cfiCond378) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond379 Using cfiCommon0
          CFI (cfiCond379) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond379) Conditional ??CrossCallReturnLabel_476, ??CrossCallReturnLabel_462
          CFI (cfiCond379) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond379) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond379) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond379) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond379) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond379) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond379) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond379) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond379) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond379) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond379) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond379) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond379) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond379) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond379) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond379) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond379) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond379) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond379) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond379) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond379) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond379) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond379) CFA_SP SP+-4
          CFI (cfiCond379) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond380 Using cfiCommon0
          CFI (cfiCond380) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond380) Conditional ??CrossCallReturnLabel_476, ??CrossCallReturnLabel_463
          CFI (cfiCond380) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond380) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond380) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond380) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond380) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond380) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond380) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond380) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond380) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond380) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond380) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond380) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond380) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond380) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond380) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond380) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond380) CFA_SP SP+-4
          CFI (cfiCond380) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond381 Using cfiCommon0
          CFI (cfiCond381) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond381) Conditional ??CrossCallReturnLabel_476, ??CrossCallReturnLabel_464
          CFI (cfiCond381) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond381) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond381) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond381) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond381) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond381) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond381) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond381) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond381) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond381) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond381) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond381) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond381) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond381) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond381) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond381) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond381) CFA_SP SP+-4
          CFI (cfiCond381) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond382 Using cfiCommon0
          CFI (cfiCond382) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond382) Conditional ??CrossCallReturnLabel_476, ??CrossCallReturnLabel_465
          CFI (cfiCond382) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond382) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond382) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond382) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond382) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond382) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond382) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond382) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond382) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond382) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond382) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond382) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond382) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond382) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond382) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond382) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond382) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond382) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond382) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond382) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond382) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond382) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond382) CFA_SP SP+-4
          CFI (cfiCond382) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond383 Using cfiCommon0
          CFI (cfiCond383) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond383) Conditional ??CrossCallReturnLabel_476, ??CrossCallReturnLabel_466
          CFI (cfiCond383) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond383) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond383) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond383) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond383) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond383) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond383) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond383) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond383) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond383) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond383) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond383) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond383) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond383) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond383) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond383) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond383) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond383) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond383) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond383) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond383) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond383) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond383) CFA_SP SP+-4
          CFI (cfiCond383) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond384 Using cfiCommon0
          CFI (cfiCond384) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond384) Conditional ??CrossCallReturnLabel_476, ??CrossCallReturnLabel_467
          CFI (cfiCond384) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond384) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond384) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond384) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond384) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond384) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond384) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond384) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond384) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond384) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond384) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond384) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond384) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond384) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond384) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond384) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond384) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond384) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond384) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond384) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond384) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond384) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond384) CFA_SP SP+-4
          CFI (cfiCond384) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker385 Using cfiCommon1
          CFI (cfiPicker385) NoFunction
          CFI (cfiPicker385) Picker
        MOVX      A,@DPTR
        ADD       A,R2
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       DPL,R4
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond361
          CFI EndBlock cfiCond362
          CFI EndBlock cfiCond363
          CFI EndBlock cfiCond364
          CFI EndBlock cfiCond365
          CFI EndBlock cfiCond366
          CFI EndBlock cfiCond367
          CFI EndBlock cfiCond368
          CFI EndBlock cfiCond369
          CFI EndBlock cfiCond370
          CFI EndBlock cfiCond371
          CFI EndBlock cfiCond372
          CFI EndBlock cfiCond373
          CFI EndBlock cfiCond374
          CFI EndBlock cfiCond375
          CFI EndBlock cfiCond376
          CFI EndBlock cfiCond377
          CFI EndBlock cfiCond378
          CFI EndBlock cfiCond379
          CFI EndBlock cfiCond380
          CFI EndBlock cfiCond381
          CFI EndBlock cfiCond382
          CFI EndBlock cfiCond383
          CFI EndBlock cfiCond384
          CFI EndBlock cfiPicker385

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine16:
          CFI Block cfiCond386 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetPINCode
          CFI Conditional ??CrossCallReturnLabel_12
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond387 Using cfiCommon0
          CFI (cfiCond387) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond387) Conditional ??CrossCallReturnLabel_13
          CFI (cfiCond387) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond387) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond387) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond387) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond387) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond387) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond387) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond387) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond387) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond387) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond387) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond387) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond387) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond387) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond387) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond387) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond387) CFA_SP SP+-2
          CFI (cfiCond387) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond388 Using cfiCommon0
          CFI (cfiCond388) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond388) Conditional ??CrossCallReturnLabel_14
          CFI (cfiCond388) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond388) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond388) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond388) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond388) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond388) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond388) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond388) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond388) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond388) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond388) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond388) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond388) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond388) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond388) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond388) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond388) CFA_SP SP+-2
          CFI (cfiCond388) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond389 Using cfiCommon0
          CFI (cfiCond389) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond389) Conditional ??CrossCallReturnLabel_15
          CFI (cfiCond389) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond389) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond389) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond389) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond389) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond389) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond389) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond389) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond389) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond389) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond389) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond389) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond389) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond389) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond389) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond389) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond389) CFA_SP SP+-2
          CFI (cfiCond389) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker390 Using cfiCommon1
          CFI (cfiPicker390) NoFunction
          CFI (cfiPicker390) Picker
        LCALL     ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_273:
        MOV       DPL,R0
        MOV       DPH,A
        LCALL     ?Subroutine107 & 0xFFFF
??CrossCallReturnLabel_232:
        INC       DPTR
        MOVX      A,@DPTR
        INC       A
        MOV       ?V4,A
        ; Setup parameters for call to function osal_mem_alloc
        ; Setup parameters for call to function osal_mem_alloc
        ; Setup parameters for call to function osal_mem_alloc
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,#0x0
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V7,R3
        MOV       R1,?V7
        MOV       A,#0x4
        RET
          CFI EndBlock cfiCond386
          CFI EndBlock cfiCond387
          CFI EndBlock cfiCond388
          CFI EndBlock cfiCond389
          CFI EndBlock cfiPicker390

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine107:
          CFI Block cfiCond391 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetPINCode
          CFI Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_61
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond392 Using cfiCommon0
          CFI (cfiCond392) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond392) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_62
          CFI (cfiCond392) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond392) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond392) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond392) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond392) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond392) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond392) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond392) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond392) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond392) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond392) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond392) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond392) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond392) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond392) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond392) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond392) CFA_SP SP+-4
          CFI (cfiCond392) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond393 Using cfiCommon0
          CFI (cfiCond393) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond393) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_63
          CFI (cfiCond393) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond393) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond393) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond393) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond393) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond393) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond393) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond393) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond393) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond393) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond393) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond393) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond393) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond393) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond393) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond393) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond393) CFA_SP SP+-4
          CFI (cfiCond393) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond394 Using cfiCommon0
          CFI (cfiCond394) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond394) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_64
          CFI (cfiCond394) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond394) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond394) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond394) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond394) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond394) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond394) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond394) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond394) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond394) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond394) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond394) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond394) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond394) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond394) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond394) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond394) CFA_SP SP+-4
          CFI (cfiCond394) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond395 Using cfiCommon0
          CFI (cfiCond395) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond395) Conditional ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_12
          CFI (cfiCond395) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond395) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond395) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond395) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond395) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond395) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond395) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond395) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond395) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond395) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond395) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond395) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond395) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond395) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond395) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond395) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond395) CFA_SP SP+-4
          CFI (cfiCond395) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond396 Using cfiCommon0
          CFI (cfiCond396) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond396) Conditional ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_13
          CFI (cfiCond396) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond396) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond396) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond396) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond396) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond396) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond396) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond396) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond396) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond396) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond396) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond396) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond396) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond396) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond396) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond396) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond396) CFA_SP SP+-4
          CFI (cfiCond396) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond397 Using cfiCommon0
          CFI (cfiCond397) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond397) Conditional ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_14
          CFI (cfiCond397) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond397) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond397) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond397) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond397) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond397) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond397) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond397) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond397) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond397) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond397) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond397) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond397) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond397) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond397) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond397) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond397) CFA_SP SP+-4
          CFI (cfiCond397) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond398 Using cfiCommon0
          CFI (cfiCond398) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond398) Conditional ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_15
          CFI (cfiCond398) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond398) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond398) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond398) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond398) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond398) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond398) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond398) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond398) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond398) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond398) CFA_SP SP+-4
          CFI (cfiCond398) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker399 Using cfiCommon1
          CFI (cfiPicker399) NoFunction
          CFI (cfiPicker399) Picker
        LCALL     ?Subroutine137 & 0xFFFF
??CrossCallReturnLabel_353:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond391
          CFI EndBlock cfiCond392
          CFI EndBlock cfiCond393
          CFI EndBlock cfiCond394
          CFI EndBlock cfiCond395
          CFI EndBlock cfiCond396
          CFI EndBlock cfiCond397
          CFI EndBlock cfiCond398
          CFI EndBlock cfiPicker399

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine12:
          CFI Block cfiCond400 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetPINCode
          CFI Conditional ??CrossCallReturnLabel_8
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond401 Using cfiCommon0
          CFI (cfiCond401) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond401) Conditional ??CrossCallReturnLabel_9
          CFI (cfiCond401) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond401) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond401) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond401) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond401) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond401) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond401) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond401) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond401) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond401) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond401) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond401) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond401) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond401) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond401) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond401) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond401) CFA_SP SP+-2
          CFI (cfiCond401) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond402 Using cfiCommon0
          CFI (cfiCond402) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond402) Conditional ??CrossCallReturnLabel_10
          CFI (cfiCond402) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond402) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond402) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond402) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond402) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond402) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond402) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond402) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond402) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond402) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond402) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond402) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond402) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond402) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond402) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond402) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond402) CFA_SP SP+-2
          CFI (cfiCond402) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond403 Using cfiCommon0
          CFI (cfiCond403) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond403) Conditional ??CrossCallReturnLabel_11
          CFI (cfiCond403) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond403) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond403) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond403) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond403) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond403) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond403) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond403) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond403) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond403) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond403) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond403) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond403) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond403) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond403) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond403) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond403) CFA_SP SP+-2
          CFI (cfiCond403) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker404 Using cfiCommon1
          CFI (cfiPicker404) NoFunction
          CFI (cfiPicker404) Picker
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_223:
        LCALL     ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_360:
        MOV       R3,A
        MOV       A,R4
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine124 & 0xFFFF
??CrossCallReturnLabel_261:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond400
          CFI EndBlock cfiCond401
          CFI EndBlock cfiCond402
          CFI EndBlock cfiCond403
          CFI EndBlock cfiPicker404
// 1730 
// 1731 /*********************************************************************
// 1732  * @fn      zclClosures_ProcessInDoorLockClearPINCodeRsp
// 1733  *
// 1734  * @brief   Process in the received Clear PIN Code Response cmd
// 1735  *
// 1736  * @param   pInMsg - pointer to the incoming message
// 1737  * @param   pCBs - pointer to the application callbacks
// 1738  *
// 1739  * @return  ZStatus_t
// 1740  */
// 1741 static ZStatus_t zclClosures_ProcessInDoorLockClearPINCodeRsp( zclIncoming_t *pInMsg,
// 1742                                                                zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1743 {
// 1744  if ( pCBs->pfnDoorLockClearPINCodeRsp )
// 1745  {
// 1746    return ( pCBs->pfnDoorLockClearPINCodeRsp( pInMsg, pInMsg->pData[0] ) );
// 1747  }
// 1748 
// 1749  return ( ZFailure );
// 1750 }
// 1751 
// 1752 /*********************************************************************
// 1753  * @fn      zclClosures_ProcessInDoorLockClearAllPINCodesRsp
// 1754  *
// 1755  * @brief   Process in the received Clear All PIN Codes Response cmd
// 1756  *
// 1757  * @param   pInMsg - pointer to the incoming message
// 1758  * @param   pCBs - pointer to the application callbacks
// 1759  *
// 1760  * @return  ZStatus_t
// 1761  */
// 1762 static ZStatus_t zclClosures_ProcessInDoorLockClearAllPINCodesRsp( zclIncoming_t *pInMsg,
// 1763                                                                    zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1764 {
// 1765  if ( pCBs->pfnDoorLockClearAllPINCodesRsp )
// 1766  {
// 1767    return ( pCBs->pfnDoorLockClearAllPINCodesRsp( pInMsg, pInMsg->pData[0] ) );
// 1768  }
// 1769 
// 1770  return ( ZFailure );
// 1771 }
// 1772 
// 1773 /*********************************************************************
// 1774  * @fn      zclClosures_ProcessInDoorLockSetUserStatusRsp
// 1775  *
// 1776  * @brief   Process in the received Set User Status Response cmd
// 1777  *
// 1778  * @param   pInMsg - pointer to the incoming message
// 1779  * @param   pCBs - pointer to the application callbacks
// 1780  *
// 1781  * @return  ZStatus_t
// 1782  */
// 1783 static ZStatus_t zclClosures_ProcessInDoorLockSetUserStatusRsp( zclIncoming_t *pInMsg,
// 1784                                                                 zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1785 {
// 1786  if ( pCBs->pfnDoorLockSetUserStatusRsp )
// 1787  {
// 1788    return ( pCBs->pfnDoorLockSetUserStatusRsp( pInMsg, pInMsg->pData[0] ) );
// 1789  }
// 1790 
// 1791  return ( ZFailure );
// 1792 }
// 1793 
// 1794 /*********************************************************************
// 1795  * @fn      zclClosures_ProcessInDoorLockGetUserStatusRsp
// 1796  *
// 1797  * @brief   Process in the received Get User Status Response cmd
// 1798  *
// 1799  * @param   pInMsg - pointer to the incoming message
// 1800  * @param   pCBs - pointer to the application callbacks
// 1801  *
// 1802  * @return  ZStatus_t
// 1803  */
// 1804 static ZStatus_t zclClosures_ProcessInDoorLockGetUserStatusRsp( zclIncoming_t *pInMsg,
// 1805                                                                 zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1806 {
// 1807  if ( pCBs->pfnDoorLockGetUserStatusRsp )
// 1808  {
// 1809    zclDoorLockGetUserStatusRsp_t cmd;
// 1810 
// 1811    cmd.userID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
// 1812    cmd.userStatus = pInMsg->pData[2];
// 1813 
// 1814    return ( pCBs->pfnDoorLockGetUserStatusRsp( pInMsg, &cmd ) );
// 1815  }
// 1816 
// 1817  return ( ZFailure );
// 1818 }
// 1819 
// 1820 /*********************************************************************
// 1821  * @fn      zclClosures_ProcessInDoorLockSetWeekDayScheduleRsp
// 1822  *
// 1823  * @brief   Process in the received Set Week Day Schedule Response cmd
// 1824  *
// 1825  * @param   pInMsg - pointer to the incoming message
// 1826  * @param   pCBs - pointer to the application callbacks
// 1827  *
// 1828  * @return  ZStatus_t
// 1829  */
// 1830 static ZStatus_t zclClosures_ProcessInDoorLockSetWeekDayScheduleRsp( zclIncoming_t *pInMsg,
// 1831                                                                      zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1832 {
// 1833  if ( pCBs->pfnDoorLockSetWeekDayScheduleRsp )
// 1834  {
// 1835    return ( pCBs->pfnDoorLockSetWeekDayScheduleRsp( pInMsg, pInMsg->pData[0] ) );
// 1836  }
// 1837 
// 1838  return ( ZFailure );
// 1839 }
// 1840 
// 1841 /*********************************************************************
// 1842  * @fn      zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
// 1843  *
// 1844  * @brief   Process in the received Get Week Day Schedule Response cmd
// 1845  *
// 1846  * @param   pInMsg - pointer to the incoming message
// 1847  * @param   pCBs - pointer to the application callbacks
// 1848  *
// 1849  * @return  ZStatus_t
// 1850  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1851 static ZStatus_t zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp:
          CFI Block cfiBlock405 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
        CODE
// 1852                                                                      zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1853 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 9
        MOV       A,#-0x9
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
// 1854  if ( pCBs->pfnDoorLockGetWeekDayScheduleRsp )
        MOV       A,R4
        ADD       A,#0x48
        LCALL     ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_296:
        JZ        ??zclClosures_ProcessInDoorLockGetWeekDaySchedu_1
// 1855  {
// 1856    zclDoorLockGetWeekDayScheduleRsp_t cmd;
// 1857 
// 1858    cmd.scheduleID = pInMsg->pData[0];
        LCALL     ?Subroutine22 & 0xFFFF
// 1859    cmd.userID = BUILD_UINT16( pInMsg->pData[1], pInMsg->pData[2] );
??CrossCallReturnLabel_56:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine71 & 0xFFFF
// 1860    cmd.status = pInMsg->pData[3];
??CrossCallReturnLabel_159:
        MOV       R6,A
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R6
        MOVX      @DPTR,A
// 1861 
// 1862    if ( cmd.status == ZCL_STATUS_SUCCESS )
        JNZ       ??zclClosures_ProcessInDoorLockGetWeekDaySchedu_2
// 1863    {
// 1864      cmd.daysMask = pInMsg->pData[4];
        LCALL     ?Subroutine47 & 0xFFFF
// 1865      cmd.startHour = pInMsg->pData[5];
// 1866      cmd.startMinute = pInMsg->pData[6];
// 1867      cmd.endHour = pInMsg->pData[7];
// 1868      cmd.endMinute = pInMsg->pData[8];
// 1869    }
??CrossCallReturnLabel_108:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_94:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_96:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine125 & 0xFFFF
??CrossCallReturnLabel_263:
        ADD       A,#0x7
        MOV       DPL,A
        CLR       A
        ADDC      A,R6
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_170:
        ADD       A,#0x8
        MOV       DPL,A
        CLR       A
        ADDC      A,R4
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 1870 
// 1871    return ( pCBs->pfnDoorLockGetWeekDayScheduleRsp( pInMsg, &cmd ) );
??zclClosures_ProcessInDoorLockGetWeekDaySchedu_2:
        ; Setup parameters for indirect call
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ??Subroutine160_0 & 0xFFFF
// 1872  }
??CrossCallReturnLabel_339:
        LCALL     ?CALL_IND
        SJMP      ??zclClosures_ProcessInDoorLockGetWeekDaySchedu_3
// 1873 
// 1874  return ( ZFailure );
??zclClosures_ProcessInDoorLockGetWeekDaySchedu_1:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockGetWeekDaySchedu_3:
        MOV       A,#0x9
        LJMP      ??Subroutine186_0 & 0xFFFF
// 1875 }
          CFI EndBlock cfiBlock405

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine77:
          CFI Block cfiCond406 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI Conditional ??CrossCallReturnLabel_169
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond407 Using cfiCommon0
          CFI (cfiCond407) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond407) Conditional ??CrossCallReturnLabel_170
          CFI (cfiCond407) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond407) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond407) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond407) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond407) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond407) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond407) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond407) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond407) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond407) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond407) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond407) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond407) CFA_SP SP+-2
          CFI (cfiCond407) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker408 Using cfiCommon1
          CFI (cfiPicker408) NoFunction
          CFI (cfiPicker408) Picker
        LCALL     ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_265:
        LCALL     ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_362:
        XCH       A,R4
        RET
          CFI EndBlock cfiCond406
          CFI EndBlock cfiCond407
          CFI EndBlock cfiPicker408

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine71:
          CFI Block cfiCond409 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI Conditional ??CrossCallReturnLabel_158
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond410 Using cfiCommon0
          CFI (cfiCond410) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond410) Conditional ??CrossCallReturnLabel_159
          CFI (cfiCond410) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond410) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond410) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond410) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond410) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond410) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond410) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond410) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond410) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond410) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond410) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond410) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond410) CFA_SP SP+-2
          CFI (cfiCond410) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker411 Using cfiCommon1
          CFI (cfiPicker411) NoFunction
          CFI (cfiPicker411) Picker
        MOV       A,?V0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V1
        LCALL     ?Subroutine121 & 0xFFFF
??CrossCallReturnLabel_249:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond409
          CFI EndBlock cfiCond410
          CFI EndBlock cfiPicker411

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine47:
          CFI Block cfiCond412 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI Conditional ??CrossCallReturnLabel_107
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond413 Using cfiCommon0
          CFI (cfiCond413) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond413) Conditional ??CrossCallReturnLabel_108
          CFI (cfiCond413) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond413) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond413) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond413) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond413) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond413) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond413) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond413) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond413) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond413) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond413) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond413) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond413) CFA_SP SP+-2
          CFI (cfiCond413) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker414 Using cfiCommon1
          CFI (cfiPicker414) NoFunction
          CFI (cfiPicker414) Picker
        LCALL     ?Subroutine106 & 0xFFFF
??CrossCallReturnLabel_231:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond412
          CFI EndBlock cfiCond413
          CFI EndBlock cfiPicker414

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine43:
          CFI Block cfiCond415 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI Conditional ??CrossCallReturnLabel_95
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond416 Using cfiCommon0
          CFI (cfiCond416) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond416) Conditional ??CrossCallReturnLabel_96
          CFI (cfiCond416) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond416) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond416) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond416) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond416) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond416) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond416) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond416) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond416) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond416) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond416) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond416) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond416) CFA_SP SP+-2
          CFI (cfiCond416) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker417 Using cfiCommon1
          CFI (cfiPicker417) NoFunction
          CFI (cfiPicker417) Picker
        LCALL     ?Subroutine125 & 0xFFFF
??CrossCallReturnLabel_264:
        ADD       A,#0x6
        MOV       DPL,A
        CLR       A
        ADDC      A,R6
        MOV       DPH,A
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond415
          CFI EndBlock cfiCond416
          CFI EndBlock cfiPicker417

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine125:
          CFI Block cfiCond418 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI Conditional ??CrossCallReturnLabel_263
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond419 Using cfiCommon0
          CFI (cfiCond419) Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI (cfiCond419) Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_95
          CFI (cfiCond419) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond419) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond419) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond419) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond419) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond419) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond419) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond419) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond419) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond419) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond419) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond419) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond419) CFA_SP SP+-4
          CFI (cfiCond419) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond420 Using cfiCommon0
          CFI (cfiCond420) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond420) Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_96
          CFI (cfiCond420) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond420) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond420) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond420) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond420) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond420) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond420) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond420) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond420) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond420) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond420) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond420) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond420) CFA_SP SP+-4
          CFI (cfiCond420) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker421 Using cfiCommon1
          CFI (cfiPicker421) NoFunction
          CFI (cfiPicker421) Picker
        MOVX      @DPTR,A
        MOV       DPL,R4
        MOV       DPH,R5
        MOVX      A,@DPTR
        MOV       R6,A
        INC       DPTR
        MOVX      A,@DPTR
        XCH       A,R6
        RET
          CFI EndBlock cfiCond418
          CFI EndBlock cfiCond419
          CFI EndBlock cfiCond420
          CFI EndBlock cfiPicker421

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine42:
          CFI Block cfiCond422 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI Conditional ??CrossCallReturnLabel_93
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond423 Using cfiCommon0
          CFI (cfiCond423) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond423) Conditional ??CrossCallReturnLabel_94
          CFI (cfiCond423) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond423) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond423) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond423) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond423) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond423) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond423) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond423) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond423) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond423) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond423) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond423) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond423) CFA_SP SP+-2
          CFI (cfiCond423) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker424 Using cfiCommon1
          CFI (cfiPicker424) NoFunction
          CFI (cfiPicker424) Picker
        MOVX      @DPTR,A
        LCALL     ?Subroutine106 & 0xFFFF
??CrossCallReturnLabel_230:
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond422
          CFI EndBlock cfiCond423
          CFI EndBlock cfiPicker424

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine106:
          CFI Block cfiCond425 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI Conditional ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_107
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond426 Using cfiCommon0
          CFI (cfiCond426) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond426) Conditional ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_108
          CFI (cfiCond426) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond426) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond426) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond426) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond426) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond426) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond426) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond426) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond426) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond426) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond426) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond426) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond426) CFA_SP SP+-4
          CFI (cfiCond426) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond427 Using cfiCommon0
          CFI (cfiCond427) Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI (cfiCond427) Conditional ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_93
          CFI (cfiCond427) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond427) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond427) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond427) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond427) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond427) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond427) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond427) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond427) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond427) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond427) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond427) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond427) CFA_SP SP+-4
          CFI (cfiCond427) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond428 Using cfiCommon0
          CFI (cfiCond428) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond428) Conditional ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_94
          CFI (cfiCond428) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond428) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond428) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond428) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond428) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond428) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond428) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond428) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond428) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond428) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond428) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond428) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond428) CFA_SP SP+-4
          CFI (cfiCond428) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker429 Using cfiCommon1
          CFI (cfiPicker429) NoFunction
          CFI (cfiPicker429) Picker
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ?Subroutine136 & 0xFFFF
??CrossCallReturnLabel_280:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond425
          CFI EndBlock cfiCond426
          CFI EndBlock cfiCond427
          CFI EndBlock cfiCond428
          CFI EndBlock cfiPicker429

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine22:
          CFI Block cfiCond430 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI Conditional ??CrossCallReturnLabel_55
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond431 Using cfiCommon0
          CFI (cfiCond431) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond431) Conditional ??CrossCallReturnLabel_56
          CFI (cfiCond431) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond431) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond431) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond431) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond431) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond431) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond431) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond431) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond431) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond431) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond431) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond431) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond431) CFA_SP SP+-2
          CFI (cfiCond431) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker432 Using cfiCommon1
          CFI (cfiPicker432) NoFunction
          CFI (cfiPicker432) Picker
        MOV       A,R2
        ADD       A,#0x8
        MOV       R4,A
        CLR       A
        ADDC      A,R3
        MOV       R5,A
        MOV       DPL,R4
        MOV       DPH,A
        LCALL     ?Subroutine136 & 0xFFFF
??CrossCallReturnLabel_279:
        MOVX      A,@DPTR
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_266:
        MOVX      A,@DPTR
        MOV       R6,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R7,A
        MOV       DPL,R6
        MOV       DPH,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V2,A
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_239:
        RET
          CFI EndBlock cfiCond430
          CFI EndBlock cfiCond431
          CFI EndBlock cfiPicker432

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine136:
          CFI Block cfiCond433 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_107
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond434 Using cfiCommon0
          CFI (cfiCond434) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond434) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_108
          CFI (cfiCond434) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond434) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond434) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond434) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond434) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond434) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond434) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond434) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond434) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond434) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond434) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond434) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond434) CFA_SP SP+-6
          CFI (cfiCond434) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond435 Using cfiCommon0
          CFI (cfiCond435) Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI (cfiCond435) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_93
          CFI (cfiCond435) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond435) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond435) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond435) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond435) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond435) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond435) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond435) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond435) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond435) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond435) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond435) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond435) CFA_SP SP+-6
          CFI (cfiCond435) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond436 Using cfiCommon0
          CFI (cfiCond436) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond436) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_94
          CFI (cfiCond436) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond436) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond436) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond436) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond436) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond436) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond436) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond436) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond436) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond436) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond436) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond436) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond436) CFA_SP SP+-6
          CFI (cfiCond436) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond437 Using cfiCommon0
          CFI (cfiCond437) Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI (cfiCond437) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_55
          CFI (cfiCond437) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond437) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond437) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond437) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond437) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond437) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond437) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond437) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond437) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond437) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond437) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond437) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond437) CFA_SP SP+-4
          CFI (cfiCond437) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond438 Using cfiCommon0
          CFI (cfiCond438) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond438) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_56
          CFI (cfiCond438) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond438) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond438) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond438) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond438) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond438) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond438) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond438) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond438) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond438) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond438) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond438) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond438) CFA_SP SP+-4
          CFI (cfiCond438) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker439 Using cfiCommon1
          CFI (cfiPicker439) NoFunction
          CFI (cfiPicker439) Picker
        MOVX      A,@DPTR
        MOV       R6,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPH,A
        MOV       DPL,R6
        RET
          CFI EndBlock cfiCond433
          CFI EndBlock cfiCond434
          CFI EndBlock cfiCond435
          CFI EndBlock cfiCond436
          CFI EndBlock cfiCond437
          CFI EndBlock cfiCond438
          CFI EndBlock cfiPicker439

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine114:
          CFI Block cfiCond440 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI Conditional ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_55
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond441 Using cfiCommon0
          CFI (cfiCond441) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond441) Conditional ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_56
          CFI (cfiCond441) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond441) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond441) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond441) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond441) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond441) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond441) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond441) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond441) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond441) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond441) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond441) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond441) CFA_SP SP+-4
          CFI (cfiCond441) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond442 Using cfiCommon0
          CFI (cfiCond442) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond442) Conditional ??CrossCallReturnLabel_238
          CFI (cfiCond442) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond442) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond442) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond442) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond442) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond442) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond442) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond442) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond442) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond442) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond442) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond442) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond442) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond442) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond442) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond442) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond442) CFA_SP SP+-2
          CFI (cfiCond442) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker443 Using cfiCommon1
          CFI (cfiPicker443) NoFunction
          CFI (cfiPicker443) Picker
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V1,A
        MOV       A,?V2
        MOV       ?V0,A
        MOV       A,#0x1
        RET
          CFI EndBlock cfiCond440
          CFI EndBlock cfiCond441
          CFI EndBlock cfiCond442
          CFI EndBlock cfiPicker443
// 1876 
// 1877 /*********************************************************************
// 1878  * @fn      zclClosures_ProcessInDoorLockClearWeekDayScheduleRsp
// 1879  *
// 1880  * @brief   Process in the received Clear Week Day Schedule Response cmd
// 1881  *
// 1882  * @param   pInMsg - pointer to the incoming message
// 1883  * @param   pCBs - pointer to the application callbacks
// 1884  *
// 1885  * @return  ZStatus_t
// 1886  */
// 1887 static ZStatus_t zclClosures_ProcessInDoorLockClearWeekDayScheduleRsp( zclIncoming_t *pInMsg,
// 1888                                                                        zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1889 {
// 1890  if ( pCBs->pfnDoorLockClearWeekDayScheduleRsp )
// 1891  {
// 1892    return ( pCBs->pfnDoorLockClearWeekDayScheduleRsp( pInMsg, pInMsg->pData[0] ) );
// 1893  }
// 1894 
// 1895  return ( ZFailure );
// 1896 }
// 1897 
// 1898 /*********************************************************************
// 1899  * @fn      zclClosures_ProcessInDoorLockSetYearDayScheduleRsp
// 1900  *
// 1901  * @brief   Process in the received Set Year Day Schedule Response cmd
// 1902  *
// 1903  * @param   pInMsg - pointer to the incoming message
// 1904  * @param   pCBs - pointer to the application callbacks
// 1905  *
// 1906  * @return  ZStatus_t
// 1907  */
// 1908 static ZStatus_t zclClosures_ProcessInDoorLockSetYearDayScheduleRsp( zclIncoming_t *pInMsg,
// 1909                                                                      zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1910 {
// 1911  if ( pCBs->pfnDoorLockSetYearDayScheduleRsp )
// 1912  {
// 1913    return ( pCBs->pfnDoorLockSetYearDayScheduleRsp( pInMsg, pInMsg->pData[0] ) );
// 1914  }
// 1915 
// 1916  return ( ZFailure );
// 1917 }
// 1918 
// 1919 /*********************************************************************
// 1920  * @fn      zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
// 1921  *
// 1922  * @brief   Process in the received Get Year Day Schedule Response cmd
// 1923  *
// 1924  * @param   pInMsg - pointer to the incoming message
// 1925  * @param   pCBs - pointer to the application callbacks
// 1926  *
// 1927  * @return  ZStatus_t
// 1928  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1929 static ZStatus_t zclClosures_ProcessInDoorLockGetYearDayScheduleRsp( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockGetYearDayScheduleRsp:
          CFI Block cfiBlock444 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
        CODE
// 1930                                                                      zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1931 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 12
        MOV       A,#-0xc
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 28)
// 1932  if ( pCBs->pfnDoorLockGetYearDayScheduleRsp )
        MOV       A,R4
        ADD       A,#0x4e
        MOV       R6,A
        CLR       A
        ADDC      A,R5
        MOV       R7,A
        MOV       DPL,R6
        LCALL     ??Subroutine180_0 & 0xFFFF
??CrossCallReturnLabel_417:
        JNZ       $+5
        LJMP      ??zclClosures_ProcessInDoorLockGetYearDaySchedu_1 & 0xFFFF
// 1933  {
// 1934    zclDoorLockGetYearDayScheduleRsp_t cmd;
// 1935 
// 1936    cmd.scheduleID = pInMsg->pData[0];
        LCALL     ?Subroutine30 & 0xFFFF
// 1937    cmd.userID = BUILD_UINT16( pInMsg->pData[1], pInMsg->pData[2] );
??CrossCallReturnLabel_77:
        MOV       R5,A
        MOV       DPL,R4
        MOV       DPH,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V2,A
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_238:
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V1
        LCALL     ?Subroutine87 & 0xFFFF
// 1938    cmd.status = pInMsg->pData[3];
??CrossCallReturnLabel_196:
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R4
        MOVX      @DPTR,A
// 1939 
// 1940    if ( cmd.status == ZCL_STATUS_SUCCESS )
        JZ        $+5
        LJMP      ??zclClosures_ProcessInDoorLockGetYearDaySchedu_2 & 0xFFFF
// 1941    {
// 1942      cmd.zigBeeLocalStartTime = BUILD_UINT32( pInMsg->pData[4], pInMsg->pData[5], pInMsg->pData[6], pInMsg->pData[7] );
        LCALL     ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_356:
        LCALL     ??Subroutine164_0 & 0xFFFF
??CrossCallReturnLabel_367:
        LCALL     ??Subroutine154_0 & 0xFFFF
??CrossCallReturnLabel_324:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine149_0 & 0xFFFF
??CrossCallReturnLabel_312:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine170_0 & 0xFFFF
??CrossCallReturnLabel_378:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOV       R0,#?V0
        LCALL     ?L_MOV_TO_X
// 1943      cmd.zigBeeLocalEndTime = BUILD_UINT32( pInMsg->pData[8], pInMsg->pData[9], pInMsg->pData[10], pInMsg->pData[11] );
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        LCALL     ?Subroutine33 & 0xFFFF
// 1944    }
??CrossCallReturnLabel_371:
        INC       DPTR
        LCALL     ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_306:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        LCALL     ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_317:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       A,R4
        ADD       A,#0xb
        MOV       DPL,A
        CLR       A
        ADDC      A,R5
        MOV       DPH,A
        LCALL     ??Subroutine175_0 & 0xFFFF
??CrossCallReturnLabel_372:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        MOV       R0,#?V0
        LCALL     ?L_MOV_TO_X
// 1945 
// 1946    return ( pCBs->pfnDoorLockGetYearDayScheduleRsp( pInMsg, &cmd ) );
??zclClosures_ProcessInDoorLockGetYearDaySchedu_2:
        ; Setup parameters for indirect call
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine160_0 & 0xFFFF
// 1947  }
??CrossCallReturnLabel_340:
        LCALL     ?CALL_IND
        SJMP      ??zclClosures_ProcessInDoorLockGetYearDaySchedu_3
// 1948 
// 1949  return ( ZFailure );
??zclClosures_ProcessInDoorLockGetYearDaySchedu_1:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockGetYearDaySchedu_3:
        MOV       A,#0xc
        LJMP      ??Subroutine142_0 & 0xFFFF
// 1950 }
          CFI EndBlock cfiBlock444

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine50:
          CFI Block cfiCond445 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLock
          CFI Conditional ??CrossCallReturnLabel_345
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond446 Using cfiCommon0
          CFI (cfiCond446) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond446) Conditional ??CrossCallReturnLabel_346
          CFI (cfiCond446) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond446) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond446) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond446) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond446) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond446) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond446) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond446) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond446) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond446) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond446) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond446) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond446) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond446) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond446) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond446) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond446) CFA_SP SP+-2
          CFI (cfiCond446) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond447 Using cfiCommon0
          CFI (cfiCond447) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond447) Conditional ??CrossCallReturnLabel_347
          CFI (cfiCond447) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond447) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond447) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond447) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond447) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond447) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond447) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond447) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond447) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond447) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond447) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond447) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond447) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond447) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond447) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond447) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond447) CFA_SP SP+-2
          CFI (cfiCond447) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond448 Using cfiCommon0
          CFI (cfiCond448) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond448) Conditional ??CrossCallReturnLabel_348
          CFI (cfiCond448) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond448) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond448) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond448) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond448) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond448) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond448) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond448) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond448) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond448) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond448) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond448) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond448) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond448) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond448) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond448) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond448) CFA_SP SP+-2
          CFI (cfiCond448) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond449 Using cfiCommon0
          CFI (cfiCond449) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond449) Conditional ??CrossCallReturnLabel_349
          CFI (cfiCond449) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond449) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond449) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond449) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond449) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond449) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond449) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond449) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond449) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond449) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond449) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond449) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond449) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond449) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond449) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond449) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond449) CFA_SP SP+-2
          CFI (cfiCond449) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond450 Using cfiCommon0
          CFI (cfiCond450) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond450) Conditional ??CrossCallReturnLabel_350
          CFI (cfiCond450) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond450) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond450) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond450) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond450) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond450) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond450) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond450) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond450) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond450) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond450) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond450) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond450) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond450) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond450) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond450) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond450) CFA_SP SP+-2
          CFI (cfiCond450) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker451 Using cfiCommon1
          CFI (cfiPicker451) NoFunction
          CFI (cfiPicker451) Picker
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        MOV       DPL,?V0
        MOV       DPH,?V1
          CFI EndBlock cfiCond445
          CFI EndBlock cfiCond446
          CFI EndBlock cfiCond447
          CFI EndBlock cfiCond448
          CFI EndBlock cfiCond449
          CFI EndBlock cfiCond450
          CFI EndBlock cfiPicker451
        REQUIRE ??Subroutine160_0
        ; // Fall through to label ??Subroutine160_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine160_0:
          CFI Block cfiCond452 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_331
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond453 Using cfiCommon0
          CFI (cfiCond453) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond453) Conditional ??CrossCallReturnLabel_332
          CFI (cfiCond453) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond453) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond453) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond453) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond453) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond453) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond453) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond453) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond453) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond453) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond453) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond453) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond453) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond453) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond453) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond453) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond453) CFA_SP SP+-2
          CFI (cfiCond453) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond454 Using cfiCommon0
          CFI (cfiCond454) Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI (cfiCond454) Conditional ??CrossCallReturnLabel_333
          CFI (cfiCond454) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond454) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond454) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond454) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond454) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond454) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond454) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond454) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond454) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond454) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond454) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond454) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond454) CFA_SP SP+-2
          CFI (cfiCond454) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond455 Using cfiCommon0
          CFI (cfiCond455) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond455) Conditional ??CrossCallReturnLabel_334
          CFI (cfiCond455) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond455) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond455) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond455) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond455) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond455) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond455) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond455) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond455) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond455) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond455) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond455) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond455) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond455) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond455) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond455) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond455) CFA_SP SP+-2
          CFI (cfiCond455) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond456 Using cfiCommon0
          CFI (cfiCond456) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond456) Conditional ??CrossCallReturnLabel_335
          CFI (cfiCond456) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond456) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond456) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond456) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond456) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond456) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond456) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond456) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond456) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond456) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond456) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond456) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond456) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond456) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond456) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond456) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond456) CFA_SP SP+-2
          CFI (cfiCond456) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond457 Using cfiCommon0
          CFI (cfiCond457) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond457) Conditional ??CrossCallReturnLabel_336
          CFI (cfiCond457) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond457) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond457) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond457) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond457) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond457) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond457) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond457) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond457) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond457) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond457) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond457) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond457) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond457) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond457) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond457) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond457) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond457) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond457) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond457) CFA_SP SP+-2
          CFI (cfiCond457) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond458 Using cfiCommon0
          CFI (cfiCond458) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond458) Conditional ??CrossCallReturnLabel_337
          CFI (cfiCond458) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond458) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond458) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond458) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond458) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond458) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond458) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond458) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond458) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond458) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond458) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond458) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond458) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond458) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond458) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond458) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond458) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond458) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond458) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond458) CFA_SP SP+-2
          CFI (cfiCond458) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond459 Using cfiCommon0
          CFI (cfiCond459) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond459) Conditional ??CrossCallReturnLabel_338
          CFI (cfiCond459) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond459) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond459) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond459) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond459) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond459) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond459) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond459) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond459) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond459) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond459) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond459) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond459) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond459) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond459) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond459) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond459) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond459) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond459) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond459) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond459) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond459) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond459) CFA_SP SP+-2
          CFI (cfiCond459) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond460 Using cfiCommon0
          CFI (cfiCond460) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond460) Conditional ??CrossCallReturnLabel_339
          CFI (cfiCond460) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond460) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond460) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond460) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond460) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond460) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond460) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond460) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond460) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond460) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond460) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond460) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond460) CFA_SP SP+-2
          CFI (cfiCond460) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond461 Using cfiCommon0
          CFI (cfiCond461) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond461) Conditional ??CrossCallReturnLabel_340
          CFI (cfiCond461) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond461) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond461) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond461) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond461) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond461) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond461) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond461) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond461) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond461) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond461) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond461) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond461) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond461) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond461) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond461) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond461) CFA_SP SP+-2
          CFI (cfiCond461) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond462 Using cfiCommon0
          CFI (cfiCond462) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond462) Conditional ??CrossCallReturnLabel_341
          CFI (cfiCond462) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond462) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond462) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond462) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond462) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond462) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond462) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond462) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond462) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond462) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond462) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond462) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond462) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond462) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond462) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond462) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond462) CFA_SP SP+-2
          CFI (cfiCond462) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond463 Using cfiCommon0
          CFI (cfiCond463) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond463) Conditional ??CrossCallReturnLabel_342
          CFI (cfiCond463) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond463) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond463) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond463) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond463) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond463) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond463) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond463) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond463) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond463) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond463) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond463) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond463) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond463) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond463) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond463) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond463) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond463) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond463) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond463) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond463) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond463) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond463) CFA_SP SP+-2
          CFI (cfiCond463) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond464 Using cfiCommon0
          CFI (cfiCond464) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond464) Conditional ??CrossCallReturnLabel_343
          CFI (cfiCond464) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond464) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond464) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond464) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond464) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond464) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond464) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond464) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond464) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond464) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond464) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond464) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond464) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond464) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond464) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond464) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond464) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond464) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond464) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond464) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond464) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond464) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond464) CFA_SP SP+-2
          CFI (cfiCond464) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond465 Using cfiCommon0
          CFI (cfiCond465) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond465) Conditional ??CrossCallReturnLabel_344
          CFI (cfiCond465) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond465) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond465) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond465) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond465) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond465) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond465) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond465) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond465) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond465) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond465) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond465) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond465) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond465) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond465) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond465) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond465) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond465) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond465) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond465) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond465) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond465) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond465) CFA_SP SP+-2
          CFI (cfiCond465) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond466 Using cfiCommon0
          CFI (cfiCond466) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond466) Conditional ??CrossCallReturnLabel_345
          CFI (cfiCond466) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond466) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond466) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond466) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond466) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond466) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond466) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond466) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond466) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond466) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond466) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond466) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond466) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond466) CFA_SP SP+-2
          CFI (cfiCond466) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond467 Using cfiCommon0
          CFI (cfiCond467) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond467) Conditional ??CrossCallReturnLabel_346
          CFI (cfiCond467) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond467) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond467) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond467) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond467) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond467) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond467) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond467) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond467) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond467) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond467) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond467) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond467) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond467) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond467) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond467) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond467) CFA_SP SP+-2
          CFI (cfiCond467) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond468 Using cfiCommon0
          CFI (cfiCond468) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond468) Conditional ??CrossCallReturnLabel_347
          CFI (cfiCond468) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond468) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond468) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond468) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond468) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond468) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond468) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond468) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond468) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond468) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond468) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond468) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond468) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond468) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond468) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond468) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond468) CFA_SP SP+-2
          CFI (cfiCond468) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond469 Using cfiCommon0
          CFI (cfiCond469) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond469) Conditional ??CrossCallReturnLabel_348
          CFI (cfiCond469) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond469) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond469) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond469) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond469) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond469) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond469) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond469) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond469) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond469) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond469) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond469) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond469) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond469) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond469) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond469) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond469) CFA_SP SP+-2
          CFI (cfiCond469) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond470 Using cfiCommon0
          CFI (cfiCond470) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond470) Conditional ??CrossCallReturnLabel_349
          CFI (cfiCond470) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond470) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond470) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond470) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond470) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond470) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond470) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond470) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond470) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond470) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond470) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond470) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond470) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond470) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond470) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond470) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond470) CFA_SP SP+-2
          CFI (cfiCond470) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond471 Using cfiCommon0
          CFI (cfiCond471) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond471) Conditional ??CrossCallReturnLabel_350
          CFI (cfiCond471) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond471) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond471) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond471) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond471) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond471) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond471) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond471) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond471) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond471) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond471) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond471) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond471) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond471) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond471) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond471) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond471) CFA_SP SP+-2
          CFI (cfiCond471) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker472 Using cfiCommon1
          CFI (cfiPicker472) NoFunction
          CFI (cfiPicker472) Picker
        LCALL     ?Subroutine118 & 0xFFFF
??CrossCallReturnLabel_352:
        RET
          CFI EndBlock cfiCond452
          CFI EndBlock cfiCond453
          CFI EndBlock cfiCond454
          CFI EndBlock cfiCond455
          CFI EndBlock cfiCond456
          CFI EndBlock cfiCond457
          CFI EndBlock cfiCond458
          CFI EndBlock cfiCond459
          CFI EndBlock cfiCond460
          CFI EndBlock cfiCond461
          CFI EndBlock cfiCond462
          CFI EndBlock cfiCond463
          CFI EndBlock cfiCond464
          CFI EndBlock cfiCond465
          CFI EndBlock cfiCond466
          CFI EndBlock cfiCond467
          CFI EndBlock cfiCond468
          CFI EndBlock cfiCond469
          CFI EndBlock cfiCond470
          CFI EndBlock cfiCond471
          CFI EndBlock cfiPicker472

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine118:
          CFI Block cfiCond473 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLock
          CFI Conditional ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_345
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond474 Using cfiCommon0
          CFI (cfiCond474) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond474) Conditional ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_346
          CFI (cfiCond474) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond474) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond474) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond474) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond474) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond474) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond474) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond474) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond474) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond474) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond474) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond474) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond474) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond474) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond474) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond474) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond474) CFA_SP SP+-4
          CFI (cfiCond474) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond475 Using cfiCommon0
          CFI (cfiCond475) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond475) Conditional ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_347
          CFI (cfiCond475) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond475) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond475) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond475) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond475) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond475) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond475) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond475) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond475) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond475) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond475) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond475) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond475) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond475) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond475) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond475) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond475) CFA_SP SP+-4
          CFI (cfiCond475) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond476 Using cfiCommon0
          CFI (cfiCond476) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond476) Conditional ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_348
          CFI (cfiCond476) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond476) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond476) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond476) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond476) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond476) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond476) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond476) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond476) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond476) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond476) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond476) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond476) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond476) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond476) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond476) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond476) CFA_SP SP+-4
          CFI (cfiCond476) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond477 Using cfiCommon0
          CFI (cfiCond477) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond477) Conditional ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_349
          CFI (cfiCond477) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond477) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond477) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond477) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond477) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond477) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond477) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond477) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond477) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond477) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond477) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond477) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond477) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond477) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond477) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond477) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond477) CFA_SP SP+-4
          CFI (cfiCond477) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond478 Using cfiCommon0
          CFI (cfiCond478) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond478) Conditional ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_350
          CFI (cfiCond478) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond478) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond478) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond478) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond478) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond478) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond478) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond478) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond478) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond478) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond478) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond478) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond478) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond478) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond478) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond478) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond478) CFA_SP SP+-4
          CFI (cfiCond478) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond479 Using cfiCommon0
          CFI (cfiCond479) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond479) Conditional ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_331
          CFI (cfiCond479) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond479) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond479) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond479) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond479) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond479) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond479) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond479) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond479) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond479) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond479) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond479) CFA_SP SP+-4
          CFI (cfiCond479) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond480 Using cfiCommon0
          CFI (cfiCond480) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond480) Conditional ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_332
          CFI (cfiCond480) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond480) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond480) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond480) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond480) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond480) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond480) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond480) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond480) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond480) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond480) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond480) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond480) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond480) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond480) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond480) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond480) CFA_SP SP+-4
          CFI (cfiCond480) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond481 Using cfiCommon0
          CFI (cfiCond481) Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI (cfiCond481) Conditional ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_333
          CFI (cfiCond481) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond481) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond481) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond481) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond481) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond481) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond481) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond481) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond481) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond481) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond481) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond481) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond481) CFA_SP SP+-4
          CFI (cfiCond481) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond482 Using cfiCommon0
          CFI (cfiCond482) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond482) Conditional ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_334
          CFI (cfiCond482) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond482) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond482) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond482) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond482) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond482) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond482) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond482) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond482) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond482) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond482) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond482) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond482) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond482) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond482) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond482) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond482) CFA_SP SP+-4
          CFI (cfiCond482) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond483 Using cfiCommon0
          CFI (cfiCond483) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond483) Conditional ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_335
          CFI (cfiCond483) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond483) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond483) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond483) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond483) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond483) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond483) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond483) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond483) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond483) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond483) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond483) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond483) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond483) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond483) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond483) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond483) CFA_SP SP+-4
          CFI (cfiCond483) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond484 Using cfiCommon0
          CFI (cfiCond484) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond484) Conditional ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_336
          CFI (cfiCond484) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond484) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond484) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond484) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond484) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond484) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond484) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond484) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond484) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond484) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond484) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond484) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond484) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond484) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond484) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond484) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond484) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond484) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond484) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond484) CFA_SP SP+-4
          CFI (cfiCond484) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond485 Using cfiCommon0
          CFI (cfiCond485) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond485) Conditional ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_337
          CFI (cfiCond485) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond485) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond485) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond485) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond485) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond485) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond485) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond485) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond485) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond485) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond485) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond485) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond485) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond485) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond485) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond485) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond485) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond485) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond485) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond485) CFA_SP SP+-4
          CFI (cfiCond485) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond486 Using cfiCommon0
          CFI (cfiCond486) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond486) Conditional ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_338
          CFI (cfiCond486) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond486) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond486) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond486) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond486) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond486) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond486) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond486) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond486) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond486) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond486) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond486) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond486) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond486) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond486) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond486) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond486) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond486) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond486) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond486) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond486) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond486) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond486) CFA_SP SP+-4
          CFI (cfiCond486) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond487 Using cfiCommon0
          CFI (cfiCond487) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond487) Conditional ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_339
          CFI (cfiCond487) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond487) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond487) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond487) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond487) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond487) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond487) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond487) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond487) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond487) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond487) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond487) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond487) CFA_SP SP+-4
          CFI (cfiCond487) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond488 Using cfiCommon0
          CFI (cfiCond488) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond488) Conditional ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_340
          CFI (cfiCond488) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond488) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond488) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond488) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond488) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond488) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond488) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond488) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond488) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond488) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond488) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond488) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond488) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond488) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond488) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond488) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond488) CFA_SP SP+-4
          CFI (cfiCond488) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond489 Using cfiCommon0
          CFI (cfiCond489) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond489) Conditional ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_341
          CFI (cfiCond489) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond489) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond489) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond489) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond489) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond489) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond489) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond489) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond489) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond489) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond489) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond489) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond489) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond489) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond489) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond489) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond489) CFA_SP SP+-4
          CFI (cfiCond489) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond490 Using cfiCommon0
          CFI (cfiCond490) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond490) Conditional ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_342
          CFI (cfiCond490) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond490) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond490) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond490) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond490) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond490) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond490) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond490) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond490) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond490) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond490) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond490) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond490) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond490) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond490) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond490) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond490) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond490) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond490) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond490) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond490) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond490) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond490) CFA_SP SP+-4
          CFI (cfiCond490) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond491 Using cfiCommon0
          CFI (cfiCond491) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond491) Conditional ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_343
          CFI (cfiCond491) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond491) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond491) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond491) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond491) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond491) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond491) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond491) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond491) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond491) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond491) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond491) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond491) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond491) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond491) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond491) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond491) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond491) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond491) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond491) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond491) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond491) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond491) CFA_SP SP+-4
          CFI (cfiCond491) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond492 Using cfiCommon0
          CFI (cfiCond492) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond492) Conditional ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_344
          CFI (cfiCond492) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond492) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond492) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond492) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond492) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond492) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond492) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond492) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond492) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond492) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond492) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond492) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond492) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond492) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond492) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond492) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond492) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond492) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond492) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond492) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond492) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond492) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond492) CFA_SP SP+-4
          CFI (cfiCond492) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond493 Using cfiCommon0
          CFI (cfiCond493) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond493) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_59
          CFI (cfiCond493) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond493) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond493) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond493) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond493) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond493) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond493) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond493) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond493) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond493) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond493) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond493) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond493) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond493) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond493) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond493) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond493) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond493) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond493) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond493) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond493) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond493) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond493) CFA_SP SP+-4
          CFI (cfiCond493) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond494 Using cfiCommon0
          CFI (cfiCond494) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond494) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_60
          CFI (cfiCond494) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond494) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond494) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond494) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond494) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond494) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond494) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond494) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond494) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond494) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond494) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond494) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond494) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond494) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond494) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond494) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond494) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond494) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond494) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond494) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond494) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond494) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond494) CFA_SP SP+-4
          CFI (cfiCond494) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker495 Using cfiCommon1
          CFI (cfiPicker495) NoFunction
          CFI (cfiPicker495) Picker
        LCALL     ?Subroutine137 & 0xFFFF
??CrossCallReturnLabel_354:
        RET
          CFI EndBlock cfiCond473
          CFI EndBlock cfiCond474
          CFI EndBlock cfiCond475
          CFI EndBlock cfiCond476
          CFI EndBlock cfiCond477
          CFI EndBlock cfiCond478
          CFI EndBlock cfiCond479
          CFI EndBlock cfiCond480
          CFI EndBlock cfiCond481
          CFI EndBlock cfiCond482
          CFI EndBlock cfiCond483
          CFI EndBlock cfiCond484
          CFI EndBlock cfiCond485
          CFI EndBlock cfiCond486
          CFI EndBlock cfiCond487
          CFI EndBlock cfiCond488
          CFI EndBlock cfiCond489
          CFI EndBlock cfiCond490
          CFI EndBlock cfiCond491
          CFI EndBlock cfiCond492
          CFI EndBlock cfiCond493
          CFI EndBlock cfiCond494
          CFI EndBlock cfiPicker495

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine137:
          CFI Block cfiCond496 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetPINCode
          CFI Conditional ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_61
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond497 Using cfiCommon0
          CFI (cfiCond497) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond497) Conditional ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_62
          CFI (cfiCond497) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond497) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond497) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond497) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond497) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond497) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond497) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond497) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond497) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond497) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond497) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond497) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond497) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond497) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond497) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond497) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond497) CFA_SP SP+-6
          CFI (cfiCond497) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond498 Using cfiCommon0
          CFI (cfiCond498) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond498) Conditional ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_63
          CFI (cfiCond498) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond498) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond498) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond498) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond498) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond498) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond498) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond498) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond498) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond498) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond498) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond498) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond498) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond498) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond498) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond498) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond498) CFA_SP SP+-6
          CFI (cfiCond498) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond499 Using cfiCommon0
          CFI (cfiCond499) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond499) Conditional ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_64
          CFI (cfiCond499) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond499) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond499) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond499) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond499) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond499) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond499) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond499) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond499) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond499) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond499) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond499) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond499) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond499) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond499) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond499) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond499) CFA_SP SP+-6
          CFI (cfiCond499) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond500 Using cfiCommon0
          CFI (cfiCond500) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond500) Conditional ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_12
          CFI (cfiCond500) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond500) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond500) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond500) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond500) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond500) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond500) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond500) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond500) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond500) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond500) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond500) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond500) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond500) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond500) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond500) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond500) CFA_SP SP+-6
          CFI (cfiCond500) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond501 Using cfiCommon0
          CFI (cfiCond501) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond501) Conditional ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_13
          CFI (cfiCond501) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond501) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond501) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond501) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond501) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond501) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond501) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond501) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond501) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond501) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond501) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond501) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond501) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond501) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond501) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond501) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond501) CFA_SP SP+-6
          CFI (cfiCond501) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond502 Using cfiCommon0
          CFI (cfiCond502) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond502) Conditional ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_14
          CFI (cfiCond502) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond502) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond502) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond502) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond502) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond502) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond502) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond502) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond502) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond502) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond502) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond502) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond502) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond502) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond502) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond502) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond502) CFA_SP SP+-6
          CFI (cfiCond502) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond503 Using cfiCommon0
          CFI (cfiCond503) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond503) Conditional ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_15
          CFI (cfiCond503) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond503) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond503) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond503) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond503) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond503) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond503) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond503) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond503) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond503) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond503) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond503) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond503) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond503) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond503) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond503) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond503) CFA_SP SP+-6
          CFI (cfiCond503) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond504 Using cfiCommon0
          CFI (cfiCond504) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond504) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_345
          CFI (cfiCond504) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond504) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond504) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond504) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond504) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond504) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond504) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond504) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond504) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond504) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond504) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond504) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond504) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond504) CFA_SP SP+-6
          CFI (cfiCond504) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond505 Using cfiCommon0
          CFI (cfiCond505) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond505) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_346
          CFI (cfiCond505) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond505) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond505) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond505) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond505) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond505) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond505) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond505) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond505) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond505) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond505) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond505) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond505) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond505) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond505) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond505) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond505) CFA_SP SP+-6
          CFI (cfiCond505) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond506 Using cfiCommon0
          CFI (cfiCond506) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond506) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_347
          CFI (cfiCond506) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond506) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond506) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond506) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond506) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond506) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond506) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond506) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond506) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond506) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond506) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond506) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond506) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond506) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond506) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond506) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond506) CFA_SP SP+-6
          CFI (cfiCond506) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond507 Using cfiCommon0
          CFI (cfiCond507) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond507) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_348
          CFI (cfiCond507) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond507) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond507) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond507) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond507) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond507) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond507) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond507) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond507) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond507) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond507) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond507) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond507) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond507) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond507) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond507) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond507) CFA_SP SP+-6
          CFI (cfiCond507) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond508 Using cfiCommon0
          CFI (cfiCond508) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond508) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_349
          CFI (cfiCond508) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond508) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond508) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond508) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond508) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond508) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond508) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond508) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond508) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond508) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond508) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond508) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond508) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond508) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond508) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond508) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond508) CFA_SP SP+-6
          CFI (cfiCond508) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond509 Using cfiCommon0
          CFI (cfiCond509) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond509) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_350
          CFI (cfiCond509) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond509) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond509) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond509) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond509) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond509) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond509) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond509) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond509) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond509) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond509) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond509) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond509) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond509) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond509) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond509) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond509) CFA_SP SP+-6
          CFI (cfiCond509) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond510 Using cfiCommon0
          CFI (cfiCond510) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond510) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_331
          CFI (cfiCond510) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond510) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond510) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond510) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond510) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond510) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond510) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond510) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond510) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond510) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond510) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond510) CFA_SP SP+-6
          CFI (cfiCond510) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond511 Using cfiCommon0
          CFI (cfiCond511) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond511) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_332
          CFI (cfiCond511) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond511) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond511) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond511) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond511) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond511) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond511) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond511) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond511) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond511) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond511) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond511) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond511) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond511) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond511) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond511) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond511) CFA_SP SP+-6
          CFI (cfiCond511) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond512 Using cfiCommon0
          CFI (cfiCond512) Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI (cfiCond512) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_333
          CFI (cfiCond512) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond512) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond512) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond512) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond512) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond512) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond512) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond512) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond512) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond512) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond512) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond512) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond512) CFA_SP SP+-6
          CFI (cfiCond512) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond513 Using cfiCommon0
          CFI (cfiCond513) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond513) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_334
          CFI (cfiCond513) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond513) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond513) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond513) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond513) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond513) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond513) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond513) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond513) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond513) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond513) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond513) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond513) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond513) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond513) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond513) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond513) CFA_SP SP+-6
          CFI (cfiCond513) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond514 Using cfiCommon0
          CFI (cfiCond514) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond514) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_335
          CFI (cfiCond514) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond514) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond514) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond514) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond514) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond514) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond514) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond514) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond514) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond514) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond514) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond514) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond514) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond514) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond514) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond514) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond514) CFA_SP SP+-6
          CFI (cfiCond514) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond515 Using cfiCommon0
          CFI (cfiCond515) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond515) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_336
          CFI (cfiCond515) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond515) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond515) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond515) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond515) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond515) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond515) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond515) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond515) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond515) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond515) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond515) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond515) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond515) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond515) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond515) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond515) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond515) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond515) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond515) CFA_SP SP+-6
          CFI (cfiCond515) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond516 Using cfiCommon0
          CFI (cfiCond516) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond516) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_337
          CFI (cfiCond516) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond516) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond516) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond516) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond516) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond516) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond516) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond516) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond516) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond516) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond516) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond516) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond516) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond516) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond516) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond516) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond516) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond516) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond516) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond516) CFA_SP SP+-6
          CFI (cfiCond516) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond517 Using cfiCommon0
          CFI (cfiCond517) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond517) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_338
          CFI (cfiCond517) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond517) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond517) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond517) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond517) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond517) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond517) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond517) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond517) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond517) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond517) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond517) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond517) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond517) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond517) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond517) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond517) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond517) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond517) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond517) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond517) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond517) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond517) CFA_SP SP+-6
          CFI (cfiCond517) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond518 Using cfiCommon0
          CFI (cfiCond518) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond518) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_339
          CFI (cfiCond518) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond518) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond518) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond518) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond518) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond518) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond518) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond518) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond518) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond518) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond518) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond518) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond518) CFA_SP SP+-6
          CFI (cfiCond518) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond519 Using cfiCommon0
          CFI (cfiCond519) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond519) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_340
          CFI (cfiCond519) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond519) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond519) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond519) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond519) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond519) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond519) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond519) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond519) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond519) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond519) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond519) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond519) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond519) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond519) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond519) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond519) CFA_SP SP+-6
          CFI (cfiCond519) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond520 Using cfiCommon0
          CFI (cfiCond520) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond520) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_341
          CFI (cfiCond520) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond520) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond520) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond520) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond520) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond520) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond520) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond520) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond520) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond520) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond520) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond520) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond520) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond520) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond520) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond520) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond520) CFA_SP SP+-6
          CFI (cfiCond520) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond521 Using cfiCommon0
          CFI (cfiCond521) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond521) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_342
          CFI (cfiCond521) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond521) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond521) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond521) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond521) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond521) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond521) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond521) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond521) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond521) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond521) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond521) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond521) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond521) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond521) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond521) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond521) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond521) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond521) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond521) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond521) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond521) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond521) CFA_SP SP+-6
          CFI (cfiCond521) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond522 Using cfiCommon0
          CFI (cfiCond522) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond522) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_343
          CFI (cfiCond522) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond522) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond522) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond522) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond522) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond522) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond522) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond522) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond522) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond522) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond522) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond522) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond522) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond522) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond522) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond522) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond522) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond522) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond522) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond522) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond522) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond522) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond522) CFA_SP SP+-6
          CFI (cfiCond522) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond523 Using cfiCommon0
          CFI (cfiCond523) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond523) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_344
          CFI (cfiCond523) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond523) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond523) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond523) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond523) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond523) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond523) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond523) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond523) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond523) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond523) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond523) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond523) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond523) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond523) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond523) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond523) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond523) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond523) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond523) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond523) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond523) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond523) CFA_SP SP+-6
          CFI (cfiCond523) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond524 Using cfiCommon0
          CFI (cfiCond524) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond524) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_59
          CFI (cfiCond524) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond524) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond524) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond524) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond524) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond524) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond524) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond524) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond524) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond524) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond524) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond524) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond524) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond524) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond524) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond524) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond524) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond524) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond524) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond524) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond524) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond524) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond524) CFA_SP SP+-6
          CFI (cfiCond524) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond525 Using cfiCommon0
          CFI (cfiCond525) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond525) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_60
          CFI (cfiCond525) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond525) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond525) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond525) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond525) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond525) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond525) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond525) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond525) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond525) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond525) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond525) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond525) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond525) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond525) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond525) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond525) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond525) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond525) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond525) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond525) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond525) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond525) CFA_SP SP+-6
          CFI (cfiCond525) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker526 Using cfiCommon1
          CFI (cfiPicker526) NoFunction
          CFI (cfiPicker526) Picker
        LCALL     ?Subroutine140 & 0xFFFF
??CrossCallReturnLabel_482:
        RET
          CFI EndBlock cfiCond496
          CFI EndBlock cfiCond497
          CFI EndBlock cfiCond498
          CFI EndBlock cfiCond499
          CFI EndBlock cfiCond500
          CFI EndBlock cfiCond501
          CFI EndBlock cfiCond502
          CFI EndBlock cfiCond503
          CFI EndBlock cfiCond504
          CFI EndBlock cfiCond505
          CFI EndBlock cfiCond506
          CFI EndBlock cfiCond507
          CFI EndBlock cfiCond508
          CFI EndBlock cfiCond509
          CFI EndBlock cfiCond510
          CFI EndBlock cfiCond511
          CFI EndBlock cfiCond512
          CFI EndBlock cfiCond513
          CFI EndBlock cfiCond514
          CFI EndBlock cfiCond515
          CFI EndBlock cfiCond516
          CFI EndBlock cfiCond517
          CFI EndBlock cfiCond518
          CFI EndBlock cfiCond519
          CFI EndBlock cfiCond520
          CFI EndBlock cfiCond521
          CFI EndBlock cfiCond522
          CFI EndBlock cfiCond523
          CFI EndBlock cfiCond524
          CFI EndBlock cfiCond525
          CFI EndBlock cfiPicker526

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine140:
          CFI Block cfiCond527 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetPINCode
          CFI Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_61
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-8
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond528 Using cfiCommon0
          CFI (cfiCond528) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond528) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_62
          CFI (cfiCond528) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond528) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond528) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond528) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond528) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond528) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond528) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond528) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond528) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond528) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond528) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond528) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond528) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond528) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond528) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond528) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond528) CFA_SP SP+-8
          CFI (cfiCond528) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond529 Using cfiCommon0
          CFI (cfiCond529) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond529) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_63
          CFI (cfiCond529) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond529) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond529) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond529) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond529) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond529) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond529) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond529) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond529) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond529) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond529) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond529) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond529) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond529) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond529) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond529) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond529) CFA_SP SP+-8
          CFI (cfiCond529) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond530 Using cfiCommon0
          CFI (cfiCond530) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond530) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_64
          CFI (cfiCond530) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond530) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond530) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond530) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond530) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond530) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond530) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond530) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond530) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond530) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond530) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond530) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond530) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond530) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond530) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond530) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond530) CFA_SP SP+-8
          CFI (cfiCond530) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond531 Using cfiCommon0
          CFI (cfiCond531) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond531) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_12
          CFI (cfiCond531) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond531) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond531) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond531) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond531) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond531) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond531) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond531) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond531) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond531) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond531) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond531) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond531) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond531) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond531) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond531) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond531) CFA_SP SP+-8
          CFI (cfiCond531) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond532 Using cfiCommon0
          CFI (cfiCond532) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond532) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_13
          CFI (cfiCond532) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond532) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond532) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond532) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond532) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond532) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond532) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond532) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond532) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond532) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond532) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond532) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond532) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond532) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond532) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond532) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond532) CFA_SP SP+-8
          CFI (cfiCond532) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond533 Using cfiCommon0
          CFI (cfiCond533) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond533) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_14
          CFI (cfiCond533) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond533) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond533) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond533) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond533) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond533) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond533) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond533) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond533) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond533) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond533) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond533) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond533) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond533) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond533) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond533) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond533) CFA_SP SP+-8
          CFI (cfiCond533) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond534 Using cfiCommon0
          CFI (cfiCond534) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond534) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_15
          CFI (cfiCond534) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond534) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond534) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond534) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond534) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond534) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond534) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond534) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond534) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond534) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond534) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond534) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond534) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond534) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond534) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond534) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond534) CFA_SP SP+-8
          CFI (cfiCond534) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond535 Using cfiCommon0
          CFI (cfiCond535) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond535) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_345
          CFI (cfiCond535) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond535) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond535) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond535) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond535) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond535) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond535) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond535) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond535) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond535) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond535) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond535) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond535) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond535) CFA_SP SP+-8
          CFI (cfiCond535) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond536 Using cfiCommon0
          CFI (cfiCond536) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond536) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_346
          CFI (cfiCond536) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond536) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond536) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond536) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond536) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond536) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond536) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond536) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond536) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond536) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond536) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond536) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond536) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond536) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond536) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond536) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond536) CFA_SP SP+-8
          CFI (cfiCond536) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond537 Using cfiCommon0
          CFI (cfiCond537) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond537) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_347
          CFI (cfiCond537) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond537) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond537) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond537) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond537) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond537) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond537) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond537) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond537) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond537) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond537) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond537) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond537) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond537) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond537) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond537) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond537) CFA_SP SP+-8
          CFI (cfiCond537) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond538 Using cfiCommon0
          CFI (cfiCond538) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond538) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_348
          CFI (cfiCond538) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond538) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond538) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond538) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond538) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond538) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond538) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond538) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond538) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond538) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond538) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond538) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond538) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond538) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond538) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond538) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond538) CFA_SP SP+-8
          CFI (cfiCond538) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond539 Using cfiCommon0
          CFI (cfiCond539) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond539) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_349
          CFI (cfiCond539) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond539) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond539) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond539) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond539) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond539) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond539) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond539) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond539) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond539) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond539) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond539) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond539) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond539) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond539) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond539) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond539) CFA_SP SP+-8
          CFI (cfiCond539) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond540 Using cfiCommon0
          CFI (cfiCond540) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond540) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_350
          CFI (cfiCond540) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond540) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond540) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond540) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond540) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond540) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond540) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond540) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond540) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond540) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond540) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond540) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond540) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond540) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond540) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond540) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond540) CFA_SP SP+-8
          CFI (cfiCond540) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond541 Using cfiCommon0
          CFI (cfiCond541) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond541) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_331
          CFI (cfiCond541) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond541) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond541) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond541) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond541) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond541) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond541) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond541) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond541) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond541) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond541) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond541) CFA_SP SP+-8
          CFI (cfiCond541) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond542 Using cfiCommon0
          CFI (cfiCond542) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond542) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_332
          CFI (cfiCond542) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond542) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond542) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond542) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond542) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond542) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond542) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond542) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond542) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond542) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond542) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond542) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond542) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond542) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond542) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond542) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond542) CFA_SP SP+-8
          CFI (cfiCond542) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond543 Using cfiCommon0
          CFI (cfiCond543) Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI (cfiCond543) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_333
          CFI (cfiCond543) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond543) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond543) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond543) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond543) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond543) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond543) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond543) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond543) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond543) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond543) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond543) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond543) CFA_SP SP+-8
          CFI (cfiCond543) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond544 Using cfiCommon0
          CFI (cfiCond544) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond544) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_334
          CFI (cfiCond544) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond544) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond544) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond544) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond544) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond544) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond544) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond544) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond544) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond544) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond544) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond544) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond544) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond544) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond544) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond544) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond544) CFA_SP SP+-8
          CFI (cfiCond544) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond545 Using cfiCommon0
          CFI (cfiCond545) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond545) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_335
          CFI (cfiCond545) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond545) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond545) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond545) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond545) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond545) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond545) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond545) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond545) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond545) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond545) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond545) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond545) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond545) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond545) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond545) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond545) CFA_SP SP+-8
          CFI (cfiCond545) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond546 Using cfiCommon0
          CFI (cfiCond546) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond546) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_336
          CFI (cfiCond546) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond546) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond546) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond546) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond546) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond546) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond546) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond546) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond546) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond546) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond546) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond546) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond546) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond546) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond546) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond546) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond546) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond546) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond546) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond546) CFA_SP SP+-8
          CFI (cfiCond546) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond547 Using cfiCommon0
          CFI (cfiCond547) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond547) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_337
          CFI (cfiCond547) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond547) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond547) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond547) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond547) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond547) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond547) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond547) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond547) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond547) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond547) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond547) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond547) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond547) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond547) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond547) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond547) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond547) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond547) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond547) CFA_SP SP+-8
          CFI (cfiCond547) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond548 Using cfiCommon0
          CFI (cfiCond548) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond548) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_338
          CFI (cfiCond548) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond548) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond548) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond548) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond548) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond548) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond548) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond548) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond548) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond548) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond548) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond548) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond548) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond548) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond548) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond548) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond548) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond548) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond548) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond548) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond548) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond548) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond548) CFA_SP SP+-8
          CFI (cfiCond548) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond549 Using cfiCommon0
          CFI (cfiCond549) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond549) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_339
          CFI (cfiCond549) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond549) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond549) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond549) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond549) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond549) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond549) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond549) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond549) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond549) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond549) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond549) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond549) CFA_SP SP+-8
          CFI (cfiCond549) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond550 Using cfiCommon0
          CFI (cfiCond550) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond550) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_340
          CFI (cfiCond550) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond550) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond550) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond550) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond550) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond550) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond550) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond550) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond550) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond550) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond550) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond550) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond550) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond550) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond550) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond550) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond550) CFA_SP SP+-8
          CFI (cfiCond550) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond551 Using cfiCommon0
          CFI (cfiCond551) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond551) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_341
          CFI (cfiCond551) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond551) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond551) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond551) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond551) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond551) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond551) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond551) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond551) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond551) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond551) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond551) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond551) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond551) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond551) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond551) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond551) CFA_SP SP+-8
          CFI (cfiCond551) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond552 Using cfiCommon0
          CFI (cfiCond552) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond552) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_342
          CFI (cfiCond552) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond552) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond552) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond552) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond552) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond552) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond552) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond552) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond552) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond552) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond552) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond552) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond552) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond552) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond552) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond552) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond552) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond552) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond552) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond552) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond552) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond552) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond552) CFA_SP SP+-8
          CFI (cfiCond552) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond553 Using cfiCommon0
          CFI (cfiCond553) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond553) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_343
          CFI (cfiCond553) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond553) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond553) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond553) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond553) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond553) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond553) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond553) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond553) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond553) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond553) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond553) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond553) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond553) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond553) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond553) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond553) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond553) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond553) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond553) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond553) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond553) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond553) CFA_SP SP+-8
          CFI (cfiCond553) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond554 Using cfiCommon0
          CFI (cfiCond554) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond554) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_344
          CFI (cfiCond554) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond554) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond554) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond554) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond554) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond554) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond554) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond554) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond554) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond554) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond554) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond554) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond554) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond554) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond554) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond554) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond554) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond554) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond554) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond554) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond554) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond554) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond554) CFA_SP SP+-8
          CFI (cfiCond554) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond555 Using cfiCommon0
          CFI (cfiCond555) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond555) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_59
          CFI (cfiCond555) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond555) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond555) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond555) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond555) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond555) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond555) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond555) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond555) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond555) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond555) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond555) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond555) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond555) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond555) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond555) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond555) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond555) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond555) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond555) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond555) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond555) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond555) CFA_SP SP+-8
          CFI (cfiCond555) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond556 Using cfiCommon0
          CFI (cfiCond556) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond556) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_60
          CFI (cfiCond556) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond556) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond556) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond556) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond556) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond556) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond556) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond556) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond556) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond556) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond556) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond556) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond556) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond556) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond556) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond556) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond556) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond556) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond556) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond556) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond556) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond556) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond556) CFA_SP SP+-8
          CFI (cfiCond556) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond557 Using cfiCommon0
          CFI (cfiCond557) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond557) Conditional ??CrossCallReturnLabel_483, ??CrossCallReturnLabel_480, ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_89
          CFI (cfiCond557) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond557) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond557) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond557) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond557) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond557) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond557) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond557) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond557) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond557) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond557) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond557) CFA_SP SP+-8
          CFI (cfiCond557) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond558 Using cfiCommon0
          CFI (cfiCond558) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond558) Conditional ??CrossCallReturnLabel_483, ??CrossCallReturnLabel_480, ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_90
          CFI (cfiCond558) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond558) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond558) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond558) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond558) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond558) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond558) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond558) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond558) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond558) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond558) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond558) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond558) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond558) CFA_SP SP+-8
          CFI (cfiCond558) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond559 Using cfiCommon0
          CFI (cfiCond559) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond559) Conditional ??CrossCallReturnLabel_483, ??CrossCallReturnLabel_480, ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_59
          CFI (cfiCond559) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond559) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond559) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond559) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond559) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond559) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond559) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond559) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond559) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond559) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond559) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond559) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond559) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond559) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond559) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond559) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond559) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond559) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond559) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond559) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond559) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond559) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond559) CFA_SP SP+-8
          CFI (cfiCond559) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond560 Using cfiCommon0
          CFI (cfiCond560) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond560) Conditional ??CrossCallReturnLabel_483, ??CrossCallReturnLabel_480, ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_60
          CFI (cfiCond560) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond560) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond560) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond560) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond560) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond560) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond560) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond560) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond560) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond560) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond560) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond560) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond560) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond560) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond560) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond560) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond560) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond560) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond560) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond560) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond560) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond560) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond560) CFA_SP SP+-8
          CFI (cfiCond560) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond561 Using cfiCommon0
          CFI (cfiCond561) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond561) Conditional ??CrossCallReturnLabel_483, ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_477, ??CrossCallReturnLabel_4
          CFI (cfiCond561) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond561) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond561) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond561) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond561) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond561) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond561) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond561) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond561) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond561) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond561) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond561) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond561) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond561) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond561) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond561) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond561) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond561) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond561) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond561) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond561) CFA_SP SP+-8
          CFI (cfiCond561) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond562 Using cfiCommon0
          CFI (cfiCond562) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond562) Conditional ??CrossCallReturnLabel_483, ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_477, ??CrossCallReturnLabel_5
          CFI (cfiCond562) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond562) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond562) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond562) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond562) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond562) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond562) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond562) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond562) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond562) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond562) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond562) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond562) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond562) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond562) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond562) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond562) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond562) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond562) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond562) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond562) CFA_SP SP+-8
          CFI (cfiCond562) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond563 Using cfiCommon0
          CFI (cfiCond563) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond563) Conditional ??CrossCallReturnLabel_483, ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_477, ??CrossCallReturnLabel_6
          CFI (cfiCond563) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond563) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond563) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond563) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond563) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond563) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond563) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond563) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond563) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond563) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond563) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond563) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond563) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond563) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond563) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond563) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond563) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond563) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond563) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond563) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond563) CFA_SP SP+-8
          CFI (cfiCond563) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond564 Using cfiCommon0
          CFI (cfiCond564) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond564) Conditional ??CrossCallReturnLabel_483, ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_477, ??CrossCallReturnLabel_7
          CFI (cfiCond564) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond564) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond564) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond564) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond564) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond564) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond564) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond564) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond564) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond564) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond564) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond564) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond564) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond564) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond564) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond564) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond564) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond564) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond564) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond564) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond564) CFA_SP SP+-8
          CFI (cfiCond564) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond565 Using cfiCommon0
          CFI (cfiCond565) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond565) Conditional ??CrossCallReturnLabel_483, ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_478, ??CrossCallReturnLabel_109
          CFI (cfiCond565) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond565) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond565) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond565) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond565) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond565) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond565) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond565) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond565) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond565) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond565) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond565) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond565) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond565) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond565) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond565) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond565) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond565) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond565) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond565) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond565) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond565) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond565) CFA_SP SP+-8
          CFI (cfiCond565) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond566 Using cfiCommon0
          CFI (cfiCond566) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond566) Conditional ??CrossCallReturnLabel_483, ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_478, ??CrossCallReturnLabel_110
          CFI (cfiCond566) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond566) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond566) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond566) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond566) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond566) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond566) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond566) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond566) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond566) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond566) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond566) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond566) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond566) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond566) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond566) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond566) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond566) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond566) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond566) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond566) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond566) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond566) CFA_SP SP+-8
          CFI (cfiCond566) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond567 Using cfiCommon0
          CFI (cfiCond567) Function zclClosures_SendDoorLockRequest
          CFI (cfiCond567) Conditional ??CrossCallReturnLabel_483, ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_479, ??CrossCallReturnLabel_441
          CFI (cfiCond567) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond567) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond567) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond567) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond567) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond567) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond567) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond567) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond567) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond567) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond567) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond567) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond567) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond567) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond567) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond567) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond567) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond567) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond567) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond567) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond567) CFA_SP SP+-8
          CFI (cfiCond567) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond568 Using cfiCommon0
          CFI (cfiCond568) Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI (cfiCond568) Conditional ??CrossCallReturnLabel_483, ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_479, ??CrossCallReturnLabel_442
          CFI (cfiCond568) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond568) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond568) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond568) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond568) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond568) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond568) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond568) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond568) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond568) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond568) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond568) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond568) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond568) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond568) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond568) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond568) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond568) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond568) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond568) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond568) CFA_SP SP+-8
          CFI (cfiCond568) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond569 Using cfiCommon0
          CFI (cfiCond569) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond569) Conditional ??CrossCallReturnLabel_483, ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_479, ??CrossCallReturnLabel_443
          CFI (cfiCond569) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond569) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond569) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond569) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond569) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond569) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond569) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond569) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond569) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond569) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond569) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond569) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond569) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond569) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond569) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond569) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond569) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond569) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond569) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond569) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond569) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond569) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond569) CFA_SP SP+-8
          CFI (cfiCond569) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond570 Using cfiCommon0
          CFI (cfiCond570) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond570) Conditional ??CrossCallReturnLabel_483, ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_479, ??CrossCallReturnLabel_440
          CFI (cfiCond570) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond570) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond570) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond570) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond570) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond570) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond570) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond570) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond570) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond570) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond570) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond570) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond570) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond570) CFA_SP SP+-8
          CFI (cfiCond570) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker571 Using cfiCommon1
          CFI (cfiPicker571) NoFunction
          CFI (cfiPicker571) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPH,A
        MOV       DPL,R0
        RET
          CFI EndBlock cfiCond527
          CFI EndBlock cfiCond528
          CFI EndBlock cfiCond529
          CFI EndBlock cfiCond530
          CFI EndBlock cfiCond531
          CFI EndBlock cfiCond532
          CFI EndBlock cfiCond533
          CFI EndBlock cfiCond534
          CFI EndBlock cfiCond535
          CFI EndBlock cfiCond536
          CFI EndBlock cfiCond537
          CFI EndBlock cfiCond538
          CFI EndBlock cfiCond539
          CFI EndBlock cfiCond540
          CFI EndBlock cfiCond541
          CFI EndBlock cfiCond542
          CFI EndBlock cfiCond543
          CFI EndBlock cfiCond544
          CFI EndBlock cfiCond545
          CFI EndBlock cfiCond546
          CFI EndBlock cfiCond547
          CFI EndBlock cfiCond548
          CFI EndBlock cfiCond549
          CFI EndBlock cfiCond550
          CFI EndBlock cfiCond551
          CFI EndBlock cfiCond552
          CFI EndBlock cfiCond553
          CFI EndBlock cfiCond554
          CFI EndBlock cfiCond555
          CFI EndBlock cfiCond556
          CFI EndBlock cfiCond557
          CFI EndBlock cfiCond558
          CFI EndBlock cfiCond559
          CFI EndBlock cfiCond560
          CFI EndBlock cfiCond561
          CFI EndBlock cfiCond562
          CFI EndBlock cfiCond563
          CFI EndBlock cfiCond564
          CFI EndBlock cfiCond565
          CFI EndBlock cfiCond566
          CFI EndBlock cfiCond567
          CFI EndBlock cfiCond568
          CFI EndBlock cfiCond569
          CFI EndBlock cfiCond570
          CFI EndBlock cfiPicker571

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine38:
          CFI Block cfiCond572 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI Conditional ??CrossCallReturnLabel_356
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond573 Using cfiCommon0
          CFI (cfiCond573) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond573) Conditional ??CrossCallReturnLabel_357
          CFI (cfiCond573) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond573) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond573) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond573) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond573) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond573) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond573) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond573) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond573) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond573) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond573) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond573) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond573) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond573) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond573) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond573) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond573) CFA_SP SP+-2
          CFI (cfiCond573) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker574 Using cfiCommon1
          CFI (cfiPicker574) NoFunction
          CFI (cfiPicker574) Picker
        MOV       DPL,R0
        MOV       DPH,R1
          CFI EndBlock cfiCond572
          CFI EndBlock cfiCond573
          CFI EndBlock cfiPicker574
        REQUIRE ??Subroutine161_0
        ; // Fall through to label ??Subroutine161_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine161_0:
          CFI Block cfiCond575 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_355
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond576 Using cfiCommon0
          CFI (cfiCond576) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond576) Conditional ??CrossCallReturnLabel_356
          CFI (cfiCond576) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond576) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond576) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond576) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond576) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond576) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond576) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond576) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond576) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond576) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond576) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond576) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond576) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond576) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond576) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond576) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond576) CFA_SP SP+-2
          CFI (cfiCond576) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond577 Using cfiCommon0
          CFI (cfiCond577) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond577) Conditional ??CrossCallReturnLabel_357
          CFI (cfiCond577) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond577) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond577) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond577) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond577) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond577) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond577) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond577) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond577) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond577) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond577) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond577) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond577) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond577) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond577) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond577) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond577) CFA_SP SP+-2
          CFI (cfiCond577) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker578 Using cfiCommon1
          CFI (cfiPicker578) NoFunction
          CFI (cfiPicker578) Picker
        LCALL     ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_364:
        MOV       R5,A
        MOV       DPL,R4
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond575
          CFI EndBlock cfiCond576
          CFI EndBlock cfiCond577
          CFI EndBlock cfiPicker578

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine33:
          CFI Block cfiCond579 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI Conditional ??CrossCallReturnLabel_370
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond580 Using cfiCommon0
          CFI (cfiCond580) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond580) Conditional ??CrossCallReturnLabel_371
          CFI (cfiCond580) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond580) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond580) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond580) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond580) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond580) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond580) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond580) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond580) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond580) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond580) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond580) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond580) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond580) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond580) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond580) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond580) CFA_SP SP+-2
          CFI (cfiCond580) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker581 Using cfiCommon1
          CFI (cfiPicker581) NoFunction
          CFI (cfiPicker581) Picker
        INC       DPTR
          CFI EndBlock cfiCond579
          CFI EndBlock cfiCond580
          CFI EndBlock cfiPicker581
        REQUIRE ??Subroutine162_0
        ; // Fall through to label ??Subroutine162_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine162_0:
          CFI Block cfiCond582 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI Conditional ??CrossCallReturnLabel_369
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond583 Using cfiCommon0
          CFI (cfiCond583) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond583) Conditional ??CrossCallReturnLabel_370
          CFI (cfiCond583) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond583) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond583) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond583) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond583) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond583) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond583) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond583) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond583) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond583) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond583) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond583) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond583) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond583) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond583) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond583) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond583) CFA_SP SP+-2
          CFI (cfiCond583) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond584 Using cfiCommon0
          CFI (cfiCond584) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond584) Conditional ??CrossCallReturnLabel_371
          CFI (cfiCond584) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond584) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond584) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond584) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond584) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond584) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond584) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond584) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond584) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond584) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond584) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond584) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond584) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond584) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond584) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond584) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond584) CFA_SP SP+-2
          CFI (cfiCond584) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker585 Using cfiCommon1
          CFI (cfiPicker585) NoFunction
          CFI (cfiPicker585) Picker
        INC       DPTR
          CFI EndBlock cfiCond582
          CFI EndBlock cfiCond583
          CFI EndBlock cfiCond584
          CFI EndBlock cfiPicker585
        REQUIRE ??Subroutine163_0
        ; // Fall through to label ??Subroutine163_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine163_0:
          CFI Block cfiCond586 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI Conditional ??CrossCallReturnLabel_368
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond587 Using cfiCommon0
          CFI (cfiCond587) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond587) Conditional ??CrossCallReturnLabel_369
          CFI (cfiCond587) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond587) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond587) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond587) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond587) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond587) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond587) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond587) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond587) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond587) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond587) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond587) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond587) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond587) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond587) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond587) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond587) CFA_SP SP+-2
          CFI (cfiCond587) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond588 Using cfiCommon0
          CFI (cfiCond588) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond588) Conditional ??CrossCallReturnLabel_370
          CFI (cfiCond588) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond588) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond588) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond588) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond588) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond588) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond588) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond588) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond588) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond588) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond588) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond588) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond588) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond588) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond588) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond588) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond588) CFA_SP SP+-2
          CFI (cfiCond588) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond589 Using cfiCommon0
          CFI (cfiCond589) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond589) Conditional ??CrossCallReturnLabel_371
          CFI (cfiCond589) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond589) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond589) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond589) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond589) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond589) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond589) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond589) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond589) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond589) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond589) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond589) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond589) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond589) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond589) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond589) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond589) CFA_SP SP+-2
          CFI (cfiCond589) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker590 Using cfiCommon1
          CFI (cfiPicker590) NoFunction
          CFI (cfiPicker590) Picker
        INC       DPTR
          CFI EndBlock cfiCond586
          CFI EndBlock cfiCond587
          CFI EndBlock cfiCond588
          CFI EndBlock cfiCond589
          CFI EndBlock cfiPicker590
        REQUIRE ??Subroutine164_0
        ; // Fall through to label ??Subroutine164_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine164_0:
          CFI Block cfiCond591 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI Conditional ??CrossCallReturnLabel_367
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond592 Using cfiCommon0
          CFI (cfiCond592) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond592) Conditional ??CrossCallReturnLabel_368
          CFI (cfiCond592) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond592) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond592) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond592) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond592) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond592) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond592) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond592) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond592) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond592) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond592) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond592) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond592) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond592) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond592) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond592) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond592) CFA_SP SP+-2
          CFI (cfiCond592) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond593 Using cfiCommon0
          CFI (cfiCond593) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond593) Conditional ??CrossCallReturnLabel_369
          CFI (cfiCond593) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond593) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond593) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond593) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond593) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond593) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond593) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond593) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond593) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond593) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond593) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond593) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond593) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond593) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond593) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond593) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond593) CFA_SP SP+-2
          CFI (cfiCond593) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond594 Using cfiCommon0
          CFI (cfiCond594) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond594) Conditional ??CrossCallReturnLabel_370
          CFI (cfiCond594) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond594) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond594) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond594) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond594) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond594) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond594) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond594) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond594) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond594) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond594) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond594) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond594) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond594) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond594) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond594) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond594) CFA_SP SP+-2
          CFI (cfiCond594) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond595 Using cfiCommon0
          CFI (cfiCond595) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond595) Conditional ??CrossCallReturnLabel_371
          CFI (cfiCond595) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond595) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond595) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond595) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond595) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond595) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond595) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond595) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond595) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond595) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond595) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond595) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond595) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond595) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond595) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond595) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond595) CFA_SP SP+-2
          CFI (cfiCond595) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker596 Using cfiCommon1
          CFI (cfiPicker596) NoFunction
          CFI (cfiPicker596) Picker
        INC       DPTR
          CFI EndBlock cfiCond591
          CFI EndBlock cfiCond592
          CFI EndBlock cfiCond593
          CFI EndBlock cfiCond594
          CFI EndBlock cfiCond595
          CFI EndBlock cfiPicker596
        REQUIRE ??Subroutine165_0
        ; // Fall through to label ??Subroutine165_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine165_0:
          CFI Block cfiCond597 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI Conditional ??CrossCallReturnLabel_366
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond598 Using cfiCommon0
          CFI (cfiCond598) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond598) Conditional ??CrossCallReturnLabel_367
          CFI (cfiCond598) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond598) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond598) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond598) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond598) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond598) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond598) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond598) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond598) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond598) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond598) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond598) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond598) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond598) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond598) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond598) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond598) CFA_SP SP+-2
          CFI (cfiCond598) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond599 Using cfiCommon0
          CFI (cfiCond599) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond599) Conditional ??CrossCallReturnLabel_368
          CFI (cfiCond599) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond599) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond599) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond599) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond599) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond599) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond599) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond599) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond599) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond599) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond599) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond599) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond599) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond599) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond599) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond599) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond599) CFA_SP SP+-2
          CFI (cfiCond599) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond600 Using cfiCommon0
          CFI (cfiCond600) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond600) Conditional ??CrossCallReturnLabel_369
          CFI (cfiCond600) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond600) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond600) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond600) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond600) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond600) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond600) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond600) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond600) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond600) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond600) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond600) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond600) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond600) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond600) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond600) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond600) CFA_SP SP+-2
          CFI (cfiCond600) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond601 Using cfiCommon0
          CFI (cfiCond601) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond601) Conditional ??CrossCallReturnLabel_370
          CFI (cfiCond601) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond601) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond601) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond601) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond601) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond601) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond601) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond601) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond601) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond601) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond601) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond601) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond601) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond601) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond601) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond601) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond601) CFA_SP SP+-2
          CFI (cfiCond601) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond602 Using cfiCommon0
          CFI (cfiCond602) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond602) Conditional ??CrossCallReturnLabel_371
          CFI (cfiCond602) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond602) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond602) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond602) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond602) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond602) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond602) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond602) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond602) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond602) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond602) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond602) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond602) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond602) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond602) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond602) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond602) CFA_SP SP+-2
          CFI (cfiCond602) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker603 Using cfiCommon1
          CFI (cfiPicker603) NoFunction
          CFI (cfiPicker603) Picker
        INC       DPTR
          CFI EndBlock cfiCond597
          CFI EndBlock cfiCond598
          CFI EndBlock cfiCond599
          CFI EndBlock cfiCond600
          CFI EndBlock cfiCond601
          CFI EndBlock cfiCond602
          CFI EndBlock cfiPicker603
        REQUIRE ??Subroutine166_0
        ; // Fall through to label ??Subroutine166_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine166_0:
          CFI Block cfiCond604 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI Conditional ??CrossCallReturnLabel_365
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond605 Using cfiCommon0
          CFI (cfiCond605) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond605) Conditional ??CrossCallReturnLabel_366
          CFI (cfiCond605) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond605) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond605) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond605) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond605) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond605) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond605) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond605) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond605) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond605) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond605) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond605) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond605) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond605) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond605) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond605) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond605) CFA_SP SP+-2
          CFI (cfiCond605) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond606 Using cfiCommon0
          CFI (cfiCond606) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond606) Conditional ??CrossCallReturnLabel_367
          CFI (cfiCond606) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond606) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond606) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond606) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond606) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond606) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond606) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond606) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond606) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond606) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond606) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond606) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond606) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond606) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond606) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond606) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond606) CFA_SP SP+-2
          CFI (cfiCond606) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond607 Using cfiCommon0
          CFI (cfiCond607) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond607) Conditional ??CrossCallReturnLabel_368
          CFI (cfiCond607) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond607) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond607) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond607) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond607) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond607) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond607) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond607) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond607) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond607) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond607) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond607) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond607) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond607) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond607) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond607) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond607) CFA_SP SP+-2
          CFI (cfiCond607) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond608 Using cfiCommon0
          CFI (cfiCond608) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond608) Conditional ??CrossCallReturnLabel_369
          CFI (cfiCond608) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond608) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond608) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond608) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond608) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond608) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond608) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond608) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond608) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond608) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond608) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond608) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond608) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond608) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond608) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond608) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond608) CFA_SP SP+-2
          CFI (cfiCond608) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond609 Using cfiCommon0
          CFI (cfiCond609) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond609) Conditional ??CrossCallReturnLabel_370
          CFI (cfiCond609) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond609) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond609) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond609) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond609) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond609) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond609) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond609) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond609) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond609) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond609) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond609) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond609) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond609) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond609) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond609) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond609) CFA_SP SP+-2
          CFI (cfiCond609) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond610 Using cfiCommon0
          CFI (cfiCond610) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond610) Conditional ??CrossCallReturnLabel_371
          CFI (cfiCond610) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond610) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond610) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond610) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond610) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond610) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond610) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond610) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond610) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond610) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond610) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond610) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond610) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond610) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond610) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond610) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond610) CFA_SP SP+-2
          CFI (cfiCond610) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker611 Using cfiCommon1
          CFI (cfiPicker611) NoFunction
          CFI (cfiPicker611) Picker
        LCALL     ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_407:
        MOV       DPL,R4
        MOV       DPH,R5
        RET
          CFI EndBlock cfiCond604
          CFI EndBlock cfiCond605
          CFI EndBlock cfiCond606
          CFI EndBlock cfiCond607
          CFI EndBlock cfiCond608
          CFI EndBlock cfiCond609
          CFI EndBlock cfiCond610
          CFI EndBlock cfiPicker611

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine102:
          CFI Block cfiCond612 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI Conditional ??CrossCallReturnLabel_407, ??CrossCallReturnLabel_370
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond613 Using cfiCommon0
          CFI (cfiCond613) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond613) Conditional ??CrossCallReturnLabel_407, ??CrossCallReturnLabel_371
          CFI (cfiCond613) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond613) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond613) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond613) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond613) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond613) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond613) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond613) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond613) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond613) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond613) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond613) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond613) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond613) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond613) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond613) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond613) CFA_SP SP+-4
          CFI (cfiCond613) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond614 Using cfiCommon0
          CFI (cfiCond614) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond614) Conditional ??CrossCallReturnLabel_407, ??CrossCallReturnLabel_369
          CFI (cfiCond614) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond614) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond614) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond614) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond614) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond614) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond614) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond614) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond614) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond614) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond614) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond614) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond614) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond614) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond614) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond614) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond614) CFA_SP SP+-4
          CFI (cfiCond614) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond615 Using cfiCommon0
          CFI (cfiCond615) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond615) Conditional ??CrossCallReturnLabel_407, ??CrossCallReturnLabel_368
          CFI (cfiCond615) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond615) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond615) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond615) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond615) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond615) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond615) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond615) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond615) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond615) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond615) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond615) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond615) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond615) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond615) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond615) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond615) CFA_SP SP+-4
          CFI (cfiCond615) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond616 Using cfiCommon0
          CFI (cfiCond616) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond616) Conditional ??CrossCallReturnLabel_407, ??CrossCallReturnLabel_367
          CFI (cfiCond616) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond616) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond616) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond616) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond616) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond616) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond616) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond616) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond616) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond616) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond616) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond616) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond616) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond616) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond616) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond616) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond616) CFA_SP SP+-4
          CFI (cfiCond616) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond617 Using cfiCommon0
          CFI (cfiCond617) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond617) Conditional ??CrossCallReturnLabel_407, ??CrossCallReturnLabel_366
          CFI (cfiCond617) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond617) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond617) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond617) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond617) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond617) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond617) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond617) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond617) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond617) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond617) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond617) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond617) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond617) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond617) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond617) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond617) CFA_SP SP+-4
          CFI (cfiCond617) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond618 Using cfiCommon0
          CFI (cfiCond618) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond618) Conditional ??CrossCallReturnLabel_407, ??CrossCallReturnLabel_365
          CFI (cfiCond618) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond618) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond618) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond618) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond618) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond618) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond618) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond618) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond618) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond618) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond618) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond618) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond618) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond618) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond618) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond618) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond618) CFA_SP SP+-4
          CFI (cfiCond618) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond619 Using cfiCommon0
          CFI (cfiCond619) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond619) Conditional ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_404
          CFI (cfiCond619) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond619) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond619) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond619) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond619) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond619) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond619) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond619) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond619) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond619) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond619) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond619) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond619) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond619) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond619) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond619) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond619) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond619) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond619) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond619) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond619) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond619) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond619) CFA_SP SP+-4
          CFI (cfiCond619) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond620 Using cfiCommon0
          CFI (cfiCond620) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond620) Conditional ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_405
          CFI (cfiCond620) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond620) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond620) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond620) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond620) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond620) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond620) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond620) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond620) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond620) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond620) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond620) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond620) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond620) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond620) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond620) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond620) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond620) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond620) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond620) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond620) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond620) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond620) CFA_SP SP+-4
          CFI (cfiCond620) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond621 Using cfiCommon0
          CFI (cfiCond621) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond621) Conditional ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_403
          CFI (cfiCond621) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond621) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond621) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond621) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond621) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond621) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond621) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond621) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond621) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond621) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond621) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond621) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond621) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond621) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond621) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond621) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond621) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond621) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond621) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond621) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond621) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond621) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond621) CFA_SP SP+-4
          CFI (cfiCond621) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker622 Using cfiCommon1
          CFI (cfiPicker622) NoFunction
          CFI (cfiPicker622) Picker
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond612
          CFI EndBlock cfiCond613
          CFI EndBlock cfiCond614
          CFI EndBlock cfiCond615
          CFI EndBlock cfiCond616
          CFI EndBlock cfiCond617
          CFI EndBlock cfiCond618
          CFI EndBlock cfiCond619
          CFI EndBlock cfiCond620
          CFI EndBlock cfiCond621
          CFI EndBlock cfiPicker622
        REQUIRE ??Subroutine167_0
        ; // Fall through to label ??Subroutine167_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine167_0:
          CFI Block cfiCond623 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI Conditional ??CrossCallReturnLabel_406
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond624 Using cfiCommon0
          CFI (cfiCond624) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond624) Conditional ??CrossCallReturnLabel_407, ??CrossCallReturnLabel_370
          CFI (cfiCond624) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond624) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond624) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond624) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond624) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond624) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond624) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond624) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond624) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond624) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond624) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond624) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond624) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond624) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond624) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond624) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond624) CFA_SP SP+-4
          CFI (cfiCond624) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond625 Using cfiCommon0
          CFI (cfiCond625) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond625) Conditional ??CrossCallReturnLabel_407, ??CrossCallReturnLabel_371
          CFI (cfiCond625) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond625) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond625) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond625) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond625) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond625) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond625) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond625) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond625) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond625) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond625) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond625) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond625) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond625) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond625) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond625) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond625) CFA_SP SP+-4
          CFI (cfiCond625) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond626 Using cfiCommon0
          CFI (cfiCond626) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond626) Conditional ??CrossCallReturnLabel_407, ??CrossCallReturnLabel_369
          CFI (cfiCond626) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond626) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond626) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond626) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond626) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond626) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond626) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond626) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond626) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond626) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond626) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond626) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond626) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond626) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond626) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond626) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond626) CFA_SP SP+-4
          CFI (cfiCond626) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond627 Using cfiCommon0
          CFI (cfiCond627) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond627) Conditional ??CrossCallReturnLabel_407, ??CrossCallReturnLabel_368
          CFI (cfiCond627) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond627) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond627) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond627) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond627) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond627) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond627) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond627) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond627) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond627) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond627) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond627) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond627) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond627) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond627) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond627) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond627) CFA_SP SP+-4
          CFI (cfiCond627) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond628 Using cfiCommon0
          CFI (cfiCond628) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond628) Conditional ??CrossCallReturnLabel_407, ??CrossCallReturnLabel_367
          CFI (cfiCond628) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond628) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond628) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond628) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond628) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond628) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond628) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond628) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond628) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond628) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond628) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond628) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond628) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond628) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond628) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond628) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond628) CFA_SP SP+-4
          CFI (cfiCond628) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond629 Using cfiCommon0
          CFI (cfiCond629) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond629) Conditional ??CrossCallReturnLabel_407, ??CrossCallReturnLabel_366
          CFI (cfiCond629) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond629) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond629) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond629) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond629) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond629) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond629) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond629) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond629) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond629) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond629) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond629) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond629) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond629) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond629) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond629) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond629) CFA_SP SP+-4
          CFI (cfiCond629) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond630 Using cfiCommon0
          CFI (cfiCond630) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond630) Conditional ??CrossCallReturnLabel_407, ??CrossCallReturnLabel_365
          CFI (cfiCond630) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond630) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond630) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond630) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond630) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond630) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond630) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond630) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond630) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond630) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond630) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond630) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond630) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond630) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond630) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond630) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond630) CFA_SP SP+-4
          CFI (cfiCond630) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond631 Using cfiCommon0
          CFI (cfiCond631) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond631) Conditional ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_404
          CFI (cfiCond631) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond631) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond631) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond631) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond631) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond631) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond631) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond631) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond631) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond631) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond631) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond631) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond631) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond631) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond631) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond631) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond631) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond631) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond631) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond631) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond631) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond631) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond631) CFA_SP SP+-4
          CFI (cfiCond631) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond632 Using cfiCommon0
          CFI (cfiCond632) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond632) Conditional ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_405
          CFI (cfiCond632) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond632) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond632) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond632) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond632) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond632) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond632) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond632) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond632) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond632) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond632) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond632) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond632) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond632) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond632) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond632) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond632) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond632) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond632) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond632) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond632) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond632) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond632) CFA_SP SP+-4
          CFI (cfiCond632) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond633 Using cfiCommon0
          CFI (cfiCond633) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond633) Conditional ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_403
          CFI (cfiCond633) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond633) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond633) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond633) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond633) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond633) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond633) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond633) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond633) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond633) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond633) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond633) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond633) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond633) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond633) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond633) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond633) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond633) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond633) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond633) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond633) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond633) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond633) CFA_SP SP+-4
          CFI (cfiCond633) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker634 Using cfiCommon1
          CFI (cfiPicker634) NoFunction
          CFI (cfiPicker634) Picker
        MOVX      A,@DPTR
        MOV       ?V0,A
        CLR       A
        MOV       ?V1,A
        MOV       ?V2,A
        MOV       ?V3,A
        RET
          CFI EndBlock cfiCond623
          CFI EndBlock cfiCond624
          CFI EndBlock cfiCond625
          CFI EndBlock cfiCond626
          CFI EndBlock cfiCond627
          CFI EndBlock cfiCond628
          CFI EndBlock cfiCond629
          CFI EndBlock cfiCond630
          CFI EndBlock cfiCond631
          CFI EndBlock cfiCond632
          CFI EndBlock cfiCond633
          CFI EndBlock cfiPicker634
// 1951 
// 1952 /*********************************************************************
// 1953  * @fn      zclClosures_ProcessInDoorLockClearYearDayScheduleRsp
// 1954  *
// 1955  * @brief   Process in the received Clear Year Day Schedule Response cmd
// 1956  *
// 1957  * @param   pInMsg - pointer to the incoming message
// 1958  * @param   pCBs - pointer to the application callbacks
// 1959  *
// 1960  * @return  ZStatus_t
// 1961  */
// 1962 static ZStatus_t zclClosures_ProcessInDoorLockClearYearDayScheduleRsp( zclIncoming_t *pInMsg,
// 1963                                                                        zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1964 {
// 1965  if ( pCBs->pfnDoorLockClearYearDayScheduleRsp )
// 1966  {
// 1967    return ( pCBs->pfnDoorLockClearYearDayScheduleRsp( pInMsg, pInMsg->pData[0] ) );
// 1968  }
// 1969 
// 1970  return ( ZFailure );
// 1971 }
// 1972 
// 1973 /*********************************************************************
// 1974  * @fn      zclClosures_ProcessInDoorLockSetHolidayScheduleRsp
// 1975  *
// 1976  * @brief   Process in the received Set Holiday Schedule Response cmd
// 1977  *
// 1978  * @param   pInMsg - pointer to the incoming message
// 1979  * @param   pCBs - pointer to the application callbacks
// 1980  *
// 1981  * @return  ZStatus_t
// 1982  */
// 1983 static ZStatus_t zclClosures_ProcessInDoorLockSetHolidayScheduleRsp( zclIncoming_t *pInMsg,
// 1984                                                                      zclClosures_DoorLockAppCallbacks_t *pCBs )
// 1985 {
// 1986  if ( pCBs->pfnDoorLockSetHolidayScheduleRsp )
// 1987  {
// 1988    return ( pCBs->pfnDoorLockSetHolidayScheduleRsp( pInMsg, pInMsg->pData[0] ) );
// 1989  }
// 1990 
// 1991  return ( ZFailure );
// 1992 }
// 1993 
// 1994 /*********************************************************************
// 1995  * @fn      zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
// 1996  *
// 1997  * @brief   Process in the received Get Holiday Schedule Response cmd
// 1998  *
// 1999  * @param   pInMsg - pointer to the incoming message
// 2000  * @param   pCBs - pointer to the application callbacks
// 2001  *
// 2002  * @return  ZStatus_t
// 2003  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2004 static ZStatus_t zclClosures_ProcessInDoorLockGetHolidayScheduleRsp( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockGetHolidayScheduleRsp:
          CFI Block cfiBlock635 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
        CODE
// 2005                                                                      zclClosures_DoorLockAppCallbacks_t *pCBs )
// 2006 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 11
        MOV       A,#-0xb
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
// 2007  if ( pCBs->pfnDoorLockGetHolidayScheduleRsp )
        MOV       A,R4
        ADD       A,#0x54
        MOV       R6,A
        CLR       A
        ADDC      A,R5
        MOV       R7,A
        MOV       DPL,R6
        LCALL     ??Subroutine180_0 & 0xFFFF
??CrossCallReturnLabel_418:
        JNZ       $+5
        LJMP      ??zclClosures_ProcessInDoorLockGetHolidaySchedu_1 & 0xFFFF
// 2008  {
// 2009    zclDoorLockGetHolidayScheduleRsp_t cmd;
// 2010 
// 2011    cmd.holidayScheduleID = pInMsg->pData[0];
        LCALL     ?Subroutine30 & 0xFFFF
// 2012    cmd.status = pInMsg->pData[1];
??CrossCallReturnLabel_78:
        MOV       DPH,A
        MOV       DPL,R4
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R4
        MOVX      @DPTR,A
// 2013 
// 2014    if ( cmd.status == ZCL_STATUS_SUCCESS )
        JZ        $+5
        LJMP      ??zclClosures_ProcessInDoorLockGetHolidaySchedu_2 & 0xFFFF
// 2015    {
// 2016      cmd.zigBeeLocalStartTime = BUILD_UINT32( pInMsg->pData[2], pInMsg->pData[3], pInMsg->pData[4], pInMsg->pData[5] );
        LCALL     ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_357:
        LCALL     ??Subroutine166_0 & 0xFFFF
??CrossCallReturnLabel_365:
        LCALL     ??Subroutine156_0 & 0xFFFF
??CrossCallReturnLabel_322:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine151_0 & 0xFFFF
??CrossCallReturnLabel_310:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine172_0 & 0xFFFF
??CrossCallReturnLabel_376:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       R0,#?V0
        LCALL     ?L_MOV_TO_X
// 2017      cmd.zigBeeLocalEndTime = BUILD_UINT32( pInMsg->pData[6], pInMsg->pData[7], pInMsg->pData[8], pInMsg->pData[9] );
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine162_0 & 0xFFFF
??CrossCallReturnLabel_369:
        LCALL     ??Subroutine145_0 & 0xFFFF
??CrossCallReturnLabel_304:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine147_0 & 0xFFFF
??CrossCallReturnLabel_315:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine168_0 & 0xFFFF
??CrossCallReturnLabel_381:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        MOV       R0,#?V0
        LCALL     ?L_MOV_TO_X
// 2018      cmd.operatingModeDuringHoliday = pInMsg->pData[10];
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2019    }
// 2020 
// 2021    return ( pCBs->pfnDoorLockGetHolidayScheduleRsp( pInMsg, &cmd ) );
??zclClosures_ProcessInDoorLockGetHolidaySchedu_2:
        ; Setup parameters for indirect call
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine160_0 & 0xFFFF
// 2022  }
??CrossCallReturnLabel_341:
        LCALL     ?CALL_IND
        SJMP      ??zclClosures_ProcessInDoorLockGetHolidaySchedu_3
// 2023 
// 2024  return ( ZFailure );
??zclClosures_ProcessInDoorLockGetHolidaySchedu_1:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockGetHolidaySchedu_3:
        LJMP      ?Subroutine7 & 0xFFFF
// 2025 }
          CFI EndBlock cfiBlock635

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine30:
          CFI Block cfiCond636 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI Conditional ??CrossCallReturnLabel_77
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond637 Using cfiCommon0
          CFI (cfiCond637) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond637) Conditional ??CrossCallReturnLabel_78
          CFI (cfiCond637) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond637) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond637) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond637) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond637) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond637) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond637) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond637) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond637) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond637) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond637) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond637) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond637) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond637) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond637) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond637) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond637) CFA_SP SP+-2
          CFI (cfiCond637) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker638 Using cfiCommon1
          CFI (cfiPicker638) NoFunction
          CFI (cfiPicker638) Picker
        LCALL     ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_222:
        RET
          CFI EndBlock cfiCond636
          CFI EndBlock cfiCond637
          CFI EndBlock cfiPicker638

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine100:
          CFI Block cfiCond639 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI Conditional ??CrossCallReturnLabel_221, ??CrossCallReturnLabel_57
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond640 Using cfiCommon0
          CFI (cfiCond640) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond640) Conditional ??CrossCallReturnLabel_221, ??CrossCallReturnLabel_58
          CFI (cfiCond640) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond640) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond640) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond640) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond640) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond640) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond640) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond640) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond640) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond640) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond640) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond640) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond640) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond640) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond640) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond640) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond640) CFA_SP SP+-4
          CFI (cfiCond640) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond641 Using cfiCommon0
          CFI (cfiCond641) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond641) Conditional ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_77
          CFI (cfiCond641) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond641) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond641) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond641) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond641) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond641) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond641) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond641) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond641) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond641) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond641) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond641) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond641) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond641) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond641) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond641) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond641) CFA_SP SP+-4
          CFI (cfiCond641) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond642 Using cfiCommon0
          CFI (cfiCond642) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond642) Conditional ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_78
          CFI (cfiCond642) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond642) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond642) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond642) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond642) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond642) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond642) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond642) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond642) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond642) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond642) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond642) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond642) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond642) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond642) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond642) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond642) CFA_SP SP+-4
          CFI (cfiCond642) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker643 Using cfiCommon1
          CFI (cfiPicker643) NoFunction
          CFI (cfiPicker643) Picker
        MOV       A,R2
        ADD       A,#0x8
        MOV       R0,A
        CLR       A
        ADDC      A,R3
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPH,A
        MOV       DPL,R4
        LCALL     ?Subroutine138 & 0xFFFF
??CrossCallReturnLabel_281:
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond639
          CFI EndBlock cfiCond640
          CFI EndBlock cfiCond641
          CFI EndBlock cfiCond642
          CFI EndBlock cfiPicker643

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine15:
          CFI Block cfiCond644 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI Conditional ??CrossCallReturnLabel_382
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond645 Using cfiCommon0
          CFI (cfiCond645) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond645) Conditional ??CrossCallReturnLabel_383
          CFI (cfiCond645) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond645) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond645) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond645) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond645) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond645) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond645) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond645) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond645) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond645) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond645) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond645) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond645) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond645) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond645) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond645) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond645) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond645) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond645) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond645) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond645) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond645) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond645) CFA_SP SP+-2
          CFI (cfiCond645) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker646 Using cfiCommon1
          CFI (cfiPicker646) NoFunction
          CFI (cfiPicker646) Picker
        INC       DPTR
          CFI EndBlock cfiCond644
          CFI EndBlock cfiCond645
          CFI EndBlock cfiPicker646
        REQUIRE ??Subroutine168_0
        ; // Fall through to label ??Subroutine168_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine168_0:
          CFI Block cfiCond647 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI Conditional ??CrossCallReturnLabel_381
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond648 Using cfiCommon0
          CFI (cfiCond648) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond648) Conditional ??CrossCallReturnLabel_382
          CFI (cfiCond648) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond648) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond648) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond648) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond648) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond648) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond648) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond648) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond648) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond648) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond648) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond648) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond648) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond648) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond648) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond648) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond648) CFA_SP SP+-2
          CFI (cfiCond648) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond649 Using cfiCommon0
          CFI (cfiCond649) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond649) Conditional ??CrossCallReturnLabel_383
          CFI (cfiCond649) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond649) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond649) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond649) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond649) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond649) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond649) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond649) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond649) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond649) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond649) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond649) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond649) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond649) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond649) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond649) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond649) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond649) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond649) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond649) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond649) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond649) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond649) CFA_SP SP+-2
          CFI (cfiCond649) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker650 Using cfiCommon1
          CFI (cfiPicker650) NoFunction
          CFI (cfiPicker650) Picker
        INC       DPTR
          CFI EndBlock cfiCond647
          CFI EndBlock cfiCond648
          CFI EndBlock cfiCond649
          CFI EndBlock cfiPicker650
        REQUIRE ??Subroutine169_0
        ; // Fall through to label ??Subroutine169_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine169_0:
          CFI Block cfiCond651 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI Conditional ??CrossCallReturnLabel_379
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond652 Using cfiCommon0
          CFI (cfiCond652) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond652) Conditional ??CrossCallReturnLabel_380
          CFI (cfiCond652) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond652) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond652) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond652) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond652) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond652) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond652) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond652) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond652) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond652) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond652) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond652) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond652) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond652) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond652) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond652) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond652) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond652) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond652) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond652) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond652) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond652) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond652) CFA_SP SP+-2
          CFI (cfiCond652) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond653 Using cfiCommon0
          CFI (cfiCond653) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond653) Conditional ??CrossCallReturnLabel_381
          CFI (cfiCond653) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond653) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond653) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond653) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond653) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond653) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond653) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond653) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond653) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond653) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond653) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond653) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond653) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond653) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond653) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond653) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond653) CFA_SP SP+-2
          CFI (cfiCond653) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond654 Using cfiCommon0
          CFI (cfiCond654) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond654) Conditional ??CrossCallReturnLabel_382
          CFI (cfiCond654) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond654) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond654) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond654) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond654) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond654) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond654) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond654) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond654) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond654) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond654) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond654) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond654) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond654) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond654) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond654) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond654) CFA_SP SP+-2
          CFI (cfiCond654) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond655 Using cfiCommon0
          CFI (cfiCond655) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond655) Conditional ??CrossCallReturnLabel_383
          CFI (cfiCond655) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond655) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond655) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond655) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond655) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond655) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond655) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond655) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond655) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond655) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond655) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond655) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond655) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond655) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond655) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond655) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond655) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond655) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond655) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond655) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond655) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond655) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond655) CFA_SP SP+-2
          CFI (cfiCond655) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker656 Using cfiCommon1
          CFI (cfiPicker656) NoFunction
          CFI (cfiPicker656) Picker
        INC       DPTR
          CFI EndBlock cfiCond651
          CFI EndBlock cfiCond652
          CFI EndBlock cfiCond653
          CFI EndBlock cfiCond654
          CFI EndBlock cfiCond655
          CFI EndBlock cfiPicker656
        REQUIRE ??Subroutine170_0
        ; // Fall through to label ??Subroutine170_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine170_0:
          CFI Block cfiCond657 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI Conditional ??CrossCallReturnLabel_378
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond658 Using cfiCommon0
          CFI (cfiCond658) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond658) Conditional ??CrossCallReturnLabel_379
          CFI (cfiCond658) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond658) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond658) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond658) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond658) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond658) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond658) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond658) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond658) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond658) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond658) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond658) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond658) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond658) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond658) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond658) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond658) CFA_SP SP+-2
          CFI (cfiCond658) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond659 Using cfiCommon0
          CFI (cfiCond659) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond659) Conditional ??CrossCallReturnLabel_380
          CFI (cfiCond659) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond659) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond659) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond659) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond659) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond659) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond659) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond659) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond659) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond659) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond659) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond659) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond659) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond659) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond659) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond659) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond659) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond659) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond659) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond659) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond659) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond659) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond659) CFA_SP SP+-2
          CFI (cfiCond659) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond660 Using cfiCommon0
          CFI (cfiCond660) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond660) Conditional ??CrossCallReturnLabel_381
          CFI (cfiCond660) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond660) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond660) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond660) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond660) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond660) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond660) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond660) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond660) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond660) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond660) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond660) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond660) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond660) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond660) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond660) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond660) CFA_SP SP+-2
          CFI (cfiCond660) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond661 Using cfiCommon0
          CFI (cfiCond661) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond661) Conditional ??CrossCallReturnLabel_382
          CFI (cfiCond661) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond661) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond661) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond661) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond661) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond661) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond661) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond661) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond661) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond661) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond661) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond661) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond661) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond661) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond661) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond661) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond661) CFA_SP SP+-2
          CFI (cfiCond661) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond662 Using cfiCommon0
          CFI (cfiCond662) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond662) Conditional ??CrossCallReturnLabel_383
          CFI (cfiCond662) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond662) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond662) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond662) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond662) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond662) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond662) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond662) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond662) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond662) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond662) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond662) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond662) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond662) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond662) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond662) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond662) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond662) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond662) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond662) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond662) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond662) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond662) CFA_SP SP+-2
          CFI (cfiCond662) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker663 Using cfiCommon1
          CFI (cfiPicker663) NoFunction
          CFI (cfiPicker663) Picker
        INC       DPTR
          CFI EndBlock cfiCond657
          CFI EndBlock cfiCond658
          CFI EndBlock cfiCond659
          CFI EndBlock cfiCond660
          CFI EndBlock cfiCond661
          CFI EndBlock cfiCond662
          CFI EndBlock cfiPicker663
        REQUIRE ??Subroutine171_0
        ; // Fall through to label ??Subroutine171_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine171_0:
          CFI Block cfiCond664 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI Conditional ??CrossCallReturnLabel_377
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond665 Using cfiCommon0
          CFI (cfiCond665) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond665) Conditional ??CrossCallReturnLabel_378
          CFI (cfiCond665) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond665) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond665) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond665) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond665) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond665) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond665) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond665) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond665) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond665) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond665) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond665) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond665) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond665) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond665) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond665) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond665) CFA_SP SP+-2
          CFI (cfiCond665) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond666 Using cfiCommon0
          CFI (cfiCond666) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond666) Conditional ??CrossCallReturnLabel_379
          CFI (cfiCond666) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond666) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond666) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond666) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond666) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond666) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond666) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond666) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond666) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond666) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond666) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond666) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond666) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond666) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond666) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond666) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond666) CFA_SP SP+-2
          CFI (cfiCond666) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond667 Using cfiCommon0
          CFI (cfiCond667) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond667) Conditional ??CrossCallReturnLabel_380
          CFI (cfiCond667) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond667) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond667) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond667) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond667) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond667) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond667) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond667) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond667) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond667) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond667) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond667) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond667) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond667) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond667) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond667) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond667) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond667) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond667) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond667) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond667) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond667) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond667) CFA_SP SP+-2
          CFI (cfiCond667) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond668 Using cfiCommon0
          CFI (cfiCond668) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond668) Conditional ??CrossCallReturnLabel_381
          CFI (cfiCond668) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond668) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond668) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond668) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond668) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond668) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond668) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond668) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond668) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond668) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond668) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond668) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond668) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond668) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond668) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond668) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond668) CFA_SP SP+-2
          CFI (cfiCond668) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond669 Using cfiCommon0
          CFI (cfiCond669) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond669) Conditional ??CrossCallReturnLabel_382
          CFI (cfiCond669) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond669) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond669) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond669) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond669) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond669) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond669) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond669) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond669) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond669) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond669) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond669) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond669) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond669) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond669) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond669) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond669) CFA_SP SP+-2
          CFI (cfiCond669) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond670 Using cfiCommon0
          CFI (cfiCond670) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond670) Conditional ??CrossCallReturnLabel_383
          CFI (cfiCond670) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond670) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond670) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond670) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond670) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond670) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond670) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond670) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond670) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond670) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond670) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond670) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond670) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond670) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond670) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond670) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond670) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond670) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond670) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond670) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond670) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond670) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond670) CFA_SP SP+-2
          CFI (cfiCond670) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker671 Using cfiCommon1
          CFI (cfiPicker671) NoFunction
          CFI (cfiPicker671) Picker
        INC       DPTR
          CFI EndBlock cfiCond664
          CFI EndBlock cfiCond665
          CFI EndBlock cfiCond666
          CFI EndBlock cfiCond667
          CFI EndBlock cfiCond668
          CFI EndBlock cfiCond669
          CFI EndBlock cfiCond670
          CFI EndBlock cfiPicker671
        REQUIRE ??Subroutine172_0
        ; // Fall through to label ??Subroutine172_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine172_0:
          CFI Block cfiCond672 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI Conditional ??CrossCallReturnLabel_375
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond673 Using cfiCommon0
          CFI (cfiCond673) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond673) Conditional ??CrossCallReturnLabel_376
          CFI (cfiCond673) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond673) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond673) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond673) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond673) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond673) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond673) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond673) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond673) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond673) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond673) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond673) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond673) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond673) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond673) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond673) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond673) CFA_SP SP+-2
          CFI (cfiCond673) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond674 Using cfiCommon0
          CFI (cfiCond674) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond674) Conditional ??CrossCallReturnLabel_377
          CFI (cfiCond674) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond674) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond674) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond674) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond674) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond674) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond674) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond674) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond674) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond674) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond674) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond674) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond674) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond674) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond674) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond674) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond674) CFA_SP SP+-2
          CFI (cfiCond674) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond675 Using cfiCommon0
          CFI (cfiCond675) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond675) Conditional ??CrossCallReturnLabel_378
          CFI (cfiCond675) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond675) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond675) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond675) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond675) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond675) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond675) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond675) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond675) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond675) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond675) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond675) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond675) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond675) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond675) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond675) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond675) CFA_SP SP+-2
          CFI (cfiCond675) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond676 Using cfiCommon0
          CFI (cfiCond676) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond676) Conditional ??CrossCallReturnLabel_379
          CFI (cfiCond676) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond676) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond676) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond676) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond676) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond676) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond676) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond676) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond676) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond676) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond676) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond676) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond676) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond676) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond676) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond676) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond676) CFA_SP SP+-2
          CFI (cfiCond676) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond677 Using cfiCommon0
          CFI (cfiCond677) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond677) Conditional ??CrossCallReturnLabel_380
          CFI (cfiCond677) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond677) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond677) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond677) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond677) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond677) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond677) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond677) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond677) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond677) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond677) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond677) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond677) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond677) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond677) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond677) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond677) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond677) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond677) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond677) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond677) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond677) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond677) CFA_SP SP+-2
          CFI (cfiCond677) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond678 Using cfiCommon0
          CFI (cfiCond678) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond678) Conditional ??CrossCallReturnLabel_381
          CFI (cfiCond678) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond678) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond678) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond678) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond678) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond678) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond678) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond678) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond678) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond678) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond678) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond678) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond678) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond678) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond678) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond678) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond678) CFA_SP SP+-2
          CFI (cfiCond678) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond679 Using cfiCommon0
          CFI (cfiCond679) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond679) Conditional ??CrossCallReturnLabel_382
          CFI (cfiCond679) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond679) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond679) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond679) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond679) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond679) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond679) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond679) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond679) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond679) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond679) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond679) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond679) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond679) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond679) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond679) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond679) CFA_SP SP+-2
          CFI (cfiCond679) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond680 Using cfiCommon0
          CFI (cfiCond680) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond680) Conditional ??CrossCallReturnLabel_383
          CFI (cfiCond680) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond680) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond680) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond680) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond680) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond680) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond680) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond680) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond680) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond680) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond680) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond680) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond680) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond680) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond680) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond680) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond680) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond680) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond680) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond680) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond680) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond680) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond680) CFA_SP SP+-2
          CFI (cfiCond680) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker681 Using cfiCommon1
          CFI (cfiPicker681) NoFunction
          CFI (cfiPicker681) Picker
        INC       DPTR
          CFI EndBlock cfiCond672
          CFI EndBlock cfiCond673
          CFI EndBlock cfiCond674
          CFI EndBlock cfiCond675
          CFI EndBlock cfiCond676
          CFI EndBlock cfiCond677
          CFI EndBlock cfiCond678
          CFI EndBlock cfiCond679
          CFI EndBlock cfiCond680
          CFI EndBlock cfiPicker681
        REQUIRE ??Subroutine173_0
        ; // Fall through to label ??Subroutine173_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine173_0:
          CFI Block cfiCond682 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI Conditional ??CrossCallReturnLabel_374
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond683 Using cfiCommon0
          CFI (cfiCond683) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond683) Conditional ??CrossCallReturnLabel_375
          CFI (cfiCond683) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond683) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond683) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond683) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond683) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond683) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond683) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond683) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond683) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond683) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond683) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond683) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond683) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond683) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond683) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond683) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond683) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond683) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond683) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond683) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond683) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond683) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond683) CFA_SP SP+-2
          CFI (cfiCond683) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond684 Using cfiCommon0
          CFI (cfiCond684) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond684) Conditional ??CrossCallReturnLabel_376
          CFI (cfiCond684) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond684) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond684) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond684) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond684) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond684) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond684) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond684) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond684) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond684) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond684) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond684) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond684) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond684) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond684) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond684) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond684) CFA_SP SP+-2
          CFI (cfiCond684) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond685 Using cfiCommon0
          CFI (cfiCond685) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond685) Conditional ??CrossCallReturnLabel_377
          CFI (cfiCond685) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond685) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond685) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond685) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond685) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond685) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond685) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond685) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond685) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond685) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond685) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond685) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond685) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond685) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond685) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond685) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond685) CFA_SP SP+-2
          CFI (cfiCond685) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond686 Using cfiCommon0
          CFI (cfiCond686) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond686) Conditional ??CrossCallReturnLabel_378
          CFI (cfiCond686) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond686) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond686) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond686) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond686) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond686) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond686) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond686) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond686) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond686) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond686) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond686) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond686) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond686) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond686) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond686) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond686) CFA_SP SP+-2
          CFI (cfiCond686) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond687 Using cfiCommon0
          CFI (cfiCond687) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond687) Conditional ??CrossCallReturnLabel_379
          CFI (cfiCond687) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond687) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond687) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond687) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond687) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond687) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond687) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond687) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond687) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond687) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond687) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond687) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond687) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond687) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond687) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond687) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond687) CFA_SP SP+-2
          CFI (cfiCond687) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond688 Using cfiCommon0
          CFI (cfiCond688) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond688) Conditional ??CrossCallReturnLabel_380
          CFI (cfiCond688) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond688) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond688) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond688) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond688) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond688) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond688) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond688) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond688) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond688) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond688) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond688) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond688) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond688) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond688) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond688) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond688) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond688) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond688) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond688) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond688) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond688) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond688) CFA_SP SP+-2
          CFI (cfiCond688) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond689 Using cfiCommon0
          CFI (cfiCond689) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond689) Conditional ??CrossCallReturnLabel_381
          CFI (cfiCond689) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond689) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond689) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond689) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond689) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond689) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond689) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond689) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond689) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond689) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond689) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond689) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond689) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond689) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond689) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond689) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond689) CFA_SP SP+-2
          CFI (cfiCond689) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond690 Using cfiCommon0
          CFI (cfiCond690) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond690) Conditional ??CrossCallReturnLabel_382
          CFI (cfiCond690) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond690) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond690) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond690) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond690) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond690) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond690) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond690) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond690) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond690) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond690) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond690) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond690) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond690) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond690) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond690) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond690) CFA_SP SP+-2
          CFI (cfiCond690) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond691 Using cfiCommon0
          CFI (cfiCond691) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond691) Conditional ??CrossCallReturnLabel_383
          CFI (cfiCond691) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond691) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond691) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond691) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond691) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond691) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond691) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond691) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond691) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond691) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond691) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond691) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond691) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond691) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond691) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond691) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond691) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond691) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond691) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond691) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond691) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond691) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond691) CFA_SP SP+-2
          CFI (cfiCond691) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker692 Using cfiCommon1
          CFI (cfiPicker692) NoFunction
          CFI (cfiPicker692) Picker
        INC       DPTR
          CFI EndBlock cfiCond682
          CFI EndBlock cfiCond683
          CFI EndBlock cfiCond684
          CFI EndBlock cfiCond685
          CFI EndBlock cfiCond686
          CFI EndBlock cfiCond687
          CFI EndBlock cfiCond688
          CFI EndBlock cfiCond689
          CFI EndBlock cfiCond690
          CFI EndBlock cfiCond691
          CFI EndBlock cfiPicker692
        REQUIRE ??Subroutine174_0
        ; // Fall through to label ??Subroutine174_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine174_0:
          CFI Block cfiCond693 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI Conditional ??CrossCallReturnLabel_373
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond694 Using cfiCommon0
          CFI (cfiCond694) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond694) Conditional ??CrossCallReturnLabel_374
          CFI (cfiCond694) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond694) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond694) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond694) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond694) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond694) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond694) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond694) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond694) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond694) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond694) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond694) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond694) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond694) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond694) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond694) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond694) CFA_SP SP+-2
          CFI (cfiCond694) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond695 Using cfiCommon0
          CFI (cfiCond695) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond695) Conditional ??CrossCallReturnLabel_375
          CFI (cfiCond695) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond695) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond695) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond695) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond695) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond695) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond695) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond695) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond695) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond695) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond695) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond695) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond695) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond695) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond695) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond695) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond695) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond695) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond695) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond695) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond695) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond695) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond695) CFA_SP SP+-2
          CFI (cfiCond695) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond696 Using cfiCommon0
          CFI (cfiCond696) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond696) Conditional ??CrossCallReturnLabel_376
          CFI (cfiCond696) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond696) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond696) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond696) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond696) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond696) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond696) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond696) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond696) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond696) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond696) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond696) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond696) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond696) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond696) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond696) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond696) CFA_SP SP+-2
          CFI (cfiCond696) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond697 Using cfiCommon0
          CFI (cfiCond697) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond697) Conditional ??CrossCallReturnLabel_377
          CFI (cfiCond697) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond697) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond697) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond697) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond697) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond697) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond697) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond697) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond697) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond697) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond697) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond697) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond697) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond697) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond697) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond697) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond697) CFA_SP SP+-2
          CFI (cfiCond697) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond698 Using cfiCommon0
          CFI (cfiCond698) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond698) Conditional ??CrossCallReturnLabel_378
          CFI (cfiCond698) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond698) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond698) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond698) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond698) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond698) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond698) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond698) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond698) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond698) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond698) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond698) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond698) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond698) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond698) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond698) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond698) CFA_SP SP+-2
          CFI (cfiCond698) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond699 Using cfiCommon0
          CFI (cfiCond699) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond699) Conditional ??CrossCallReturnLabel_379
          CFI (cfiCond699) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond699) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond699) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond699) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond699) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond699) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond699) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond699) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond699) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond699) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond699) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond699) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond699) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond699) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond699) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond699) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond699) CFA_SP SP+-2
          CFI (cfiCond699) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond700 Using cfiCommon0
          CFI (cfiCond700) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond700) Conditional ??CrossCallReturnLabel_380
          CFI (cfiCond700) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond700) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond700) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond700) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond700) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond700) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond700) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond700) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond700) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond700) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond700) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond700) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond700) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond700) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond700) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond700) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond700) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond700) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond700) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond700) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond700) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond700) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond700) CFA_SP SP+-2
          CFI (cfiCond700) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond701 Using cfiCommon0
          CFI (cfiCond701) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond701) Conditional ??CrossCallReturnLabel_381
          CFI (cfiCond701) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond701) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond701) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond701) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond701) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond701) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond701) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond701) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond701) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond701) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond701) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond701) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond701) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond701) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond701) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond701) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond701) CFA_SP SP+-2
          CFI (cfiCond701) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond702 Using cfiCommon0
          CFI (cfiCond702) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond702) Conditional ??CrossCallReturnLabel_382
          CFI (cfiCond702) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond702) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond702) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond702) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond702) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond702) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond702) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond702) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond702) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond702) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond702) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond702) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond702) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond702) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond702) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond702) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond702) CFA_SP SP+-2
          CFI (cfiCond702) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond703 Using cfiCommon0
          CFI (cfiCond703) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond703) Conditional ??CrossCallReturnLabel_383
          CFI (cfiCond703) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond703) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond703) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond703) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond703) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond703) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond703) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond703) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond703) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond703) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond703) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond703) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond703) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond703) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond703) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond703) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond703) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond703) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond703) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond703) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond703) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond703) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond703) CFA_SP SP+-2
          CFI (cfiCond703) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker704 Using cfiCommon1
          CFI (cfiPicker704) NoFunction
          CFI (cfiPicker704) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond693
          CFI EndBlock cfiCond694
          CFI EndBlock cfiCond695
          CFI EndBlock cfiCond696
          CFI EndBlock cfiCond697
          CFI EndBlock cfiCond698
          CFI EndBlock cfiCond699
          CFI EndBlock cfiCond700
          CFI EndBlock cfiCond701
          CFI EndBlock cfiCond702
          CFI EndBlock cfiCond703
          CFI EndBlock cfiPicker704
        REQUIRE ??Subroutine175_0
        ; // Fall through to label ??Subroutine175_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine175_0:
          CFI Block cfiCond705 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI Conditional ??CrossCallReturnLabel_372
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond706 Using cfiCommon0
          CFI (cfiCond706) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond706) Conditional ??CrossCallReturnLabel_373
          CFI (cfiCond706) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond706) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond706) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond706) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond706) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond706) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond706) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond706) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond706) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond706) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond706) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond706) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond706) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond706) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond706) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond706) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond706) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond706) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond706) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond706) CFA_SP SP+-2
          CFI (cfiCond706) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond707 Using cfiCommon0
          CFI (cfiCond707) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond707) Conditional ??CrossCallReturnLabel_374
          CFI (cfiCond707) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond707) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond707) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond707) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond707) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond707) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond707) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond707) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond707) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond707) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond707) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond707) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond707) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond707) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond707) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond707) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond707) CFA_SP SP+-2
          CFI (cfiCond707) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond708 Using cfiCommon0
          CFI (cfiCond708) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond708) Conditional ??CrossCallReturnLabel_375
          CFI (cfiCond708) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond708) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond708) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond708) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond708) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond708) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond708) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond708) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond708) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond708) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond708) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond708) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond708) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond708) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond708) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond708) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond708) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond708) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond708) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond708) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond708) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond708) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond708) CFA_SP SP+-2
          CFI (cfiCond708) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond709 Using cfiCommon0
          CFI (cfiCond709) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond709) Conditional ??CrossCallReturnLabel_376
          CFI (cfiCond709) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond709) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond709) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond709) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond709) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond709) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond709) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond709) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond709) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond709) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond709) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond709) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond709) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond709) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond709) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond709) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond709) CFA_SP SP+-2
          CFI (cfiCond709) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond710 Using cfiCommon0
          CFI (cfiCond710) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond710) Conditional ??CrossCallReturnLabel_377
          CFI (cfiCond710) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond710) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond710) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond710) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond710) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond710) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond710) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond710) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond710) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond710) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond710) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond710) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond710) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond710) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond710) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond710) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond710) CFA_SP SP+-2
          CFI (cfiCond710) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond711 Using cfiCommon0
          CFI (cfiCond711) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond711) Conditional ??CrossCallReturnLabel_378
          CFI (cfiCond711) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond711) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond711) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond711) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond711) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond711) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond711) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond711) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond711) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond711) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond711) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond711) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond711) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond711) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond711) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond711) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond711) CFA_SP SP+-2
          CFI (cfiCond711) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond712 Using cfiCommon0
          CFI (cfiCond712) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond712) Conditional ??CrossCallReturnLabel_379
          CFI (cfiCond712) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond712) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond712) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond712) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond712) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond712) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond712) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond712) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond712) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond712) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond712) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond712) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond712) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond712) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond712) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond712) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond712) CFA_SP SP+-2
          CFI (cfiCond712) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond713 Using cfiCommon0
          CFI (cfiCond713) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond713) Conditional ??CrossCallReturnLabel_380
          CFI (cfiCond713) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond713) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond713) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond713) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond713) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond713) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond713) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond713) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond713) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond713) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond713) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond713) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond713) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond713) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond713) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond713) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond713) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond713) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond713) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond713) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond713) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond713) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond713) CFA_SP SP+-2
          CFI (cfiCond713) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond714 Using cfiCommon0
          CFI (cfiCond714) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond714) Conditional ??CrossCallReturnLabel_381
          CFI (cfiCond714) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond714) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond714) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond714) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond714) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond714) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond714) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond714) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond714) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond714) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond714) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond714) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond714) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond714) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond714) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond714) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond714) CFA_SP SP+-2
          CFI (cfiCond714) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond715 Using cfiCommon0
          CFI (cfiCond715) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond715) Conditional ??CrossCallReturnLabel_382
          CFI (cfiCond715) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond715) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond715) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond715) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond715) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond715) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond715) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond715) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond715) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond715) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond715) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond715) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond715) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond715) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond715) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond715) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond715) CFA_SP SP+-2
          CFI (cfiCond715) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond716 Using cfiCommon0
          CFI (cfiCond716) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond716) Conditional ??CrossCallReturnLabel_383
          CFI (cfiCond716) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond716) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond716) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond716) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond716) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond716) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond716) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond716) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond716) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond716) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond716) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond716) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond716) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond716) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond716) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond716) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond716) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond716) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond716) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond716) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond716) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond716) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond716) CFA_SP SP+-2
          CFI (cfiCond716) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker717 Using cfiCommon1
          CFI (cfiPicker717) NoFunction
          CFI (cfiPicker717) Picker
        MOVX      A,@DPTR
        MOV       ?V4,A
        CLR       A
        MOV       ?V6,A
        MOV       A,#0x18
        MOV       R0,#?V4
        RET
          CFI EndBlock cfiCond705
          CFI EndBlock cfiCond706
          CFI EndBlock cfiCond707
          CFI EndBlock cfiCond708
          CFI EndBlock cfiCond709
          CFI EndBlock cfiCond710
          CFI EndBlock cfiCond711
          CFI EndBlock cfiCond712
          CFI EndBlock cfiCond713
          CFI EndBlock cfiCond714
          CFI EndBlock cfiCond715
          CFI EndBlock cfiCond716
          CFI EndBlock cfiPicker717
// 2026 
// 2027 /*********************************************************************
// 2028  * @fn      zclClosures_ProcessInDoorLockClearHolidayScheduleRsp
// 2029  *
// 2030  * @brief   Process in the received Clear Holiday Schedule Response cmd
// 2031  *
// 2032  * @param   pInMsg - pointer to the incoming message
// 2033  * @param   pCBs - pointer to the application callbacks
// 2034  *
// 2035  * @return  ZStatus_t
// 2036  */
// 2037 static ZStatus_t zclClosures_ProcessInDoorLockClearHolidayScheduleRsp( zclIncoming_t *pInMsg,
// 2038                                                                        zclClosures_DoorLockAppCallbacks_t *pCBs )
// 2039 {
// 2040  if ( pCBs->pfnDoorLockClearHolidayScheduleRsp )
// 2041  {
// 2042    return ( pCBs->pfnDoorLockClearHolidayScheduleRsp( pInMsg, pInMsg->pData[0] ) );
// 2043  }
// 2044 
// 2045  return ( ZFailure );
// 2046 }
// 2047 
// 2048 /*********************************************************************
// 2049  * @fn      zclClosures_ProcessInDoorLockSetUserTypeRsp
// 2050  *
// 2051  * @brief   Process in the received Set User Type Response cmd
// 2052  *
// 2053  * @param   pInMsg - pointer to the incoming message
// 2054  * @param   pCBs - pointer to the application callbacks
// 2055  *
// 2056  * @return  ZStatus_t
// 2057  */
// 2058 static ZStatus_t zclClosures_ProcessInDoorLockSetUserTypeRsp( zclIncoming_t *pInMsg,
// 2059                                                               zclClosures_DoorLockAppCallbacks_t *pCBs )
// 2060 {
// 2061  if ( pCBs->pfnDoorLockSetUserTypeRsp )
// 2062  {
// 2063    return ( pCBs->pfnDoorLockSetUserTypeRsp( pInMsg, pInMsg->pData[0] ) );
// 2064  }
// 2065 
// 2066  return ( ZFailure );
// 2067 }
// 2068 
// 2069 /*********************************************************************
// 2070  * @fn      zclClosures_ProcessInDoorLockGetUserTypeRsp
// 2071  *
// 2072  * @brief   Process in the received Get User Type Response cmd
// 2073  *
// 2074  * @param   pInMsg - pointer to the incoming message
// 2075  * @param   pCBs - pointer to the application callbacks
// 2076  *
// 2077  * @return  ZStatus_t
// 2078  */
// 2079 static ZStatus_t zclClosures_ProcessInDoorLockGetUserTypeRsp( zclIncoming_t *pInMsg,
// 2080                                                               zclClosures_DoorLockAppCallbacks_t *pCBs )
// 2081 {
// 2082  if ( pCBs->pfnDoorLockGetUserTypeRsp )
// 2083  {
// 2084    zclDoorLockGetUserTypeRsp_t cmd;
// 2085 
// 2086    cmd.userID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
// 2087    cmd.userType = pInMsg->pData[2];
// 2088 
// 2089    return ( pCBs->pfnDoorLockGetUserTypeRsp( pInMsg, &cmd ) );
// 2090  }
// 2091 
// 2092  return ( ZFailure );
// 2093 }
// 2094 
// 2095 /*********************************************************************
// 2096  * @fn      zclClosures_ProcessInDoorLockSetRFIDCodeRsp
// 2097  *
// 2098  * @brief   Process in the received Set RFID Code Response cmd
// 2099  *
// 2100  * @param   pInMsg - pointer to the incoming message
// 2101  * @param   pCBs - pointer to the application callbacks
// 2102  *
// 2103  * @return  ZStatus_t
// 2104  */
// 2105 static ZStatus_t zclClosures_ProcessInDoorLockSetRFIDCodeRsp( zclIncoming_t *pInMsg,
// 2106                                                               zclClosures_DoorLockAppCallbacks_t *pCBs )
// 2107 {
// 2108  if ( pCBs->pfnDoorLockSetRFIDCodeRsp )
// 2109  {
// 2110    return ( pCBs->pfnDoorLockSetRFIDCodeRsp( pInMsg, pInMsg->pData[0] ) );
// 2111  }
// 2112 
// 2113  return ( ZFailure );
// 2114 }
// 2115 
// 2116 /*********************************************************************
// 2117  * @fn      zclClosures_ProcessInDoorLockGetRFIDCodeRsp
// 2118  *
// 2119  * @brief   Process in the received Get RFID Code Response cmd
// 2120  *
// 2121  * @param   pInMsg - pointer to the incoming message
// 2122  * @param   pCBs - pointer to the application callbacks
// 2123  *
// 2124  * @return  ZStatus_t
// 2125  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2126 static ZStatus_t zclClosures_ProcessInDoorLockGetRFIDCodeRsp( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockGetRFIDCodeRsp:
          CFI Block cfiBlock718 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
        CODE
// 2127                                                               zclClosures_DoorLockAppCallbacks_t *pCBs )
// 2128 {
        FUNCALL zclClosures_ProcessInDoorLockGetRFIDCodeRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockGetRFIDCodeRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 6
        MOV       A,#-0x6
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
// 2129   ZStatus_t status;
// 2130 
// 2131   if ( pCBs->pfnDoorLockGetRFIDCodeRsp )
        MOV       A,R4
        ADD       A,#0x5e
        LCALL     ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_427:
        JZ        ??zclClosures_ProcessInDoorLockGetRFIDCodeRsp_0
// 2132   {
// 2133     uint8 i;
// 2134     uint8 offset;
// 2135     uint8 calculatedArrayLen;
// 2136     zclDoorLockGetRFIDCodeRsp_t cmd;
// 2137 
// 2138     // first octet of PIN/RFID Code variable string identifies its length
// 2139     calculatedArrayLen = pInMsg->pData[4] + 1; // add first byte of string
        LCALL     ?Subroutine16 & 0xFFFF
// 2140 
// 2141     cmd.pRfidCode = zcl_mem_alloc( calculatedArrayLen );
??CrossCallReturnLabel_15:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine67 & 0xFFFF
// 2142     if ( !cmd.pRfidCode )
??CrossCallReturnLabel_150:
        JNZ       ??zclClosures_ProcessInDoorLockGetRFIDCodeRsp_1
// 2143     {
// 2144       return ( ZMemError );  // no memory
        MOV       R1,#0x10
        SJMP      ??zclClosures_ProcessInDoorLockGetRFIDCodeRsp_2
// 2145     }
// 2146 
// 2147     cmd.userID = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
??zclClosures_ProcessInDoorLockGetRFIDCodeRsp_1:
        LCALL     ?Subroutine12 & 0xFFFF
// 2148     cmd.userStatus = pInMsg->pData[2];
??CrossCallReturnLabel_11:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine26 & 0xFFFF
// 2149     cmd.userType = pInMsg->pData[3];
??CrossCallReturnLabel_64:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine80 & 0xFFFF
// 2150     offset = 4;
// 2151     for ( i = 0; i < calculatedArrayLen; i++ )
??CrossCallReturnLabel_179:
        SJMP      ??zclClosures_ProcessInDoorLockGetRFIDCodeRsp_3
// 2152     {
// 2153       cmd.pRfidCode[i] = pInMsg->pData[offset++];
??zclClosures_ProcessInDoorLockGetRFIDCodeRsp_4:
        MOV       A,R1
        MOV       R2,A
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine190_0 & 0xFFFF
// 2154     }
??CrossCallReturnLabel_464:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R0
        MOV       R2,A
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_52:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_ProcessInDoorLockGetRFIDCodeRsp_3:
        MOV       A,R0
        CLR       C
        SUBB      A,?V4
        JC        ??zclClosures_ProcessInDoorLockGetRFIDCodeRsp_4
// 2155 
// 2156     status = ( pCBs->pfnDoorLockGetRFIDCodeRsp( pInMsg, &cmd ) );
        ; Setup parameters for indirect call
        LCALL     ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_350:
        LCALL     ?CALL_IND
        MOV       A,R1
        MOV       R6,A
// 2157     zcl_mem_free( cmd.pRfidCode );
        ; Setup parameters for call to function osal_mem_free
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine176_0 & 0xFFFF
// 2158     return status;
// 2159   }
??CrossCallReturnLabel_391:
        SJMP      ??zclClosures_ProcessInDoorLockGetRFIDCodeRsp_2
// 2160 
// 2161  return ( ZFailure );
??zclClosures_ProcessInDoorLockGetRFIDCodeRsp_0:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockGetRFIDCodeRsp_2:
        LJMP      ?Subroutine1 & 0xFFFF
// 2162 }
          CFI EndBlock cfiBlock718

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine19:
          CFI Block cfiCond719 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLock
          CFI Conditional ??CrossCallReturnLabel_384
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond720 Using cfiCommon0
          CFI (cfiCond720) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond720) Conditional ??CrossCallReturnLabel_385
          CFI (cfiCond720) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond720) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond720) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond720) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond720) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond720) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond720) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond720) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond720) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond720) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond720) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond720) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond720) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond720) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond720) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond720) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond720) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond720) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond720) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond720) CFA_SP SP+-2
          CFI (cfiCond720) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker721 Using cfiCommon1
          CFI (cfiPicker721) NoFunction
          CFI (cfiPicker721) Picker
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
          CFI EndBlock cfiCond719
          CFI EndBlock cfiCond720
          CFI EndBlock cfiPicker721
        REQUIRE ??Subroutine176_0
        ; // Fall through to label ??Subroutine176_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine176_0:
          CFI Block cfiCond722 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI Conditional ??CrossCallReturnLabel_386
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond723 Using cfiCommon0
          CFI (cfiCond723) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond723) Conditional ??CrossCallReturnLabel_387
          CFI (cfiCond723) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond723) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond723) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond723) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond723) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond723) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond723) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond723) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond723) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond723) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond723) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond723) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond723) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond723) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond723) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond723) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond723) CFA_SP SP+-2
          CFI (cfiCond723) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond724 Using cfiCommon0
          CFI (cfiCond724) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond724) Conditional ??CrossCallReturnLabel_388
          CFI (cfiCond724) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond724) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond724) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond724) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond724) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond724) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond724) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond724) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond724) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond724) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond724) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond724) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond724) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond724) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond724) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond724) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond724) CFA_SP SP+-2
          CFI (cfiCond724) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond725 Using cfiCommon0
          CFI (cfiCond725) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond725) Conditional ??CrossCallReturnLabel_389
          CFI (cfiCond725) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond725) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond725) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond725) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond725) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond725) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond725) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond725) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond725) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond725) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond725) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond725) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond725) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond725) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond725) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond725) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond725) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond725) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond725) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond725) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond725) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond725) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond725) CFA_SP SP+-2
          CFI (cfiCond725) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond726 Using cfiCommon0
          CFI (cfiCond726) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond726) Conditional ??CrossCallReturnLabel_390
          CFI (cfiCond726) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond726) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond726) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond726) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond726) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond726) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond726) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond726) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond726) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond726) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond726) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond726) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond726) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond726) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond726) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond726) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond726) CFA_SP SP+-2
          CFI (cfiCond726) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond727 Using cfiCommon0
          CFI (cfiCond727) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond727) Conditional ??CrossCallReturnLabel_391
          CFI (cfiCond727) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond727) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond727) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond727) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond727) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond727) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond727) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond727) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond727) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond727) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond727) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond727) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond727) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond727) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond727) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond727) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond727) CFA_SP SP+-2
          CFI (cfiCond727) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond728 Using cfiCommon0
          CFI (cfiCond728) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond728) Conditional ??CrossCallReturnLabel_392
          CFI (cfiCond728) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond728) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond728) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond728) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond728) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond728) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond728) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond728) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond728) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond728) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond728) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond728) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond728) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond728) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond728) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond728) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond728) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond728) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond728) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond728) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond728) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond728) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond728) CFA_SP SP+-2
          CFI (cfiCond728) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond729 Using cfiCommon0
          CFI (cfiCond729) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond729) Conditional ??CrossCallReturnLabel_393
          CFI (cfiCond729) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond729) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond729) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond729) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond729) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond729) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond729) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond729) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond729) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond729) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond729) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond729) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond729) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond729) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond729) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond729) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond729) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond729) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond729) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond729) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond729) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond729) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond729) CFA_SP SP+-2
          CFI (cfiCond729) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond730 Using cfiCommon0
          CFI (cfiCond730) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond730) Conditional ??CrossCallReturnLabel_384
          CFI (cfiCond730) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond730) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond730) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond730) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond730) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond730) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond730) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond730) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond730) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond730) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond730) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond730) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond730) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond730) CFA_SP SP+-2
          CFI (cfiCond730) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond731 Using cfiCommon0
          CFI (cfiCond731) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond731) Conditional ??CrossCallReturnLabel_385
          CFI (cfiCond731) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond731) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond731) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond731) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond731) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond731) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond731) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond731) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond731) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond731) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond731) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond731) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond731) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond731) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond731) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond731) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond731) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond731) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond731) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond731) CFA_SP SP+-2
          CFI (cfiCond731) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker732 Using cfiCommon1
          CFI (cfiPicker732) NoFunction
          CFI (cfiPicker732) Picker
        LCALL     ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_395:
        MOV       A,R6
        MOV       R1,A
        RET
          CFI EndBlock cfiCond722
          CFI EndBlock cfiCond723
          CFI EndBlock cfiCond724
          CFI EndBlock cfiCond725
          CFI EndBlock cfiCond726
          CFI EndBlock cfiCond727
          CFI EndBlock cfiCond728
          CFI EndBlock cfiCond729
          CFI EndBlock cfiCond730
          CFI EndBlock cfiCond731
          CFI EndBlock cfiPicker732
// 2163 
// 2164 /*********************************************************************
// 2165  * @fn      zclClosures_ProcessInDoorLockClearRFIDCodeRsp
// 2166  *
// 2167  * @brief   Process in the received Clear RFID Code Response cmd
// 2168  *
// 2169  * @param   pInMsg - pointer to the incoming message
// 2170  * @param   pCBs - pointer to the application callbacks
// 2171  *
// 2172  * @return  ZStatus_t
// 2173  */
// 2174 static ZStatus_t zclClosures_ProcessInDoorLockClearRFIDCodeRsp( zclIncoming_t *pInMsg,
// 2175                                                                 zclClosures_DoorLockAppCallbacks_t *pCBs )
// 2176 {
// 2177  if ( pCBs->pfnDoorLockClearRFIDCodeRsp )
// 2178  {
// 2179    return ( pCBs->pfnDoorLockClearRFIDCodeRsp( pInMsg, pInMsg->pData[0] ) );
// 2180  }
// 2181 
// 2182  return ( ZFailure );
// 2183 }
// 2184 
// 2185 /*********************************************************************
// 2186  * @fn      zclClosures_ProcessInDoorLockClearAllRFIDCodesRsp
// 2187  *
// 2188  * @brief   Process in the received Clear All RFID Codes Response cmd
// 2189  *
// 2190  * @param   pInMsg - pointer to the incoming message
// 2191  * @param   pCBs - pointer to the application callbacks
// 2192  *
// 2193  * @return  ZStatus_t
// 2194  */
// 2195 static ZStatus_t zclClosures_ProcessInDoorLockClearAllRFIDCodesRsp( zclIncoming_t *pInMsg,
// 2196                                                                     zclClosures_DoorLockAppCallbacks_t *pCBs )
// 2197 {
// 2198  if ( pCBs->pfnDoorLockClearAllRFIDCodesRsp )
// 2199  {
// 2200    return ( pCBs->pfnDoorLockClearAllRFIDCodesRsp( pInMsg, pInMsg->pData[0] ) );
// 2201  }
// 2202 
// 2203  return ( ZFailure );
// 2204 }
// 2205 
// 2206 /*********************************************************************
// 2207  * @fn      zclClosures_ProcessInDoorLockOperationEventNotification
// 2208  *
// 2209  * @brief   Process in the received Operation Event Notification cmd
// 2210  *
// 2211  * @param   pInMsg - pointer to the incoming message
// 2212  * @param   pCBs - pointer to the application callbacks
// 2213  *
// 2214  * @return  ZStatus_t
// 2215  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2216 static ZStatus_t zclClosures_ProcessInDoorLockOperationEventNotification( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockOperationEventNotification:
          CFI Block cfiBlock733 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockOperationEventNotification
        CODE
// 2217                                                                           zclClosures_DoorLockAppCallbacks_t *pCBs )
// 2218 {
        FUNCALL zclClosures_ProcessInDoorLockOperationEventNotification, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockOperationEventNotification, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV       A,#-0x16
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 11
        MOV       A,#-0xb
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       ?V12,R2
        MOV       ?V13,R3
// 2219   uint8 i;
// 2220   uint8 offset;
// 2221   uint8 calculatedArrayLen;
// 2222   zclDoorLockOperationEventNotification_t cmd;
// 2223   ZStatus_t status;
// 2224 
// 2225  if ( pCBs->pfnDoorLockOperationEventNotification )
        MOV       A,R4
        ADD       A,#0x64
        MOV       ?V10,A
        CLR       A
        ADDC      A,R5
        MOV       ?V11,A
        MOV       DPL,?V10
        LCALL     ??Subroutine180_0 & 0xFFFF
??CrossCallReturnLabel_419:
        JNZ       $+5
        LJMP      ??zclClosures_ProcessInDoorLockOperationEventNo_1 & 0xFFFF
// 2226  {
// 2227     calculatedArrayLen = pInMsg->pData[9] + 1;  // add first byte of string
        LCALL     ?Subroutine128 & 0xFFFF
??CrossCallReturnLabel_269:
        LCALL     ??Subroutine159_0 & 0xFFFF
??CrossCallReturnLabel_330:
        ADD       A,#0x9
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        INC       A
        MOV       ?V8,A
// 2228 
// 2229     cmd.pData = zcl_mem_alloc( calculatedArrayLen );
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,#0x0
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V1,R3
        MOV       R1,?V1
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine67 & 0xFFFF
// 2230     if ( !cmd.pData )
??CrossCallReturnLabel_151:
        JNZ       ??zclClosures_ProcessInDoorLockOperationEventNo_2
// 2231     {
// 2232       return ( ZMemError );  // no memory
        MOV       R1,#0x10
        LJMP      ??zclClosures_ProcessInDoorLockOperationEventNo_3 & 0xFFFF
// 2233     }
// 2234 
// 2235     cmd.operationEventSource = pInMsg->pData[0];
??zclClosures_ProcessInDoorLockOperationEventNo_2:
        LCALL     ?Subroutine25 & 0xFFFF
// 2236     cmd.operationEventCode = pInMsg->pData[1];
??CrossCallReturnLabel_59:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine31 & 0xFFFF
// 2237     cmd.userID = BUILD_UINT16( pInMsg->pData[2], pInMsg->pData[3] );
??CrossCallReturnLabel_79:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine70 & 0xFFFF
// 2238     cmd.pin = pInMsg->pData[4];
??CrossCallReturnLabel_156:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine37 & 0xFFFF
// 2239     cmd.zigBeeLocalTime = BUILD_UINT32( pInMsg->pData[5], pInMsg->pData[6], pInMsg->pData[7], pInMsg->pData[8] );
??CrossCallReturnLabel_396:
        LCALL     ?Subroutine28 & 0xFFFF
??CrossCallReturnLabel_404:
        LCALL     ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_325:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ??Subroutine148_0 & 0xFFFF
??CrossCallReturnLabel_314:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ??Subroutine169_0 & 0xFFFF
??CrossCallReturnLabel_380:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine68 & 0xFFFF
// 2240     offset = 9;
??CrossCallReturnLabel_154:
        MOV       R1,#0x9
// 2241     for ( i = 0; i < calculatedArrayLen; i++ )
        MOV       R0,#0x0
        SJMP      ??zclClosures_ProcessInDoorLockOperationEventNo_4
// 2242     {
// 2243       cmd.pData[i] = pInMsg->pData[offset++];
??zclClosures_ProcessInDoorLockOperationEventNo_5:
        MOV       A,R1
        MOV       R2,A
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine190_0 & 0xFFFF
// 2244     }
??CrossCallReturnLabel_465:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R0
        MOV       R2,A
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_53:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_ProcessInDoorLockOperationEventNo_4:
        MOV       A,R0
        CLR       C
        SUBB      A,?V8
        JC        ??zclClosures_ProcessInDoorLockOperationEventNo_5
// 2245 
// 2246     status = ( pCBs->pfnDoorLockOperationEventNotification( pInMsg, &cmd ) );
        ; Setup parameters for indirect call
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       R2,?V12
        MOV       R3,?V13
        MOV       DPL,?V10
        MOV       DPH,?V11
        LCALL     ??Subroutine160_0 & 0xFFFF
??CrossCallReturnLabel_342:
        LCALL     ?CALL_IND
        MOV       A,R1
        MOV       R6,A
// 2247     zcl_mem_free( cmd.pData );
        ; Setup parameters for call to function osal_mem_free
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine176_0 & 0xFFFF
// 2248     return status;
// 2249   }
??CrossCallReturnLabel_392:
        SJMP      ??zclClosures_ProcessInDoorLockOperationEventNo_3
// 2250  return ( ZFailure );
??zclClosures_ProcessInDoorLockOperationEventNo_1:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockOperationEventNo_3:
        MOV       A,#0xb
        LJMP      ??Subroutine191_0 & 0xFFFF
// 2251 }
          CFI EndBlock cfiBlock733

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine68:
          CFI Block cfiCond734 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI Conditional ??CrossCallReturnLabel_153
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond735 Using cfiCommon0
          CFI (cfiCond735) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond735) Conditional ??CrossCallReturnLabel_154
          CFI (cfiCond735) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond735) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond735) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond735) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond735) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond735) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond735) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond735) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond735) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond735) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond735) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond735) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond735) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond735) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond735) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond735) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond735) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond735) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond735) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond735) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond735) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond735) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond735) CFA_SP SP+-2
          CFI (cfiCond735) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond736 Using cfiCommon0
          CFI (cfiCond736) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond736) Conditional ??CrossCallReturnLabel_155
          CFI (cfiCond736) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond736) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond736) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond736) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond736) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond736) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond736) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond736) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond736) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond736) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond736) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond736) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond736) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond736) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond736) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond736) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond736) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond736) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond736) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond736) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond736) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond736) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond736) CFA_SP SP+-2
          CFI (cfiCond736) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker737 Using cfiCommon1
          CFI (cfiPicker737) NoFunction
          CFI (cfiPicker737) Picker
        MOV       A,?V0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V1
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V3
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond734
          CFI EndBlock cfiCond735
          CFI EndBlock cfiCond736
          CFI EndBlock cfiPicker737

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine37:
          CFI Block cfiCond738 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_396
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond739 Using cfiCommon0
          CFI (cfiCond739) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond739) Conditional ??CrossCallReturnLabel_397
          CFI (cfiCond739) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond739) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond739) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond739) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond739) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond739) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond739) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond739) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond739) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond739) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond739) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond739) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond739) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond739) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond739) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond739) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond739) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond739) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond739) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond739) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond739) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond739) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond739) CFA_SP SP+-2
          CFI (cfiCond739) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker740 Using cfiCommon1
          CFI (cfiPicker740) NoFunction
          CFI (cfiPicker740) Picker
        MOVX      @DPTR,A
          CFI EndBlock cfiCond738
          CFI EndBlock cfiCond739
          CFI EndBlock cfiPicker740
        REQUIRE ??Subroutine177_0
        ; // Fall through to label ??Subroutine177_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine177_0:
          CFI Block cfiCond741 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI Conditional ??CrossCallReturnLabel_398
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond742 Using cfiCommon0
          CFI (cfiCond742) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond742) Conditional ??CrossCallReturnLabel_396
          CFI (cfiCond742) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond742) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond742) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond742) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond742) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond742) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond742) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond742) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond742) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond742) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond742) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond742) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond742) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond742) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond742) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond742) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond742) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond742) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond742) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond742) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond742) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond742) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond742) CFA_SP SP+-2
          CFI (cfiCond742) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond743 Using cfiCommon0
          CFI (cfiCond743) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond743) Conditional ??CrossCallReturnLabel_397
          CFI (cfiCond743) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond743) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond743) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond743) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond743) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond743) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond743) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond743) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond743) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond743) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond743) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond743) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond743) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond743) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond743) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond743) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond743) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond743) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond743) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond743) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond743) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond743) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond743) CFA_SP SP+-2
          CFI (cfiCond743) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker744 Using cfiCommon1
          CFI (cfiPicker744) NoFunction
          CFI (cfiPicker744) Picker
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_402:
        MOV       DPL,R2
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond741
          CFI EndBlock cfiCond742
          CFI EndBlock cfiCond743
          CFI EndBlock cfiPicker744

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine28:
          CFI Block cfiCond745 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_404
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond746 Using cfiCommon0
          CFI (cfiCond746) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond746) Conditional ??CrossCallReturnLabel_405
          CFI (cfiCond746) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond746) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond746) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond746) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond746) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond746) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond746) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond746) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond746) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond746) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond746) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond746) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond746) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond746) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond746) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond746) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond746) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond746) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond746) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond746) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond746) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond746) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond746) CFA_SP SP+-2
          CFI (cfiCond746) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker747 Using cfiCommon1
          CFI (cfiPicker747) NoFunction
          CFI (cfiPicker747) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond745
          CFI EndBlock cfiCond746
          CFI EndBlock cfiPicker747
        REQUIRE ??Subroutine178_0
        ; // Fall through to label ??Subroutine178_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine178_0:
          CFI Block cfiCond748 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI Conditional ??CrossCallReturnLabel_403
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond749 Using cfiCommon0
          CFI (cfiCond749) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond749) Conditional ??CrossCallReturnLabel_404
          CFI (cfiCond749) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond749) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond749) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond749) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond749) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond749) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond749) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond749) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond749) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond749) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond749) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond749) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond749) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond749) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond749) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond749) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond749) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond749) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond749) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond749) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond749) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond749) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond749) CFA_SP SP+-2
          CFI (cfiCond749) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond750 Using cfiCommon0
          CFI (cfiCond750) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond750) Conditional ??CrossCallReturnLabel_405
          CFI (cfiCond750) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond750) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond750) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond750) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond750) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond750) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond750) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond750) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond750) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond750) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond750) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond750) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond750) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond750) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond750) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond750) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond750) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond750) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond750) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond750) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond750) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond750) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond750) CFA_SP SP+-2
          CFI (cfiCond750) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker751 Using cfiCommon1
          CFI (cfiPicker751) NoFunction
          CFI (cfiPicker751) Picker
        LCALL     ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_408:
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond748
          CFI EndBlock cfiCond749
          CFI EndBlock cfiCond750
          CFI EndBlock cfiPicker751

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine17:
          CFI Block cfiCond752 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI Conditional ??CrossCallReturnLabel_423
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond753 Using cfiCommon0
          CFI (cfiCond753) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond753) Conditional ??CrossCallReturnLabel_424
          CFI (cfiCond753) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond753) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond753) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond753) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond753) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond753) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond753) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond753) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond753) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond753) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond753) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond753) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond753) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond753) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond753) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond753) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond753) CFA_SP SP+-2
          CFI (cfiCond753) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond754 Using cfiCommon0
          CFI (cfiCond754) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond754) Conditional ??CrossCallReturnLabel_425
          CFI (cfiCond754) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond754) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond754) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond754) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond754) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond754) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond754) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond754) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond754) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond754) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond754) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond754) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond754) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond754) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond754) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond754) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond754) CFA_SP SP+-2
          CFI (cfiCond754) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond755 Using cfiCommon0
          CFI (cfiCond755) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond755) Conditional ??CrossCallReturnLabel_426
          CFI (cfiCond755) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond755) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond755) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond755) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond755) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond755) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond755) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond755) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond755) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond755) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond755) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond755) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond755) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond755) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond755) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond755) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond755) CFA_SP SP+-2
          CFI (cfiCond755) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond756 Using cfiCommon0
          CFI (cfiCond756) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond756) Conditional ??CrossCallReturnLabel_427
          CFI (cfiCond756) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond756) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond756) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond756) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond756) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond756) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond756) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond756) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond756) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond756) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond756) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond756) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond756) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond756) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond756) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond756) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond756) CFA_SP SP+-2
          CFI (cfiCond756) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker757 Using cfiCommon1
          CFI (cfiPicker757) NoFunction
          CFI (cfiPicker757) Picker
        MOV       R0,A
        CLR       A
        ADDC      A,R5
        MOV       ?V0,R0
        MOV       ?V1,A
          CFI EndBlock cfiCond752
          CFI EndBlock cfiCond753
          CFI EndBlock cfiCond754
          CFI EndBlock cfiCond755
          CFI EndBlock cfiCond756
          CFI EndBlock cfiPicker757
        REQUIRE ??Subroutine179_0
        ; // Fall through to label ??Subroutine179_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine179_0:
          CFI Block cfiCond758 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_421
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond759 Using cfiCommon0
          CFI (cfiCond759) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond759) Conditional ??CrossCallReturnLabel_422
          CFI (cfiCond759) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond759) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond759) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond759) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond759) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond759) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond759) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond759) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond759) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond759) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond759) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond759) CFA_SP SP+-2
          CFI (cfiCond759) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond760 Using cfiCommon0
          CFI (cfiCond760) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond760) Conditional ??CrossCallReturnLabel_423
          CFI (cfiCond760) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond760) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond760) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond760) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond760) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond760) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond760) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond760) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond760) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond760) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond760) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond760) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond760) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond760) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond760) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond760) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond760) CFA_SP SP+-2
          CFI (cfiCond760) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond761 Using cfiCommon0
          CFI (cfiCond761) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond761) Conditional ??CrossCallReturnLabel_424
          CFI (cfiCond761) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond761) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond761) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond761) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond761) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond761) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond761) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond761) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond761) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond761) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond761) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond761) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond761) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond761) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond761) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond761) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond761) CFA_SP SP+-2
          CFI (cfiCond761) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond762 Using cfiCommon0
          CFI (cfiCond762) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond762) Conditional ??CrossCallReturnLabel_425
          CFI (cfiCond762) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond762) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond762) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond762) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond762) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond762) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond762) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond762) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond762) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond762) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond762) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond762) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond762) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond762) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond762) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond762) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond762) CFA_SP SP+-2
          CFI (cfiCond762) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond763 Using cfiCommon0
          CFI (cfiCond763) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond763) Conditional ??CrossCallReturnLabel_426
          CFI (cfiCond763) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond763) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond763) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond763) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond763) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond763) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond763) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond763) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond763) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond763) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond763) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond763) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond763) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond763) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond763) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond763) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond763) CFA_SP SP+-2
          CFI (cfiCond763) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond764 Using cfiCommon0
          CFI (cfiCond764) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond764) Conditional ??CrossCallReturnLabel_427
          CFI (cfiCond764) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond764) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond764) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond764) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond764) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond764) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond764) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond764) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond764) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond764) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond764) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond764) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond764) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond764) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond764) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond764) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond764) CFA_SP SP+-2
          CFI (cfiCond764) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker765 Using cfiCommon1
          CFI (cfiPicker765) NoFunction
          CFI (cfiPicker765) Picker
        MOV       DPL,R0
          CFI EndBlock cfiCond758
          CFI EndBlock cfiCond759
          CFI EndBlock cfiCond760
          CFI EndBlock cfiCond761
          CFI EndBlock cfiCond762
          CFI EndBlock cfiCond763
          CFI EndBlock cfiCond764
          CFI EndBlock cfiPicker765
        REQUIRE ??Subroutine180_0
        ; // Fall through to label ??Subroutine180_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine180_0:
          CFI Block cfiCond766 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI Conditional ??CrossCallReturnLabel_413
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond767 Using cfiCommon0
          CFI (cfiCond767) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond767) Conditional ??CrossCallReturnLabel_414
          CFI (cfiCond767) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond767) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond767) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond767) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond767) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond767) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond767) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond767) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond767) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond767) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond767) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond767) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond767) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond767) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond767) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond767) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond767) CFA_SP SP+-2
          CFI (cfiCond767) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond768 Using cfiCommon0
          CFI (cfiCond768) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond768) Conditional ??CrossCallReturnLabel_415
          CFI (cfiCond768) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond768) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond768) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond768) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond768) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond768) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond768) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond768) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond768) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond768) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond768) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond768) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond768) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond768) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond768) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond768) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond768) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond768) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond768) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond768) CFA_SP SP+-2
          CFI (cfiCond768) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond769 Using cfiCommon0
          CFI (cfiCond769) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond769) Conditional ??CrossCallReturnLabel_416
          CFI (cfiCond769) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond769) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond769) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond769) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond769) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond769) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond769) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond769) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond769) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond769) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond769) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond769) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond769) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond769) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond769) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond769) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond769) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond769) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond769) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond769) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond769) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond769) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond769) CFA_SP SP+-2
          CFI (cfiCond769) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond770 Using cfiCommon0
          CFI (cfiCond770) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond770) Conditional ??CrossCallReturnLabel_417
          CFI (cfiCond770) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond770) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond770) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond770) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond770) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond770) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond770) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond770) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond770) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond770) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond770) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond770) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond770) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond770) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond770) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond770) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond770) CFA_SP SP+-2
          CFI (cfiCond770) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond771 Using cfiCommon0
          CFI (cfiCond771) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond771) Conditional ??CrossCallReturnLabel_418
          CFI (cfiCond771) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond771) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond771) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond771) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond771) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond771) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond771) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond771) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond771) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond771) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond771) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond771) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond771) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond771) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond771) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond771) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond771) CFA_SP SP+-2
          CFI (cfiCond771) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond772 Using cfiCommon0
          CFI (cfiCond772) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond772) Conditional ??CrossCallReturnLabel_419
          CFI (cfiCond772) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond772) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond772) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond772) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond772) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond772) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond772) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond772) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond772) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond772) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond772) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond772) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond772) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond772) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond772) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond772) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond772) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond772) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond772) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond772) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond772) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond772) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond772) CFA_SP SP+-2
          CFI (cfiCond772) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond773 Using cfiCommon0
          CFI (cfiCond773) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond773) Conditional ??CrossCallReturnLabel_420
          CFI (cfiCond773) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond773) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond773) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond773) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond773) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond773) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond773) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond773) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond773) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond773) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond773) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond773) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond773) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond773) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond773) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond773) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond773) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond773) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond773) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond773) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond773) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond773) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond773) CFA_SP SP+-2
          CFI (cfiCond773) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond774 Using cfiCommon0
          CFI (cfiCond774) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond774) Conditional ??CrossCallReturnLabel_421
          CFI (cfiCond774) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond774) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond774) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond774) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond774) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond774) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond774) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond774) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond774) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond774) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond774) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond774) CFA_SP SP+-2
          CFI (cfiCond774) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond775 Using cfiCommon0
          CFI (cfiCond775) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond775) Conditional ??CrossCallReturnLabel_422
          CFI (cfiCond775) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond775) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond775) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond775) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond775) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond775) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond775) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond775) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond775) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond775) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond775) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond775) CFA_SP SP+-2
          CFI (cfiCond775) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond776 Using cfiCommon0
          CFI (cfiCond776) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond776) Conditional ??CrossCallReturnLabel_423
          CFI (cfiCond776) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond776) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond776) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond776) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond776) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond776) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond776) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond776) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond776) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond776) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond776) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond776) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond776) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond776) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond776) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond776) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond776) CFA_SP SP+-2
          CFI (cfiCond776) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond777 Using cfiCommon0
          CFI (cfiCond777) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond777) Conditional ??CrossCallReturnLabel_424
          CFI (cfiCond777) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond777) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond777) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond777) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond777) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond777) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond777) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond777) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond777) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond777) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond777) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond777) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond777) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond777) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond777) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond777) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond777) CFA_SP SP+-2
          CFI (cfiCond777) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond778 Using cfiCommon0
          CFI (cfiCond778) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond778) Conditional ??CrossCallReturnLabel_425
          CFI (cfiCond778) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond778) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond778) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond778) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond778) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond778) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond778) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond778) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond778) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond778) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond778) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond778) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond778) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond778) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond778) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond778) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond778) CFA_SP SP+-2
          CFI (cfiCond778) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond779 Using cfiCommon0
          CFI (cfiCond779) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond779) Conditional ??CrossCallReturnLabel_426
          CFI (cfiCond779) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond779) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond779) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond779) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond779) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond779) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond779) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond779) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond779) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond779) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond779) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond779) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond779) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond779) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond779) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond779) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond779) CFA_SP SP+-2
          CFI (cfiCond779) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond780 Using cfiCommon0
          CFI (cfiCond780) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond780) Conditional ??CrossCallReturnLabel_427
          CFI (cfiCond780) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond780) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond780) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond780) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond780) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond780) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond780) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond780) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond780) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond780) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond780) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond780) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond780) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond780) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond780) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond780) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond780) CFA_SP SP+-2
          CFI (cfiCond780) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker781 Using cfiCommon1
          CFI (cfiPicker781) NoFunction
          CFI (cfiPicker781) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond766
          CFI EndBlock cfiCond767
          CFI EndBlock cfiCond768
          CFI EndBlock cfiCond769
          CFI EndBlock cfiCond770
          CFI EndBlock cfiCond771
          CFI EndBlock cfiCond772
          CFI EndBlock cfiCond773
          CFI EndBlock cfiCond774
          CFI EndBlock cfiCond775
          CFI EndBlock cfiCond776
          CFI EndBlock cfiCond777
          CFI EndBlock cfiCond778
          CFI EndBlock cfiCond779
          CFI EndBlock cfiCond780
          CFI EndBlock cfiPicker781
        REQUIRE ??Subroutine181_0
        ; // Fall through to label ??Subroutine181_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine181_0:
          CFI Block cfiCond782 Using cfiCommon0
          CFI Function zclClosures_HdlIncoming
          CFI Conditional ??CrossCallReturnLabel_409
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond783 Using cfiCommon0
          CFI (cfiCond783) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond783) Conditional ??CrossCallReturnLabel_410
          CFI (cfiCond783) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond783) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond783) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond783) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond783) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond783) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond783) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond783) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond783) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond783) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond783) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond783) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond783) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond783) CFA_SP SP+-2
          CFI (cfiCond783) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond784 Using cfiCommon0
          CFI (cfiCond784) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond784) Conditional ??CrossCallReturnLabel_411
          CFI (cfiCond784) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond784) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond784) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond784) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond784) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond784) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond784) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond784) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond784) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond784) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond784) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond784) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond784) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond784) CFA_SP SP+-2
          CFI (cfiCond784) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond785 Using cfiCommon0
          CFI (cfiCond785) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond785) Conditional ??CrossCallReturnLabel_412
          CFI (cfiCond785) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond785) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond785) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond785) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond785) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond785) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond785) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond785) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond785) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond785) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond785) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond785) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond785) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond785) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond785) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond785) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond785) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond785) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond785) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond785) CFA_SP SP+-2
          CFI (cfiCond785) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond786 Using cfiCommon0
          CFI (cfiCond786) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond786) Conditional ??CrossCallReturnLabel_413
          CFI (cfiCond786) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond786) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond786) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond786) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond786) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond786) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond786) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond786) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond786) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond786) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond786) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond786) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond786) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond786) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond786) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond786) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond786) CFA_SP SP+-2
          CFI (cfiCond786) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond787 Using cfiCommon0
          CFI (cfiCond787) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond787) Conditional ??CrossCallReturnLabel_414
          CFI (cfiCond787) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond787) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond787) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond787) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond787) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond787) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond787) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond787) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond787) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond787) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond787) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond787) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond787) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond787) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond787) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond787) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond787) CFA_SP SP+-2
          CFI (cfiCond787) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond788 Using cfiCommon0
          CFI (cfiCond788) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond788) Conditional ??CrossCallReturnLabel_415
          CFI (cfiCond788) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond788) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond788) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond788) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond788) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond788) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond788) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond788) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond788) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond788) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond788) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond788) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond788) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond788) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond788) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond788) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond788) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond788) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond788) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond788) CFA_SP SP+-2
          CFI (cfiCond788) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond789 Using cfiCommon0
          CFI (cfiCond789) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond789) Conditional ??CrossCallReturnLabel_416
          CFI (cfiCond789) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond789) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond789) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond789) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond789) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond789) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond789) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond789) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond789) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond789) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond789) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond789) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond789) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond789) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond789) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond789) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond789) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond789) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond789) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond789) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond789) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond789) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond789) CFA_SP SP+-2
          CFI (cfiCond789) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond790 Using cfiCommon0
          CFI (cfiCond790) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond790) Conditional ??CrossCallReturnLabel_417
          CFI (cfiCond790) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond790) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond790) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond790) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond790) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond790) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond790) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond790) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond790) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond790) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond790) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond790) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond790) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond790) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond790) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond790) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond790) CFA_SP SP+-2
          CFI (cfiCond790) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond791 Using cfiCommon0
          CFI (cfiCond791) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond791) Conditional ??CrossCallReturnLabel_418
          CFI (cfiCond791) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond791) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond791) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond791) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond791) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond791) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond791) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond791) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond791) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond791) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond791) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond791) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond791) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond791) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond791) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond791) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond791) CFA_SP SP+-2
          CFI (cfiCond791) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond792 Using cfiCommon0
          CFI (cfiCond792) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond792) Conditional ??CrossCallReturnLabel_419
          CFI (cfiCond792) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond792) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond792) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond792) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond792) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond792) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond792) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond792) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond792) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond792) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond792) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond792) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond792) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond792) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond792) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond792) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond792) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond792) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond792) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond792) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond792) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond792) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond792) CFA_SP SP+-2
          CFI (cfiCond792) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond793 Using cfiCommon0
          CFI (cfiCond793) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond793) Conditional ??CrossCallReturnLabel_420
          CFI (cfiCond793) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond793) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond793) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond793) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond793) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond793) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond793) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond793) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond793) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond793) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond793) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond793) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond793) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond793) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond793) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond793) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond793) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond793) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond793) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond793) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond793) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond793) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond793) CFA_SP SP+-2
          CFI (cfiCond793) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond794 Using cfiCommon0
          CFI (cfiCond794) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond794) Conditional ??CrossCallReturnLabel_421
          CFI (cfiCond794) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond794) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond794) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond794) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond794) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond794) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond794) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond794) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond794) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond794) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond794) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond794) CFA_SP SP+-2
          CFI (cfiCond794) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond795 Using cfiCommon0
          CFI (cfiCond795) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond795) Conditional ??CrossCallReturnLabel_422
          CFI (cfiCond795) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond795) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond795) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond795) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond795) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond795) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond795) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond795) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond795) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond795) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond795) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond795) CFA_SP SP+-2
          CFI (cfiCond795) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond796 Using cfiCommon0
          CFI (cfiCond796) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond796) Conditional ??CrossCallReturnLabel_423
          CFI (cfiCond796) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond796) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond796) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond796) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond796) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond796) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond796) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond796) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond796) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond796) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond796) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond796) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond796) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond796) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond796) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond796) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond796) CFA_SP SP+-2
          CFI (cfiCond796) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond797 Using cfiCommon0
          CFI (cfiCond797) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond797) Conditional ??CrossCallReturnLabel_424
          CFI (cfiCond797) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond797) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond797) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond797) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond797) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond797) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond797) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond797) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond797) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond797) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond797) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond797) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond797) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond797) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond797) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond797) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond797) CFA_SP SP+-2
          CFI (cfiCond797) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond798 Using cfiCommon0
          CFI (cfiCond798) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond798) Conditional ??CrossCallReturnLabel_425
          CFI (cfiCond798) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond798) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond798) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond798) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond798) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond798) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond798) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond798) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond798) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond798) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond798) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond798) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond798) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond798) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond798) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond798) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond798) CFA_SP SP+-2
          CFI (cfiCond798) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond799 Using cfiCommon0
          CFI (cfiCond799) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond799) Conditional ??CrossCallReturnLabel_426
          CFI (cfiCond799) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond799) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond799) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond799) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond799) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond799) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond799) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond799) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond799) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond799) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond799) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond799) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond799) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond799) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond799) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond799) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond799) CFA_SP SP+-2
          CFI (cfiCond799) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond800 Using cfiCommon0
          CFI (cfiCond800) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond800) Conditional ??CrossCallReturnLabel_427
          CFI (cfiCond800) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond800) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond800) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond800) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond800) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond800) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond800) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond800) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond800) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond800) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond800) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond800) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond800) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond800) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond800) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond800) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond800) CFA_SP SP+-2
          CFI (cfiCond800) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker801 Using cfiCommon1
          CFI (cfiPicker801) NoFunction
          CFI (cfiPicker801) Picker
        LCALL     ?Subroutine112 & 0xFFFF
??CrossCallReturnLabel_430:
        ORL       A,R1
        RET
          CFI EndBlock cfiCond782
          CFI EndBlock cfiCond783
          CFI EndBlock cfiCond784
          CFI EndBlock cfiCond785
          CFI EndBlock cfiCond786
          CFI EndBlock cfiCond787
          CFI EndBlock cfiCond788
          CFI EndBlock cfiCond789
          CFI EndBlock cfiCond790
          CFI EndBlock cfiCond791
          CFI EndBlock cfiCond792
          CFI EndBlock cfiCond793
          CFI EndBlock cfiCond794
          CFI EndBlock cfiCond795
          CFI EndBlock cfiCond796
          CFI EndBlock cfiCond797
          CFI EndBlock cfiCond798
          CFI EndBlock cfiCond799
          CFI EndBlock cfiCond800
          CFI EndBlock cfiPicker801
// 2252 
// 2253 /*********************************************************************
// 2254  * @fn      zclClosures_ProcessInDoorLockProgrammingEventNotification
// 2255  *
// 2256  * @brief   Process in the received Programming Event Notification cmd
// 2257  *
// 2258  * @param   pInMsg - pointer to the incoming message
// 2259  * @param   pCBs - pointer to the application callbacks
// 2260  *
// 2261  * @return  ZStatus_t
// 2262  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2263 static ZStatus_t zclClosures_ProcessInDoorLockProgrammingEventNotification( zclIncoming_t *pInMsg,
zclClosures_ProcessInDoorLockProgrammingEventNotification:
          CFI Block cfiBlock802 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockProgrammingEventNotification
        CODE
// 2264                                                                             zclClosures_DoorLockAppCallbacks_t *pCBs )
// 2265 {
        FUNCALL zclClosures_ProcessInDoorLockProgrammingEventNotification, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_ProcessInDoorLockProgrammingEventNotification, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V12
        REQUIRE ?V13
        MOV       A,#-0x16
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 13
        MOV       A,#-0xd
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       ?V12,R2
        MOV       ?V13,R3
// 2266   uint8 i;
// 2267   uint8 offset;
// 2268   uint8 calculatedArrayLen;
// 2269   zclDoorLockProgrammingEventNotification_t cmd;
// 2270   ZStatus_t status;
// 2271 
// 2272   if ( pCBs->pfnDoorLockProgrammingEventNotification )
        MOV       A,R4
        ADD       A,#0x66
        MOV       ?V8,A
        CLR       A
        ADDC      A,R5
        MOV       ?V9,A
        MOV       DPL,?V8
        LCALL     ??Subroutine180_0 & 0xFFFF
??CrossCallReturnLabel_420:
        JNZ       $+5
        LJMP      ??zclClosures_ProcessInDoorLockProgrammingEvent_1 & 0xFFFF
// 2273   {
// 2274     calculatedArrayLen = pInMsg->pData[11] + 1; // add first byte of string
        LCALL     ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_88:
        MOV       ?V10,A
// 2275 
// 2276     cmd.pData = zcl_mem_alloc( calculatedArrayLen );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_201:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine67 & 0xFFFF
// 2277     if ( !cmd.pData )
??CrossCallReturnLabel_152:
        JNZ       ??zclClosures_ProcessInDoorLockProgrammingEvent_2
// 2278     {
// 2279       return ( ZMemError );  // no memory
        MOV       R1,#0x10
        LJMP      ??zclClosures_ProcessInDoorLockProgrammingEvent_3 & 0xFFFF
// 2280     }
// 2281 
// 2282     cmd.programEventSource = pInMsg->pData[0];
??zclClosures_ProcessInDoorLockProgrammingEvent_2:
        LCALL     ?Subroutine25 & 0xFFFF
// 2283     cmd.programEventCode = pInMsg->pData[1];
??CrossCallReturnLabel_60:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine31 & 0xFFFF
// 2284     cmd.userID = BUILD_UINT16( pInMsg->pData[2], pInMsg->pData[3] );
??CrossCallReturnLabel_80:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine70 & 0xFFFF
// 2285     cmd.pin = pInMsg->pData[4];
??CrossCallReturnLabel_157:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine82 & 0xFFFF
// 2286     cmd.userType = pInMsg->pData[5];
??CrossCallReturnLabel_184:
        LCALL     ??Subroutine160_0 & 0xFFFF
??CrossCallReturnLabel_343:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine61 & 0xFFFF
// 2287     cmd.userStatus = pInMsg->pData[6];
??CrossCallReturnLabel_329:
        ADD       A,#0x6
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine37 & 0xFFFF
// 2288     cmd.zigBeeLocalTime = BUILD_UINT32( pInMsg->pData[7], pInMsg->pData[8], pInMsg->pData[9], pInMsg->pData[10] );
??CrossCallReturnLabel_397:
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine28 & 0xFFFF
??CrossCallReturnLabel_405:
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_326:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_318:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_383:
        LCALL     ?L_SHL
        MOV       R0,#?V0
        MOV       R1,#?V4
        LCALL     ?L_ADD
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine68 & 0xFFFF
// 2289     offset = 11;
??CrossCallReturnLabel_155:
        MOV       R1,#0xb
// 2290     for ( i = 0; i < calculatedArrayLen; i++ )
        MOV       R0,#0x0
        SJMP      ??zclClosures_ProcessInDoorLockProgrammingEvent_4
// 2291     {
// 2292       cmd.pData[i] = pInMsg->pData[offset++];
??zclClosures_ProcessInDoorLockProgrammingEvent_5:
        MOV       A,R1
        MOV       R2,A
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine190_0 & 0xFFFF
// 2293     }
??CrossCallReturnLabel_466:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R0
        MOV       R2,A
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_54:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_ProcessInDoorLockProgrammingEvent_4:
        MOV       A,R0
        CLR       C
        SUBB      A,?V10
        JC        ??zclClosures_ProcessInDoorLockProgrammingEvent_5
// 2294 
// 2295     status = ( pCBs->pfnDoorLockProgrammingEventNotification( pInMsg, &cmd ) );
        ; Setup parameters for indirect call
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       R2,?V12
        MOV       R3,?V13
        MOV       DPL,?V8
        MOV       DPH,?V9
        LCALL     ??Subroutine160_0 & 0xFFFF
??CrossCallReturnLabel_344:
        LCALL     ?CALL_IND
        MOV       A,R1
        MOV       R6,A
// 2296     zcl_mem_free( cmd.pData );
        ; Setup parameters for call to function osal_mem_free
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine176_0 & 0xFFFF
// 2297     return status;
// 2298   }
??CrossCallReturnLabel_393:
        SJMP      ??zclClosures_ProcessInDoorLockProgrammingEvent_3
// 2299 
// 2300  return ( ZFailure );
??zclClosures_ProcessInDoorLockProgrammingEvent_1:
        MOV       R1,#0x1
??zclClosures_ProcessInDoorLockProgrammingEvent_3:
        LJMP      ?Subroutine2 & 0xFFFF
// 2301 }
          CFI EndBlock cfiBlock802

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine90:
          CFI Block cfiCond803 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI Conditional ??CrossCallReturnLabel_200
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond804 Using cfiCommon0
          CFI (cfiCond804) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond804) Conditional ??CrossCallReturnLabel_201
          CFI (cfiCond804) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond804) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond804) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond804) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond804) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond804) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond804) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond804) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond804) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond804) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond804) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond804) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond804) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond804) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond804) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond804) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond804) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond804) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond804) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond804) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond804) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond804) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond804) CFA_SP SP+-2
          CFI (cfiCond804) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker805 Using cfiCommon1
          CFI (cfiPicker805) NoFunction
          CFI (cfiPicker805) Picker
        MOV       R2,A
        MOV       R3,#0x0
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V1,R3
        MOV       R1,?V1
        MOV       A,#0xb
        RET
          CFI EndBlock cfiCond803
          CFI EndBlock cfiCond804
          CFI EndBlock cfiPicker805

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine82:
          CFI Block cfiCond806 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI Conditional ??CrossCallReturnLabel_183
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond807 Using cfiCommon0
          CFI (cfiCond807) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond807) Conditional ??CrossCallReturnLabel_184
          CFI (cfiCond807) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond807) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond807) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond807) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond807) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond807) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond807) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond807) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond807) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond807) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond807) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond807) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond807) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond807) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond807) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond807) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond807) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond807) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond807) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond807) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond807) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond807) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond807) CFA_SP SP+-2
          CFI (cfiCond807) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond808 Using cfiCommon0
          CFI (cfiCond808) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond808) Conditional ??CrossCallReturnLabel_185
          CFI (cfiCond808) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond808) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond808) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond808) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond808) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond808) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond808) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond808) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond808) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond808) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond808) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond808) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond808) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond808) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond808) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond808) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond808) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond808) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond808) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond808) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond808) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond808) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond808) CFA_SP SP+-2
          CFI (cfiCond808) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond809 Using cfiCommon0
          CFI (cfiCond809) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond809) Conditional ??CrossCallReturnLabel_186
          CFI (cfiCond809) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond809) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond809) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond809) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond809) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond809) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond809) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond809) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond809) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond809) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond809) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond809) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond809) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond809) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond809) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond809) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond809) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond809) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond809) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond809) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond809) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond809) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond809) CFA_SP SP+-2
          CFI (cfiCond809) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker810 Using cfiCommon1
          CFI (cfiPicker810) NoFunction
          CFI (cfiPicker810) Picker
        LCALL     ?Subroutine121 & 0xFFFF
??CrossCallReturnLabel_250:
        RET
          CFI EndBlock cfiCond806
          CFI EndBlock cfiCond807
          CFI EndBlock cfiCond808
          CFI EndBlock cfiCond809
          CFI EndBlock cfiPicker810

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine121:
          CFI Block cfiCond811 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_327
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond812 Using cfiCommon0
          CFI (cfiCond812) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond812) Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_328
          CFI (cfiCond812) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond812) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond812) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond812) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond812) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond812) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond812) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond812) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond812) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond812) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond812) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond812) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond812) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond812) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond812) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond812) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond812) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond812) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond812) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond812) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond812) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond812) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond812) CFA_SP SP+-4
          CFI (cfiCond812) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond813 Using cfiCommon0
          CFI (cfiCond813) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond813) Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_329
          CFI (cfiCond813) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond813) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond813) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond813) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond813) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond813) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond813) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond813) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond813) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond813) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond813) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond813) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond813) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond813) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond813) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond813) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond813) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond813) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond813) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond813) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond813) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond813) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond813) CFA_SP SP+-4
          CFI (cfiCond813) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond814 Using cfiCommon0
          CFI (cfiCond814) Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI (cfiCond814) Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_158
          CFI (cfiCond814) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond814) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond814) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond814) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond814) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond814) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond814) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond814) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond814) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond814) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond814) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond814) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond814) CFA_SP SP+-4
          CFI (cfiCond814) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond815 Using cfiCommon0
          CFI (cfiCond815) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond815) Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_159
          CFI (cfiCond815) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond815) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond815) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond815) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond815) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond815) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond815) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond815) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond815) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond815) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond815) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond815) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond815) CFA_SP SP+-4
          CFI (cfiCond815) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond816 Using cfiCommon0
          CFI (cfiCond816) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond816) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_183
          CFI (cfiCond816) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond816) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond816) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond816) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond816) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond816) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond816) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond816) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond816) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond816) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond816) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond816) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond816) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond816) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond816) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond816) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond816) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond816) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond816) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond816) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond816) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond816) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond816) CFA_SP SP+-4
          CFI (cfiCond816) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond817 Using cfiCommon0
          CFI (cfiCond817) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond817) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_184
          CFI (cfiCond817) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond817) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond817) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond817) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond817) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond817) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond817) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond817) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond817) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond817) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond817) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond817) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond817) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond817) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond817) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond817) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond817) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond817) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond817) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond817) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond817) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond817) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond817) CFA_SP SP+-4
          CFI (cfiCond817) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond818 Using cfiCommon0
          CFI (cfiCond818) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond818) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_185
          CFI (cfiCond818) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond818) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond818) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond818) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond818) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond818) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond818) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond818) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond818) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond818) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond818) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond818) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond818) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond818) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond818) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond818) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond818) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond818) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond818) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond818) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond818) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond818) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond818) CFA_SP SP+-4
          CFI (cfiCond818) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond819 Using cfiCommon0
          CFI (cfiCond819) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond819) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_186
          CFI (cfiCond819) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond819) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond819) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond819) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond819) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond819) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond819) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond819) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond819) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond819) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond819) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond819) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond819) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond819) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond819) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond819) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond819) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond819) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond819) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond819) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond819) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond819) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond819) CFA_SP SP+-4
          CFI (cfiCond819) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond820 Using cfiCommon0
          CFI (cfiCond820) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond820) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_79
          CFI (cfiCond820) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond820) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond820) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond820) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond820) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond820) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond820) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond820) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond820) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond820) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond820) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond820) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond820) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond820) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond820) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond820) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond820) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond820) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond820) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond820) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond820) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond820) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond820) CFA_SP SP+-4
          CFI (cfiCond820) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond821 Using cfiCommon0
          CFI (cfiCond821) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond821) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_80
          CFI (cfiCond821) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond821) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond821) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond821) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond821) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond821) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond821) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond821) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond821) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond821) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond821) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond821) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond821) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond821) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond821) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond821) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond821) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond821) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond821) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond821) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond821) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond821) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond821) CFA_SP SP+-4
          CFI (cfiCond821) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond822 Using cfiCommon0
          CFI (cfiCond822) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond822) Conditional ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_59
          CFI (cfiCond822) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond822) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond822) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond822) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond822) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond822) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond822) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond822) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond822) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond822) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond822) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond822) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond822) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond822) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond822) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond822) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond822) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond822) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond822) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond822) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond822) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond822) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond822) CFA_SP SP+-4
          CFI (cfiCond822) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond823 Using cfiCommon0
          CFI (cfiCond823) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond823) Conditional ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_60
          CFI (cfiCond823) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond823) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond823) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond823) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond823) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond823) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond823) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond823) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond823) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond823) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond823) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond823) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond823) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond823) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond823) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond823) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond823) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond823) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond823) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond823) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond823) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond823) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond823) CFA_SP SP+-4
          CFI (cfiCond823) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond824 Using cfiCommon0
          CFI (cfiCond824) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond824) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_180
          CFI (cfiCond824) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond824) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond824) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond824) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond824) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond824) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond824) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond824) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond824) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond824) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond824) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond824) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond824) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond824) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond824) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond824) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond824) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond824) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond824) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond824) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond824) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond824) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond824) CFA_SP SP+-4
          CFI (cfiCond824) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond825 Using cfiCommon0
          CFI (cfiCond825) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond825) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_181
          CFI (cfiCond825) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond825) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond825) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond825) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond825) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond825) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond825) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond825) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond825) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond825) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond825) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond825) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond825) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond825) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond825) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond825) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond825) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond825) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond825) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond825) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond825) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond825) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond825) CFA_SP SP+-4
          CFI (cfiCond825) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond826 Using cfiCommon0
          CFI (cfiCond826) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond826) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_182
          CFI (cfiCond826) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond826) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond826) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond826) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond826) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond826) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond826) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond826) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond826) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond826) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond826) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond826) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond826) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond826) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond826) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond826) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond826) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond826) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond826) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond826) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond826) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond826) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond826) CFA_SP SP+-4
          CFI (cfiCond826) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond827 Using cfiCommon0
          CFI (cfiCond827) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond827) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_16
          CFI (cfiCond827) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond827) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond827) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond827) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond827) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond827) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond827) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond827) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond827) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond827) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond827) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond827) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond827) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond827) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond827) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond827) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond827) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond827) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond827) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond827) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond827) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond827) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond827) CFA_SP SP+-4
          CFI (cfiCond827) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond828 Using cfiCommon0
          CFI (cfiCond828) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond828) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_17
          CFI (cfiCond828) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond828) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond828) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond828) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond828) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond828) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond828) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond828) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond828) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond828) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond828) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond828) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond828) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond828) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond828) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond828) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond828) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond828) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond828) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond828) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond828) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond828) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond828) CFA_SP SP+-4
          CFI (cfiCond828) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker829 Using cfiCommon1
          CFI (cfiPicker829) NoFunction
          CFI (cfiPicker829) Picker
        MOVX      @DPTR,A
        MOV       DPL,R6
        MOV       DPH,R7
        RET
          CFI EndBlock cfiCond811
          CFI EndBlock cfiCond812
          CFI EndBlock cfiCond813
          CFI EndBlock cfiCond814
          CFI EndBlock cfiCond815
          CFI EndBlock cfiCond816
          CFI EndBlock cfiCond817
          CFI EndBlock cfiCond818
          CFI EndBlock cfiCond819
          CFI EndBlock cfiCond820
          CFI EndBlock cfiCond821
          CFI EndBlock cfiCond822
          CFI EndBlock cfiCond823
          CFI EndBlock cfiCond824
          CFI EndBlock cfiCond825
          CFI EndBlock cfiCond826
          CFI EndBlock cfiCond827
          CFI EndBlock cfiCond828
          CFI EndBlock cfiPicker829

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine70:
          CFI Block cfiCond830 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_156
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond831 Using cfiCommon0
          CFI (cfiCond831) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond831) Conditional ??CrossCallReturnLabel_157
          CFI (cfiCond831) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond831) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond831) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond831) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond831) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond831) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond831) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond831) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond831) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond831) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond831) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond831) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond831) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond831) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond831) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond831) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond831) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond831) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond831) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond831) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond831) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond831) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond831) CFA_SP SP+-2
          CFI (cfiCond831) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker832 Using cfiCommon1
          CFI (cfiPicker832) NoFunction
          CFI (cfiPicker832) Picker
        MOV       A,R4
        LCALL     ?Subroutine124 & 0xFFFF
??CrossCallReturnLabel_262:
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond830
          CFI EndBlock cfiCond831
          CFI EndBlock cfiPicker832

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine124:
          CFI Block cfiCond833 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetPINCode
          CFI Conditional ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_8
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond834 Using cfiCommon0
          CFI (cfiCond834) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond834) Conditional ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_9
          CFI (cfiCond834) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond834) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond834) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond834) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond834) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond834) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond834) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond834) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond834) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond834) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond834) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond834) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond834) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond834) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond834) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond834) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond834) CFA_SP SP+-4
          CFI (cfiCond834) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond835 Using cfiCommon0
          CFI (cfiCond835) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond835) Conditional ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_10
          CFI (cfiCond835) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond835) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond835) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond835) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond835) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond835) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond835) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond835) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond835) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond835) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond835) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond835) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond835) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond835) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond835) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond835) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond835) CFA_SP SP+-4
          CFI (cfiCond835) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond836 Using cfiCommon0
          CFI (cfiCond836) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond836) Conditional ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_11
          CFI (cfiCond836) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond836) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond836) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond836) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond836) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond836) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond836) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond836) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond836) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond836) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond836) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond836) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond836) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond836) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond836) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond836) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond836) CFA_SP SP+-4
          CFI (cfiCond836) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond837 Using cfiCommon0
          CFI (cfiCond837) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond837) Conditional ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_156
          CFI (cfiCond837) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond837) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond837) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond837) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond837) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond837) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond837) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond837) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond837) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond837) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond837) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond837) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond837) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond837) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond837) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond837) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond837) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond837) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond837) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond837) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond837) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond837) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond837) CFA_SP SP+-4
          CFI (cfiCond837) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond838 Using cfiCommon0
          CFI (cfiCond838) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond838) Conditional ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_157
          CFI (cfiCond838) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond838) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond838) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond838) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond838) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond838) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond838) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond838) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond838) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond838) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond838) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond838) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond838) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond838) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond838) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond838) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond838) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond838) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond838) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond838) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond838) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond838) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond838) CFA_SP SP+-4
          CFI (cfiCond838) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker839 Using cfiCommon1
          CFI (cfiPicker839) NoFunction
          CFI (cfiPicker839) Picker
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        MOVX      @DPTR,A
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond833
          CFI EndBlock cfiCond834
          CFI EndBlock cfiCond835
          CFI EndBlock cfiCond836
          CFI EndBlock cfiCond837
          CFI EndBlock cfiCond838
          CFI EndBlock cfiPicker839

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine39:
          CFI Block cfiCond840 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI Conditional ??CrossCallReturnLabel_87
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond841 Using cfiCommon0
          CFI (cfiCond841) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond841) Conditional ??CrossCallReturnLabel_88
          CFI (cfiCond841) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond841) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond841) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond841) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond841) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond841) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond841) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond841) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond841) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond841) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond841) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond841) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond841) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond841) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond841) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond841) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond841) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond841) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond841) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond841) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond841) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond841) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond841) CFA_SP SP+-2
          CFI (cfiCond841) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker842 Using cfiCommon1
          CFI (cfiPicker842) NoFunction
          CFI (cfiPicker842) Picker
        LCALL     ?Subroutine128 & 0xFFFF
??CrossCallReturnLabel_270:
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        XCH       A,R0
        ADD       A,#0xb
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        INC       A
        RET
          CFI EndBlock cfiCond840
          CFI EndBlock cfiCond841
          CFI EndBlock cfiPicker842

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine128:
          CFI Block cfiCond843 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_269
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond844 Using cfiCommon0
          CFI (cfiCond844) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond844) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_87
          CFI (cfiCond844) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond844) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond844) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond844) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond844) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond844) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond844) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond844) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond844) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond844) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond844) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond844) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond844) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond844) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond844) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond844) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond844) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond844) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond844) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond844) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond844) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond844) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond844) CFA_SP SP+-4
          CFI (cfiCond844) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond845 Using cfiCommon0
          CFI (cfiCond845) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond845) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_88
          CFI (cfiCond845) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond845) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond845) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond845) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond845) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond845) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond845) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond845) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond845) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond845) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond845) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond845) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond845) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond845) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond845) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond845) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond845) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond845) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond845) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond845) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond845) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond845) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond845) CFA_SP SP+-4
          CFI (cfiCond845) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker846 Using cfiCommon1
          CFI (cfiPicker846) NoFunction
          CFI (cfiPicker846) Picker
        MOV       A,R2
        ADD       A,#0x8
        MOV       R6,A
        CLR       A
        ADDC      A,?V13
        MOV       R7,A
        MOV       DPL,R6
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond843
          CFI EndBlock cfiCond844
          CFI EndBlock cfiCond845
          CFI EndBlock cfiPicker846

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine31:
          CFI Block cfiCond847 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_79
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond848 Using cfiCommon0
          CFI (cfiCond848) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond848) Conditional ??CrossCallReturnLabel_80
          CFI (cfiCond848) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond848) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond848) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond848) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond848) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond848) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond848) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond848) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond848) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond848) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond848) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond848) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond848) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond848) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond848) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond848) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond848) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond848) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond848) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond848) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond848) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond848) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond848) CFA_SP SP+-2
          CFI (cfiCond848) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker849 Using cfiCommon1
          CFI (cfiPicker849) NoFunction
          CFI (cfiPicker849) Picker
        LCALL     ?Subroutine121 & 0xFFFF
??CrossCallReturnLabel_251:
        LCALL     ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_224:
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R3,A
        MOV       A,#0x2
        RET
          CFI EndBlock cfiCond847
          CFI EndBlock cfiCond848
          CFI EndBlock cfiPicker849

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine25:
          CFI Block cfiCond850 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_59
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond851 Using cfiCommon0
          CFI (cfiCond851) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond851) Conditional ??CrossCallReturnLabel_60
          CFI (cfiCond851) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond851) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond851) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond851) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond851) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond851) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond851) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond851) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond851) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond851) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond851) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond851) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond851) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond851) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond851) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond851) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond851) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond851) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond851) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond851) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond851) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond851) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond851) CFA_SP SP+-2
          CFI (cfiCond851) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker852 Using cfiCommon1
          CFI (cfiPicker852) NoFunction
          CFI (cfiPicker852) Picker
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine113 & 0xFFFF
??CrossCallReturnLabel_236:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine121 & 0xFFFF
??CrossCallReturnLabel_252:
        LCALL     ?Subroutine118 & 0xFFFF
??CrossCallReturnLabel_351:
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond850
          CFI EndBlock cfiCond851
          CFI EndBlock cfiPicker852

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine113:
          CFI Block cfiCond853 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_89
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond854 Using cfiCommon0
          CFI (cfiCond854) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond854) Conditional ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_90
          CFI (cfiCond854) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond854) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond854) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond854) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond854) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond854) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond854) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond854) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond854) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond854) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond854) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond854) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond854) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond854) CFA_SP SP+-4
          CFI (cfiCond854) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond855 Using cfiCommon0
          CFI (cfiCond855) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond855) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_59
          CFI (cfiCond855) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond855) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond855) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond855) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond855) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond855) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond855) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond855) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond855) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond855) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond855) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond855) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond855) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond855) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond855) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond855) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond855) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond855) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond855) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond855) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond855) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond855) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond855) CFA_SP SP+-4
          CFI (cfiCond855) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond856 Using cfiCommon0
          CFI (cfiCond856) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond856) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_60
          CFI (cfiCond856) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond856) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond856) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond856) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond856) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond856) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond856) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond856) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond856) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond856) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond856) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond856) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond856) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond856) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond856) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond856) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond856) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond856) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond856) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond856) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond856) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond856) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond856) CFA_SP SP+-4
          CFI (cfiCond856) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker857 Using cfiCommon1
          CFI (cfiPicker857) NoFunction
          CFI (cfiPicker857) Picker
        LCALL     ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_480:
        RET
          CFI EndBlock cfiCond853
          CFI EndBlock cfiCond854
          CFI EndBlock cfiCond855
          CFI EndBlock cfiCond856
          CFI EndBlock cfiPicker857

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine135:
          CFI Block cfiCond858 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_480, ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_89
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond859 Using cfiCommon0
          CFI (cfiCond859) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond859) Conditional ??CrossCallReturnLabel_480, ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_90
          CFI (cfiCond859) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond859) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond859) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond859) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond859) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond859) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond859) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond859) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond859) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond859) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond859) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond859) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond859) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond859) CFA_SP SP+-6
          CFI (cfiCond859) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond860 Using cfiCommon0
          CFI (cfiCond860) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond860) Conditional ??CrossCallReturnLabel_480, ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_59
          CFI (cfiCond860) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond860) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond860) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond860) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond860) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond860) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond860) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond860) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond860) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond860) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond860) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond860) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond860) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond860) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond860) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond860) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond860) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond860) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond860) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond860) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond860) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond860) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond860) CFA_SP SP+-6
          CFI (cfiCond860) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond861 Using cfiCommon0
          CFI (cfiCond861) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond861) Conditional ??CrossCallReturnLabel_480, ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_60
          CFI (cfiCond861) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond861) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond861) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond861) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond861) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond861) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond861) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond861) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond861) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond861) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond861) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond861) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond861) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond861) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond861) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond861) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond861) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond861) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond861) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond861) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond861) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond861) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond861) CFA_SP SP+-6
          CFI (cfiCond861) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond862 Using cfiCommon0
          CFI (cfiCond862) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond862) Conditional ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_477, ??CrossCallReturnLabel_4
          CFI (cfiCond862) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond862) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond862) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond862) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond862) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond862) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond862) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond862) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond862) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond862) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond862) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond862) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond862) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond862) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond862) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond862) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond862) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond862) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond862) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond862) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond862) CFA_SP SP+-6
          CFI (cfiCond862) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond863 Using cfiCommon0
          CFI (cfiCond863) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond863) Conditional ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_477, ??CrossCallReturnLabel_5
          CFI (cfiCond863) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond863) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond863) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond863) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond863) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond863) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond863) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond863) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond863) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond863) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond863) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond863) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond863) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond863) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond863) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond863) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond863) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond863) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond863) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond863) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond863) CFA_SP SP+-6
          CFI (cfiCond863) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond864 Using cfiCommon0
          CFI (cfiCond864) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond864) Conditional ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_477, ??CrossCallReturnLabel_6
          CFI (cfiCond864) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond864) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond864) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond864) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond864) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond864) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond864) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond864) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond864) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond864) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond864) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond864) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond864) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond864) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond864) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond864) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond864) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond864) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond864) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond864) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond864) CFA_SP SP+-6
          CFI (cfiCond864) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond865 Using cfiCommon0
          CFI (cfiCond865) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond865) Conditional ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_477, ??CrossCallReturnLabel_7
          CFI (cfiCond865) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond865) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond865) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond865) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond865) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond865) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond865) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond865) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond865) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond865) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond865) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond865) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond865) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond865) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond865) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond865) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond865) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond865) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond865) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond865) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond865) CFA_SP SP+-6
          CFI (cfiCond865) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond866 Using cfiCommon0
          CFI (cfiCond866) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond866) Conditional ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_478, ??CrossCallReturnLabel_109
          CFI (cfiCond866) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond866) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond866) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond866) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond866) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond866) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond866) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond866) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond866) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond866) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond866) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond866) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond866) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond866) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond866) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond866) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond866) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond866) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond866) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond866) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond866) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond866) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond866) CFA_SP SP+-6
          CFI (cfiCond866) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond867 Using cfiCommon0
          CFI (cfiCond867) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond867) Conditional ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_478, ??CrossCallReturnLabel_110
          CFI (cfiCond867) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond867) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond867) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond867) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond867) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond867) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond867) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond867) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond867) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond867) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond867) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond867) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond867) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond867) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond867) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond867) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond867) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond867) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond867) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond867) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond867) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond867) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond867) CFA_SP SP+-6
          CFI (cfiCond867) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond868 Using cfiCommon0
          CFI (cfiCond868) Function zclClosures_SendDoorLockRequest
          CFI (cfiCond868) Conditional ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_479, ??CrossCallReturnLabel_441
          CFI (cfiCond868) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond868) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond868) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond868) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond868) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond868) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond868) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond868) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond868) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond868) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond868) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond868) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond868) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond868) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond868) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond868) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond868) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond868) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond868) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond868) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond868) CFA_SP SP+-6
          CFI (cfiCond868) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond869 Using cfiCommon0
          CFI (cfiCond869) Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI (cfiCond869) Conditional ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_479, ??CrossCallReturnLabel_442
          CFI (cfiCond869) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond869) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond869) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond869) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond869) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond869) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond869) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond869) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond869) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond869) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond869) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond869) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond869) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond869) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond869) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond869) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond869) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond869) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond869) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond869) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond869) CFA_SP SP+-6
          CFI (cfiCond869) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond870 Using cfiCommon0
          CFI (cfiCond870) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond870) Conditional ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_479, ??CrossCallReturnLabel_443
          CFI (cfiCond870) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond870) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond870) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond870) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond870) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond870) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond870) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond870) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond870) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond870) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond870) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond870) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond870) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond870) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond870) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond870) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond870) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond870) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond870) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond870) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond870) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond870) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond870) CFA_SP SP+-6
          CFI (cfiCond870) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond871 Using cfiCommon0
          CFI (cfiCond871) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond871) Conditional ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_479, ??CrossCallReturnLabel_440
          CFI (cfiCond871) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond871) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond871) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond871) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond871) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond871) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond871) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond871) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond871) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond871) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond871) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond871) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond871) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond871) CFA_SP SP+-6
          CFI (cfiCond871) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker872 Using cfiCommon1
          CFI (cfiPicker872) NoFunction
          CFI (cfiPicker872) Picker
        LCALL     ?Subroutine140 & 0xFFFF
??CrossCallReturnLabel_483:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond858
          CFI EndBlock cfiCond859
          CFI EndBlock cfiCond860
          CFI EndBlock cfiCond861
          CFI EndBlock cfiCond862
          CFI EndBlock cfiCond863
          CFI EndBlock cfiCond864
          CFI EndBlock cfiCond865
          CFI EndBlock cfiCond866
          CFI EndBlock cfiCond867
          CFI EndBlock cfiCond868
          CFI EndBlock cfiCond869
          CFI EndBlock cfiCond870
          CFI EndBlock cfiCond871
          CFI EndBlock cfiPicker872
// 2302 
// 2303 #endif //ZCL_DOORLOCK_EXT
// 2304 
// 2305 /*********************************************************************
// 2306  * @fn      zclClosures_SendDoorLockRequest
// 2307  *
// 2308  * @brief   Call to send out a Door Lock Lock/Unlock/Toggle Command
// 2309  *
// 2310  * @param   srcEP - Sending application's endpoint
// 2311  * @param   dstAddr - where you want the message to go
// 2312  * @param   cmd - COMMAND_CLOSURES_LOCK_DOOR, COMMAND_CLOSURES_UNLOCK_DOOR, COMMAND_CLOSURES_TOGGLE_DOOR
// 2313  * @param   pPayload:
// 2314  *           aPinRfidCode - PIN/RFID code in ZCL Octet String Format
// 2315  * @param   disableDefaultRsp - decides default response is necessary or not
// 2316  * @param   seqNum - sequence number of the command packet
// 2317  *
// 2318  * @return  ZStatus_t
// 2319  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2320 ZStatus_t zclClosures_SendDoorLockRequest( uint8 srcEP, afAddrType_t *dstAddr, uint8 cmd,
zclClosures_SendDoorLockRequest:
          CFI Block cfiBlock873 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockRequest
        CODE
// 2321                                            zclDoorLock_t *pPayload,
// 2322                                            uint8 disableDefaultRsp, uint8 seqNum )
// 2323 {
        FUNCALL zclClosures_SendDoorLockRequest, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockRequest, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV       A,#-0x14
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 0
        MOV       ?V3,R1
        MOV       ?V8,R2
        MOV       ?V9,R3
        MOV       ?V6,R4
        MOV       ?V2,R5
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V5,A
// 2324   uint8 i;
// 2325   uint8 *pBuf;  // variable length payload
// 2326   uint8 calculatedBufSize;
// 2327   ZStatus_t status;
// 2328 
// 2329   // first octet of PIN/RFID Code variable string identifies its length
// 2330   calculatedBufSize = pPayload->pPinRfidCode[0] + 1;  // add first byte of string
        MOV       DPL,?V4
        LCALL     ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_441:
        MOV       ?V7,A
// 2331 
// 2332   pBuf = zcl_mem_alloc( calculatedBufSize );
        MOV       R6,A
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,#0x0
        LCALL     ??Subroutine200_0 & 0xFFFF
// 2333   if ( !pBuf )
??CrossCallReturnLabel_526:
        JNZ       ??zclClosures_SendDoorLockRequest_0
// 2334   {
// 2335     return ( ZMemError );  // no memory
        MOV       R1,#0x10
        LJMP      ??CrossCallReturnLabel_436 & 0xFFFF
// 2336   }
// 2337 
// 2338   // over-the-air is always little endian. Break into a byte stream.
// 2339   for ( i = 0; i < calculatedBufSize; i++ )
??zclClosures_SendDoorLockRequest_0:
        MOV       R2,#0x0
        SJMP      ??zclClosures_SendDoorLockRequest_1
// 2340   {
// 2341     pBuf[i] = pPayload->pPinRfidCode[i];
??zclClosures_SendDoorLockRequest_2:
        MOV       A,R2
        MOV       R0,A
        MOV       DPL,?V4
        MOV       DPH,?V5
        LCALL     ?Subroutine51 & 0xFFFF
// 2342   }
??CrossCallReturnLabel_112:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,?V0
        ADD       A,R0
        MOV       DPL,A
        CLR       A
        ADDC      A,?V1
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R2
??zclClosures_SendDoorLockRequest_1:
        MOV       A,R2
        CLR       C
        SUBB      A,?V7
        JC        ??zclClosures_SendDoorLockRequest_2
// 2343 
// 2344   status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2345                             cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 2346                             disableDefaultRsp, 0, seqNum, calculatedBufSize, pBuf );
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       ?V4,R6
        MOV       ?V5,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       A,#0x1a
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V4,A
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        CLR       A
        MOV       ?V4,A
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       A,?V2
        MOV       ?V4,A
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       ?V4,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       ?V4,#0x1
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       A,?V6
        MOV       ?V4,A
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       R2,?V8
        MOV       R3,?V9
        MOV       R1,?V3
        LCALL     ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_501:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,R1
        MOV       R6,A
// 2347   zcl_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     ??Subroutine182_0 & 0xFFFF
// 2348   return status;
??CrossCallReturnLabel_436:
        LJMP      ??Subroutine198_0 & 0xFFFF
// 2349 }
          CFI EndBlock cfiBlock873

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine51:
          CFI Block cfiCond874 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLock
          CFI Conditional ??CrossCallReturnLabel_111
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond875 Using cfiCommon0
          CFI (cfiCond875) Function zclClosures_SendDoorLockRequest
          CFI (cfiCond875) Conditional ??CrossCallReturnLabel_112
          CFI (cfiCond875) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond875) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond875) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond875) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond875) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond875) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond875) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond875) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond875) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond875) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond875) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond875) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond875) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond875) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond875) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond875) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond875) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond875) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond875) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond875) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond875) CFA_SP SP+-2
          CFI (cfiCond875) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker876 Using cfiCommon1
          CFI (cfiPicker876) NoFunction
          CFI (cfiPicker876) Picker
        LCALL     ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_235:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond874
          CFI EndBlock cfiCond875
          CFI EndBlock cfiPicker876

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine108:
          CFI Block cfiCond877 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLock
          CFI Conditional ??CrossCallReturnLabel_234
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond878 Using cfiCommon0
          CFI (cfiCond878) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond878) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_111
          CFI (cfiCond878) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond878) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond878) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond878) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond878) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond878) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond878) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond878) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond878) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond878) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond878) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond878) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond878) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond878) CFA_SP SP+-4
          CFI (cfiCond878) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond879 Using cfiCommon0
          CFI (cfiCond879) Function zclClosures_SendDoorLockRequest
          CFI (cfiCond879) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_112
          CFI (cfiCond879) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond879) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond879) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond879) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond879) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond879) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond879) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond879) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond879) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond879) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond879) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond879) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond879) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond879) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond879) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond879) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond879) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond879) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond879) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond879) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond879) CFA_SP SP+-4
          CFI (cfiCond879) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker880 Using cfiCommon1
          CFI (cfiPicker880) NoFunction
          CFI (cfiPicker880) Picker
        MOVX      A,@DPTR
        ADD       A,R0
        MOV       R3,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       DPL,R3
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond877
          CFI EndBlock cfiCond878
          CFI EndBlock cfiCond879
          CFI EndBlock cfiPicker880
// 2350 
// 2351 /*********************************************************************
// 2352  * @fn      zclClosures_SendDoorLockUnlockTimeoutRequest
// 2353  *
// 2354  * @brief   Call to send out a Unlock with Timeout Command
// 2355  *
// 2356  * @param   srcEP - Sending application's endpoint
// 2357  * @param   dstAddr - where you want the message to go
// 2358  * @param   pPayload:
// 2359  *           timeout - The timeout in seconds
// 2360  *           aPinRfidCode - PIN/RFID code in ZCL Octet String Format
// 2361  * @param   disableDefaultRsp - decides default response is necessary or not
// 2362  * @param   seqNum - sequence number of the command packet
// 2363  *
// 2364  * @return  ZStatus_t
// 2365  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2366 ZStatus_t zclClosures_SendDoorLockUnlockTimeoutRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockUnlockTimeoutRequest:
          CFI Block cfiBlock881 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockUnlockTimeoutRequest
        CODE
// 2367                                                         zclDoorLockUnlockTimeout_t *pPayload,
// 2368                                                         uint8 disableDefaultRsp, uint8 seqNum )
// 2369 {
        FUNCALL zclClosures_SendDoorLockUnlockTimeoutRequest, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockUnlockTimeoutRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockUnlockTimeoutRequest, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV       A,#-0x14
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 0
        MOV       ?V2,R1
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
        MOV       ?V0,R4
        MOV       ?V1,R5
// 2370   uint8 i;
// 2371   uint8 *pBuf;  // variable length payload
// 2372   uint8 offset;
// 2373   uint8 calculatedArrayLen;
// 2374   uint8 calculatedBufSize;
// 2375   ZStatus_t status;
// 2376 
// 2377   // first octet of PIN/RFID Code variable string identifies its length
// 2378   calculatedArrayLen = pPayload->pPinRfidCode[0] + 1;  // add first byte of string
        MOV       A,R4
        ADD       A,#0x2
        LCALL     ?Subroutine131 & 0xFFFF
??CrossCallReturnLabel_275:
        LCALL     ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_442:
        MOV       ?V3,A
// 2379 
// 2380   // determine total size of buffer
// 2381   calculatedBufSize = calculatedArrayLen + PAYLOAD_LEN_UNLOCK_TIMEOUT;
        MOV       A,#0x2
        ADD       A,?V3
// 2382 
// 2383   pBuf = zcl_mem_alloc( calculatedBufSize );
        LCALL     ?Subroutine129 & 0xFFFF
// 2384   if ( !pBuf )
??CrossCallReturnLabel_271:
        JNZ       ??zclClosures_SendDoorLockUnlockTimeoutRequest_0
// 2385   {
// 2386     return ( ZMemError );  // no memory
        MOV       R1,#0x10
        SJMP      ??CrossCallReturnLabel_431
// 2387   }
// 2388 
// 2389   // over-the-air is always little endian. Break into a byte stream.
// 2390   pBuf[0] = LO_UINT16(pPayload->timeout);
??zclClosures_SendDoorLockUnlockTimeoutRequest_0:
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ??Subroutine189_0 & 0xFFFF
??CrossCallReturnLabel_455:
        LCALL     ?Subroutine86 & 0xFFFF
// 2391   pBuf[1] = HI_UINT16(pPayload->timeout);
??CrossCallReturnLabel_193:
        LCALL     ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_457:
        INC       DPTR
        MOVX      @DPTR,A
// 2392   offset = 2;
        MOV       R1,#0x2
// 2393   for ( i = 0; i < calculatedArrayLen; i++ )
        MOV       R0,#0x0
        SJMP      ??zclClosures_SendDoorLockUnlockTimeoutRequest_1
// 2394   {
// 2395     pBuf[offset++] = pPayload->pPinRfidCode[i];
??zclClosures_SendDoorLockUnlockTimeoutRequest_2:
        LCALL     ?Subroutine10 & 0xFFFF
// 2396   }
??CrossCallReturnLabel_468:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_209:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_SendDoorLockUnlockTimeoutRequest_1:
        MOV       A,R0
        CLR       C
        SUBB      A,?V3
        JC        ??zclClosures_SendDoorLockUnlockTimeoutRequest_2
// 2397 
// 2398   status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2399                             COMMAND_CLOSURES_UNLOCK_WITH_TIMEOUT, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 2400                             disableDefaultRsp, 0, seqNum, calculatedBufSize, pBuf );
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V6
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       R0,#?V8
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       A,#0x19
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_18:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        CLR       A
        MOV       ?V0,A
        MOV       ?V1,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       A,#0x1b
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_19:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       ?V0,#0x3
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        LCALL     ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_496:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        LCALL     ?Subroutine93 & 0xFFFF
// 2401   zcl_mem_free( pBuf );
// 2402   return status;
??CrossCallReturnLabel_431:
        LJMP      ??Subroutine198_0 & 0xFFFF
// 2403 }
          CFI EndBlock cfiBlock881

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine93:
          CFI Block cfiCond882 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI Conditional ??CrossCallReturnLabel_431
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond883 Using cfiCommon0
          CFI (cfiCond883) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond883) Conditional ??CrossCallReturnLabel_432
          CFI (cfiCond883) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond883) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond883) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond883) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond883) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond883) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond883) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond883) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond883) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond883) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond883) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond883) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond883) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond883) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond883) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond883) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond883) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond883) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond883) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond883) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond883) CFA_SP SP+-2
          CFI (cfiCond883) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond884 Using cfiCommon0
          CFI (cfiCond884) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond884) Conditional ??CrossCallReturnLabel_433
          CFI (cfiCond884) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond884) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond884) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond884) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond884) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond884) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond884) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond884) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond884) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond884) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond884) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond884) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond884) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond884) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond884) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond884) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond884) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond884) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond884) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond884) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond884) CFA_SP SP+-2
          CFI (cfiCond884) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond885 Using cfiCommon0
          CFI (cfiCond885) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond885) Conditional ??CrossCallReturnLabel_434
          CFI (cfiCond885) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond885) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond885) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond885) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond885) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond885) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond885) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond885) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond885) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond885) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond885) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond885) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond885) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond885) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond885) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond885) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond885) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond885) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond885) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond885) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond885) CFA_SP SP+-2
          CFI (cfiCond885) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond886 Using cfiCommon0
          CFI (cfiCond886) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond886) Conditional ??CrossCallReturnLabel_435
          CFI (cfiCond886) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond886) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond886) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond886) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond886) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond886) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond886) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond886) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond886) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond886) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond886) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond886) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond886) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond886) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond886) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond886) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond886) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond886) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond886) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond886) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond886) CFA_SP SP+-2
          CFI (cfiCond886) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker887 Using cfiCommon1
          CFI (cfiPicker887) NoFunction
          CFI (cfiPicker887) Picker
        MOV       A,R1
        MOV       R6,A
        ; Setup parameters for call to function osal_mem_free
        ; Setup parameters for call to function osal_mem_free
        ; Setup parameters for call to function osal_mem_free
        ; Setup parameters for call to function osal_mem_free
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V6
        MOV       R3,?V7
          CFI EndBlock cfiCond882
          CFI EndBlock cfiCond883
          CFI EndBlock cfiCond884
          CFI EndBlock cfiCond885
          CFI EndBlock cfiCond886
          CFI EndBlock cfiPicker887
        REQUIRE ??Subroutine182_0
        ; // Fall through to label ??Subroutine182_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine182_0:
          CFI Block cfiCond888 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockRequest
          CFI Conditional ??CrossCallReturnLabel_436
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond889 Using cfiCommon0
          CFI (cfiCond889) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond889) Conditional ??CrossCallReturnLabel_437
          CFI (cfiCond889) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond889) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond889) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond889) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond889) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond889) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond889) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond889) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond889) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond889) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond889) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond889) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond889) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond889) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond889) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond889) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond889) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond889) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond889) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond889) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond889) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond889) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond889) CFA_SP SP+-2
          CFI (cfiCond889) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond890 Using cfiCommon0
          CFI (cfiCond890) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond890) Conditional ??CrossCallReturnLabel_438
          CFI (cfiCond890) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond890) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond890) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond890) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond890) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond890) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond890) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond890) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond890) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond890) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond890) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond890) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond890) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond890) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond890) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond890) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond890) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond890) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond890) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond890) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond890) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond890) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond890) CFA_SP SP+-2
          CFI (cfiCond890) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond891 Using cfiCommon0
          CFI (cfiCond891) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond891) Conditional ??CrossCallReturnLabel_439
          CFI (cfiCond891) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond891) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond891) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond891) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond891) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond891) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond891) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond891) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond891) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond891) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond891) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond891) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond891) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond891) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond891) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond891) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond891) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond891) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond891) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond891) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond891) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond891) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond891) CFA_SP SP+-2
          CFI (cfiCond891) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond892 Using cfiCommon0
          CFI (cfiCond892) Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI (cfiCond892) Conditional ??CrossCallReturnLabel_431
          CFI (cfiCond892) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond892) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond892) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond892) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond892) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond892) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond892) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond892) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond892) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond892) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond892) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond892) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond892) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond892) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond892) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond892) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond892) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond892) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond892) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond892) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond892) CFA_SP SP+-2
          CFI (cfiCond892) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond893 Using cfiCommon0
          CFI (cfiCond893) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond893) Conditional ??CrossCallReturnLabel_432
          CFI (cfiCond893) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond893) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond893) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond893) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond893) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond893) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond893) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond893) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond893) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond893) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond893) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond893) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond893) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond893) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond893) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond893) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond893) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond893) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond893) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond893) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond893) CFA_SP SP+-2
          CFI (cfiCond893) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond894 Using cfiCommon0
          CFI (cfiCond894) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond894) Conditional ??CrossCallReturnLabel_433
          CFI (cfiCond894) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond894) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond894) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond894) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond894) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond894) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond894) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond894) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond894) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond894) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond894) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond894) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond894) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond894) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond894) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond894) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond894) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond894) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond894) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond894) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond894) CFA_SP SP+-2
          CFI (cfiCond894) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond895 Using cfiCommon0
          CFI (cfiCond895) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond895) Conditional ??CrossCallReturnLabel_434
          CFI (cfiCond895) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond895) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond895) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond895) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond895) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond895) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond895) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond895) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond895) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond895) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond895) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond895) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond895) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond895) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond895) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond895) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond895) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond895) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond895) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond895) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond895) CFA_SP SP+-2
          CFI (cfiCond895) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond896 Using cfiCommon0
          CFI (cfiCond896) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond896) Conditional ??CrossCallReturnLabel_435
          CFI (cfiCond896) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond896) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond896) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond896) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond896) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond896) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond896) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond896) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond896) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond896) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond896) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond896) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond896) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond896) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond896) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond896) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond896) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond896) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond896) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond896) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond896) CFA_SP SP+-2
          CFI (cfiCond896) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker897 Using cfiCommon1
          CFI (cfiPicker897) NoFunction
          CFI (cfiPicker897) Picker
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        MOV       A,R6
        MOV       R1,A
        RET
          CFI EndBlock cfiCond888
          CFI EndBlock cfiCond889
          CFI EndBlock cfiCond890
          CFI EndBlock cfiCond891
          CFI EndBlock cfiCond892
          CFI EndBlock cfiCond893
          CFI EndBlock cfiCond894
          CFI EndBlock cfiCond895
          CFI EndBlock cfiCond896
          CFI EndBlock cfiPicker897

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine86:
          CFI Block cfiCond898 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_195
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond899 Using cfiCommon0
          CFI (cfiCond899) Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI (cfiCond899) Conditional ??CrossCallReturnLabel_193
          CFI (cfiCond899) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond899) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond899) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond899) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond899) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond899) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond899) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond899) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond899) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond899) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond899) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond899) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond899) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond899) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond899) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond899) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond899) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond899) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond899) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond899) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond899) CFA_SP SP+-2
          CFI (cfiCond899) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond900 Using cfiCommon0
          CFI (cfiCond900) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond900) Conditional ??CrossCallReturnLabel_194
          CFI (cfiCond900) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond900) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond900) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond900) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond900) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond900) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond900) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond900) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond900) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond900) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond900) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond900) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond900) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond900) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond900) CFA_SP SP+-2
          CFI (cfiCond900) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker901 Using cfiCommon1
          CFI (cfiPicker901) NoFunction
          CFI (cfiPicker901) Picker
        LCALL     ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_255:
        RET
          CFI EndBlock cfiCond898
          CFI EndBlock cfiCond899
          CFI EndBlock cfiCond900
          CFI EndBlock cfiPicker901

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine122:
          CFI Block cfiCond902 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_255, ??CrossCallReturnLabel_195
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond903 Using cfiCommon0
          CFI (cfiCond903) Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI (cfiCond903) Conditional ??CrossCallReturnLabel_255, ??CrossCallReturnLabel_193
          CFI (cfiCond903) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond903) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond903) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond903) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond903) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond903) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond903) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond903) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond903) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond903) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond903) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond903) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond903) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond903) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond903) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond903) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond903) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond903) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond903) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond903) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond903) CFA_SP SP+-4
          CFI (cfiCond903) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond904 Using cfiCommon0
          CFI (cfiCond904) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond904) Conditional ??CrossCallReturnLabel_255, ??CrossCallReturnLabel_194
          CFI (cfiCond904) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond904) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond904) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond904) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond904) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond904) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond904) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond904) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond904) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond904) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond904) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond904) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond904) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond904) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond904) CFA_SP SP+-4
          CFI (cfiCond904) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond905 Using cfiCommon0
          CFI (cfiCond905) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond905) Conditional ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_0
          CFI (cfiCond905) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond905) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond905) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond905) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond905) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond905) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond905) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond905) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond905) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond905) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond905) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond905) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond905) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond905) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond905) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond905) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond905) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond905) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond905) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond905) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond905) CFA_SP SP+-4
          CFI (cfiCond905) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond906 Using cfiCommon0
          CFI (cfiCond906) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond906) Conditional ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_1
          CFI (cfiCond906) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond906) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond906) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond906) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond906) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond906) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond906) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond906) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond906) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond906) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond906) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond906) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond906) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond906) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond906) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond906) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond906) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond906) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond906) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond906) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond906) CFA_SP SP+-4
          CFI (cfiCond906) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond907 Using cfiCommon0
          CFI (cfiCond907) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond907) Conditional ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_2
          CFI (cfiCond907) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond907) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond907) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond907) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond907) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond907) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond907) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond907) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond907) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond907) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond907) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond907) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond907) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond907) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond907) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond907) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond907) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond907) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond907) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond907) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond907) CFA_SP SP+-4
          CFI (cfiCond907) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond908 Using cfiCommon0
          CFI (cfiCond908) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond908) Conditional ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_3
          CFI (cfiCond908) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond908) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond908) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond908) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond908) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond908) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond908) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond908) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond908) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond908) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond908) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond908) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond908) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond908) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond908) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond908) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond908) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond908) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond908) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond908) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond908) CFA_SP SP+-4
          CFI (cfiCond908) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond909 Using cfiCommon0
          CFI (cfiCond909) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond909) Conditional ??CrossCallReturnLabel_257, ??CrossCallReturnLabel_0
          CFI (cfiCond909) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond909) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond909) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond909) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond909) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond909) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond909) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond909) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond909) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond909) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond909) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond909) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond909) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond909) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond909) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond909) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond909) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond909) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond909) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond909) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond909) CFA_SP SP+-4
          CFI (cfiCond909) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond910 Using cfiCommon0
          CFI (cfiCond910) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond910) Conditional ??CrossCallReturnLabel_257, ??CrossCallReturnLabel_1
          CFI (cfiCond910) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond910) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond910) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond910) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond910) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond910) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond910) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond910) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond910) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond910) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond910) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond910) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond910) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond910) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond910) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond910) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond910) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond910) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond910) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond910) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond910) CFA_SP SP+-4
          CFI (cfiCond910) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond911 Using cfiCommon0
          CFI (cfiCond911) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond911) Conditional ??CrossCallReturnLabel_257, ??CrossCallReturnLabel_2
          CFI (cfiCond911) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond911) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond911) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond911) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond911) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond911) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond911) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond911) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond911) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond911) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond911) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond911) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond911) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond911) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond911) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond911) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond911) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond911) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond911) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond911) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond911) CFA_SP SP+-4
          CFI (cfiCond911) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond912 Using cfiCommon0
          CFI (cfiCond912) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond912) Conditional ??CrossCallReturnLabel_257, ??CrossCallReturnLabel_3
          CFI (cfiCond912) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond912) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond912) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond912) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond912) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond912) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond912) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond912) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond912) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond912) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond912) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond912) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond912) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond912) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond912) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond912) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond912) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond912) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond912) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond912) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond912) CFA_SP SP+-4
          CFI (cfiCond912) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond913 Using cfiCommon0
          CFI (cfiCond913) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond913) Conditional ??CrossCallReturnLabel_258, ??CrossCallReturnLabel_191
          CFI (cfiCond913) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond913) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond913) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond913) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond913) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond913) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond913) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond913) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond913) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond913) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond913) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond913) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond913) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond913) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond913) CFA_SP SP+-4
          CFI (cfiCond913) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond914 Using cfiCommon0
          CFI (cfiCond914) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond914) Conditional ??CrossCallReturnLabel_258, ??CrossCallReturnLabel_192
          CFI (cfiCond914) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond914) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond914) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond914) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond914) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond914) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond914) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond914) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond914) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond914) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond914) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond914) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond914) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond914) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond914) CFA_SP SP+-4
          CFI (cfiCond914) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker915 Using cfiCommon1
          CFI (cfiPicker915) NoFunction
          CFI (cfiPicker915) Picker
        MOVX      @DPTR,A
        MOV       DPL,?V0
        MOV       DPH,?V1
        RET
          CFI EndBlock cfiCond902
          CFI EndBlock cfiCond903
          CFI EndBlock cfiCond904
          CFI EndBlock cfiCond905
          CFI EndBlock cfiCond906
          CFI EndBlock cfiCond907
          CFI EndBlock cfiCond908
          CFI EndBlock cfiCond909
          CFI EndBlock cfiCond910
          CFI EndBlock cfiCond911
          CFI EndBlock cfiCond912
          CFI EndBlock cfiCond913
          CFI EndBlock cfiCond914
          CFI EndBlock cfiPicker915

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine49:
          CFI Block cfiCond916 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockRequest
          CFI Conditional ??CrossCallReturnLabel_441
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond917 Using cfiCommon0
          CFI (cfiCond917) Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI (cfiCond917) Conditional ??CrossCallReturnLabel_442
          CFI (cfiCond917) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond917) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond917) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond917) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond917) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond917) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond917) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond917) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond917) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond917) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond917) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond917) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond917) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond917) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond917) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond917) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond917) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond917) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond917) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond917) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond917) CFA_SP SP+-2
          CFI (cfiCond917) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond918 Using cfiCommon0
          CFI (cfiCond918) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond918) Conditional ??CrossCallReturnLabel_443
          CFI (cfiCond918) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond918) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond918) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond918) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond918) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond918) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond918) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond918) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond918) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond918) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond918) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond918) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond918) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond918) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond918) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond918) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond918) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond918) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond918) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond918) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond918) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond918) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond918) CFA_SP SP+-2
          CFI (cfiCond918) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker919 Using cfiCommon1
          CFI (cfiPicker919) NoFunction
          CFI (cfiPicker919) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond916
          CFI EndBlock cfiCond917
          CFI EndBlock cfiCond918
          CFI EndBlock cfiPicker919
        REQUIRE ??Subroutine183_0
        ; // Fall through to label ??Subroutine183_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine183_0:
          CFI Block cfiCond920 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLock
          CFI Conditional ??CrossCallReturnLabel_440
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond921 Using cfiCommon0
          CFI (cfiCond921) Function zclClosures_SendDoorLockRequest
          CFI (cfiCond921) Conditional ??CrossCallReturnLabel_441
          CFI (cfiCond921) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond921) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond921) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond921) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond921) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond921) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond921) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond921) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond921) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond921) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond921) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond921) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond921) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond921) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond921) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond921) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond921) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond921) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond921) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond921) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond921) CFA_SP SP+-2
          CFI (cfiCond921) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond922 Using cfiCommon0
          CFI (cfiCond922) Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI (cfiCond922) Conditional ??CrossCallReturnLabel_442
          CFI (cfiCond922) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond922) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond922) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond922) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond922) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond922) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond922) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond922) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond922) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond922) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond922) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond922) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond922) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond922) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond922) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond922) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond922) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond922) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond922) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond922) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond922) CFA_SP SP+-2
          CFI (cfiCond922) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond923 Using cfiCommon0
          CFI (cfiCond923) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond923) Conditional ??CrossCallReturnLabel_443
          CFI (cfiCond923) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond923) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond923) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond923) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond923) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond923) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond923) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond923) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond923) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond923) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond923) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond923) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond923) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond923) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond923) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond923) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond923) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond923) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond923) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond923) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond923) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond923) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond923) CFA_SP SP+-2
          CFI (cfiCond923) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker924 Using cfiCommon1
          CFI (cfiPicker924) NoFunction
          CFI (cfiPicker924) Picker
        LCALL     ??Subroutine193_0 & 0xFFFF
??CrossCallReturnLabel_479:
        RET
          CFI EndBlock cfiCond920
          CFI EndBlock cfiCond921
          CFI EndBlock cfiCond922
          CFI EndBlock cfiCond923
          CFI EndBlock cfiPicker924
// 2404 
// 2405 /*********************************************************************
// 2406  * @fn      zclClosures_SendDoorLockGetLogRecordRequest
// 2407  *
// 2408  * @brief   Call to send out a Get Log Record Command
// 2409  *
// 2410  * @param   srcEP - Sending application's endpoint
// 2411  * @param   dstAddr - where you want the message to go
// 2412  * @param   logIndex - Log number between 1 - [max log attribute]
// 2413  * @param   disableDefaultRsp - decides default response is necessary or not
// 2414  * @param   seqNum - sequence number of the command packet
// 2415  *
// 2416  * @return  ZStatus_t
// 2417  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2418 ZStatus_t zclClosures_SendDoorLockGetLogRecordRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockGetLogRecordRequest:
          CFI Block cfiBlock925 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetLogRecordRequest
        CODE
// 2419                                                        uint16 logIndex, uint8 disableDefaultRsp, uint8 seqNum )
// 2420 {
        FUNCALL zclClosures_SendDoorLockGetLogRecordRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV       A,#-0x2
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       A,R1
        MOV       R6,A
// 2421   uint8 payload[PAYLOAD_LEN_GET_LOG_RECORD];
// 2422 
// 2423   payload[0] = LO_UINT16( logIndex );
        MOV       A,R4
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
// 2424   payload[1] = HI_UINT16( logIndex );
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine63 & 0xFFFF
// 2425 
// 2426   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2427                           COMMAND_CLOSURES_GET_LOG_RECORD, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 2428                           disableDefaultRsp, 0, seqNum, PAYLOAD_LEN_GET_LOG_RECORD, payload );
??CrossCallReturnLabel_489:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       ?V0,#0x2
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,#0x11
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_20:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 17)
        CLR       A
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_21:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       ?V0,#0x4
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       A,R6
        MOV       R1,A
        LCALL     ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_502:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       A,#0x2
        LJMP      ??Subroutine197_0 & 0xFFFF
// 2429 }
          CFI EndBlock cfiBlock925
// 2430 
// 2431 /*********************************************************************
// 2432  * @fn      zclClosures_SendDoorLockSetPINCodeRequest
// 2433  *
// 2434  * @brief   Call to send out a Set PIN Code Command
// 2435  *
// 2436  * @param   srcEP - Sending application's endpoint
// 2437  * @param   dstAddr - where you want the message to go
// 2438  * @param   pPayload:
// 2439  *           userID - User ID is between 0 - [# PINs User supported attribute]
// 2440  *           userStatus - Used to indicate what the status is for a specific User ID
// 2441  *           userType - Used to indicate what the type is for a specific User ID
// 2442  *           pPIN - A ZigBee string indicating the PIN code used to create the event on the door lock
// 2443  * @param   disableDefaultRsp - decides default response is necessary or not
// 2444  * @param   seqNum - sequence number of the command packet
// 2445  *
// 2446  * @return  ZStatus_t
// 2447  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2448 ZStatus_t zclClosures_SendDoorLockSetPINCodeRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockSetPINCodeRequest:
          CFI Block cfiBlock926 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetPINCodeRequest
        CODE
// 2449                                                      zclDoorLockSetPINCode_t *pPayload,
// 2450                                                      uint8 disableDefaultRsp, uint8 seqNum )
// 2451 {
        FUNCALL zclClosures_SendDoorLockSetPINCodeRequest, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockSetPINCodeRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockSetPINCodeRequest, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV       A,#-0x14
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        LCALL     ?Subroutine11 & 0xFFFF
// 2452   uint8 i;
// 2453   uint8 *pBuf;  // variable length payload
// 2454   uint8 offset;
// 2455   uint8 calculatedArrayLen;
// 2456   uint8 calculatedBufSize;
// 2457   ZStatus_t status;
// 2458 
// 2459   // first octet of PIN/RFID Code variable string identifies its length
// 2460   calculatedArrayLen = pPayload->pPIN[0] + 1;  // add first byte of string
// 2461 
// 2462   // determine the total buffer size
// 2463   calculatedBufSize = calculatedArrayLen + PAYLOAD_LEN_SET_PIN_CODE;
// 2464 
// 2465   pBuf = zcl_mem_alloc( calculatedBufSize );
// 2466   if ( !pBuf )
??CrossCallReturnLabel_4:
        JNZ       ??zclClosures_SendDoorLockSetPINCodeRequest_0
// 2467   {
// 2468     return ( ZMemError );  // no memory
        MOV       R1,#0x10
        SJMP      ??CrossCallReturnLabel_432
// 2469   }
// 2470 
// 2471   // over-the-air is always little endian. Break into a byte stream.
// 2472   pBuf[0] = LO_UINT16(pPayload->userID);
??zclClosures_SendDoorLockSetPINCodeRequest_0:
        LCALL     ?Subroutine9 & 0xFFFF
// 2473   pBuf[1] = HI_UINT16(pPayload->userID);
// 2474   pBuf[2] = pPayload->userStatus;
// 2475   pBuf[3] = pPayload->userType;
// 2476   offset = 4;
// 2477   for ( i = 0; i < calculatedArrayLen; i++ )
??CrossCallReturnLabel_0:
        SJMP      ??zclClosures_SendDoorLockSetPINCodeRequest_1
// 2478   {
// 2479     pBuf[offset++] = pPayload->pPIN[i];
??zclClosures_SendDoorLockSetPINCodeRequest_2:
        LCALL     ?Subroutine10 & 0xFFFF
// 2480   }
??CrossCallReturnLabel_469:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_210:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_SendDoorLockSetPINCodeRequest_1:
        MOV       A,R0
        CLR       C
        SUBB      A,?V3
        JC        ??zclClosures_SendDoorLockSetPINCodeRequest_2
// 2481 
// 2482 
// 2483   status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2484                             COMMAND_CLOSURES_SET_PIN_CODE, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 2485                             disableDefaultRsp, 0, seqNum, calculatedBufSize, pBuf );
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V6
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       R0,#?V8
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,#0x1a
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_22:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        CLR       A
        MOV       ?V0,A
        MOV       ?V1,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       A,#0x1c
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_23:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       ?V0,#0x5
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        LCALL     ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_497:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        LCALL     ?Subroutine93 & 0xFFFF
// 2486   zcl_mem_free( pBuf );
// 2487   return status;
??CrossCallReturnLabel_432:
        LJMP      ?Subroutine3 & 0xFFFF
// 2488 }
          CFI EndBlock cfiBlock926
// 2489 
// 2490 /*********************************************************************
// 2491  * @fn      zclClosures_SendDoorLockUserIDRequest
// 2492  *
// 2493  * @brief   Call to send out a User ID Command
// 2494  *
// 2495  * @param   srcEP - Sending application's endpoint
// 2496  * @param   dstAddr - where you want the message to go
// 2497  * @param   cmd - COMMAND_CLOSURES_GET_PIN_CODE, COMMAND_CLOSURES_CLEAR_PIN_CODE,
// 2498  *                COMMAND_CLOSURES_GET_USER_STATUS, COMMAND_CLOSURES_GET_USER_TYPE,
// 2499  *                COMMAND_CLOSURES_GET_RFID_CODE, COMMAND_CLOSURES_CLEAR_RFID_CODE
// 2500  * @param   userID - User ID is between 0 - [# PINs User supported attribute]
// 2501  * @param   disableDefaultRsp - decides default response is necessary or not
// 2502  * @param   seqNum - sequence number of the command packet
// 2503  *
// 2504  * @return  ZStatus_t
// 2505  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2506 ZStatus_t zclClosures_SendDoorLockUserIDRequest( uint8 srcEP, afAddrType_t *dstAddr, uint8 cmd,
zclClosures_SendDoorLockUserIDRequest:
          CFI Block cfiBlock927 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockUserIDRequest
        CODE
// 2507                                                  uint16 userID, uint8 disableDefaultRsp, uint8 seqNum )
// 2508 {
        FUNCALL zclClosures_SendDoorLockUserIDRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 2
        MOV       A,#-0x2
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       ?V0,R1
        MOV       A,#0xe
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine184_0 & 0xFFFF
// 2509   uint8 payload[PAYLOAD_LEN_USER_ID];
// 2510 
// 2511   payload[0] = LO_UINT16(userID);
??CrossCallReturnLabel_445:
        MOV       A,R0
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
// 2512   payload[1] = HI_UINT16(userID);
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R1
        LCALL     ??Subroutine199_0 & 0xFFFF
// 2513 
// 2514   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2515                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 2516                           disableDefaultRsp, 0, seqNum, PAYLOAD_LEN_USER_ID, payload );
??CrossCallReturnLabel_519:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       ?V2,#0x2
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_65:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,R5
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       ?V1,#0x0
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       A,R4
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       R1,?V0
        LCALL     ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_503:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       A,#0x2
        SJMP      ??Subroutine186_0
// 2517 }
          CFI EndBlock cfiBlock927

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine59:
          CFI Block cfiCond928 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI Conditional ??CrossCallReturnLabel_446
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond929 Using cfiCommon0
          CFI (cfiCond929) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond929) Conditional ??CrossCallReturnLabel_447
          CFI (cfiCond929) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond929) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond929) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond929) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond929) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond929) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond929) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond929) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond929) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond929) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond929) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond929) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond929) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond929) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond929) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond929) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond929) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond929) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond929) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond929) CFA_SP SP+-2
          CFI (cfiCond929) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker930 Using cfiCommon1
          CFI (cfiPicker930) NoFunction
          CFI (cfiPicker930) Picker
        MOV       DPL,?V0
        MOV       DPH,?V1
          CFI EndBlock cfiCond928
          CFI EndBlock cfiCond929
          CFI EndBlock cfiPicker930
        REQUIRE ??Subroutine184_0
        ; // Fall through to label ??Subroutine184_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine184_0:
          CFI Block cfiCond931 Using cfiCommon0
          CFI Function zclClosures_HdlIncoming
          CFI Conditional ??CrossCallReturnLabel_444
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond932 Using cfiCommon0
          CFI (cfiCond932) Function zclClosures_SendDoorLockUserIDRequest
          CFI (cfiCond932) Conditional ??CrossCallReturnLabel_445
          CFI (cfiCond932) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond932) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond932) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond932) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond932) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond932) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond932) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond932) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond932) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond932) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond932) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond932) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond932) CFA_SP SP+-2
          CFI (cfiCond932) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond933 Using cfiCommon0
          CFI (cfiCond933) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond933) Conditional ??CrossCallReturnLabel_446
          CFI (cfiCond933) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond933) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond933) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond933) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond933) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond933) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond933) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond933) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond933) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond933) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond933) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond933) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond933) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond933) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond933) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond933) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond933) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond933) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond933) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond933) CFA_SP SP+-2
          CFI (cfiCond933) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond934 Using cfiCommon0
          CFI (cfiCond934) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond934) Conditional ??CrossCallReturnLabel_447
          CFI (cfiCond934) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond934) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond934) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond934) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond934) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond934) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond934) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond934) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond934) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond934) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond934) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond934) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond934) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond934) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond934) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond934) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond934) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond934) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond934) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond934) CFA_SP SP+-2
          CFI (cfiCond934) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker935 Using cfiCommon1
          CFI (cfiPicker935) NoFunction
          CFI (cfiPicker935) Picker
        LCALL     ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_451:
        RET
          CFI EndBlock cfiCond931
          CFI EndBlock cfiCond932
          CFI EndBlock cfiCond933
          CFI EndBlock cfiCond934
          CFI EndBlock cfiPicker935

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine134:
          CFI Block cfiCond936 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_428, ??CrossCallReturnLabel_113
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond937 Using cfiCommon0
          CFI (cfiCond937) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond937) Conditional ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_428, ??CrossCallReturnLabel_114
          CFI (cfiCond937) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond937) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond937) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond937) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond937) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond937) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond937) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond937) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond937) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond937) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond937) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond937) CFA_SP SP+-6
          CFI (cfiCond937) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond938 Using cfiCommon0
          CFI (cfiCond938) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond938) Conditional ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_429, ??CrossCallReturnLabel_286
          CFI (cfiCond938) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond938) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond938) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond938) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond938) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond938) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond938) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond938) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond938) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond938) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond938) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond938) CFA_SP SP+-6
          CFI (cfiCond938) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond939 Using cfiCommon0
          CFI (cfiCond939) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond939) Conditional ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_429, ??CrossCallReturnLabel_287
          CFI (cfiCond939) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond939) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond939) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond939) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond939) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond939) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond939) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond939) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond939) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond939) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond939) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond939) CFA_SP SP+-6
          CFI (cfiCond939) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond940 Using cfiCommon0
          CFI (cfiCond940) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond940) Conditional ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_429, ??CrossCallReturnLabel_288
          CFI (cfiCond940) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond940) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond940) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond940) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond940) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond940) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond940) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond940) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond940) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond940) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond940) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond940) CFA_SP SP+-6
          CFI (cfiCond940) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond941 Using cfiCommon0
          CFI (cfiCond941) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond941) Conditional ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_429, ??CrossCallReturnLabel_285
          CFI (cfiCond941) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond941) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond941) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond941) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond941) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond941) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond941) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond941) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond941) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond941) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond941) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond941) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond941) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond941) CFA_SP SP+-6
          CFI (cfiCond941) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond942 Using cfiCommon0
          CFI (cfiCond942) Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI (cfiCond942) Conditional ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_423
          CFI (cfiCond942) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond942) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond942) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond942) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond942) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond942) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond942) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond942) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond942) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond942) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond942) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond942) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond942) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond942) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond942) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond942) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond942) CFA_SP SP+-6
          CFI (cfiCond942) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond943 Using cfiCommon0
          CFI (cfiCond943) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond943) Conditional ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_424
          CFI (cfiCond943) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond943) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond943) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond943) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond943) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond943) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond943) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond943) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond943) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond943) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond943) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond943) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond943) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond943) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond943) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond943) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond943) CFA_SP SP+-6
          CFI (cfiCond943) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond944 Using cfiCommon0
          CFI (cfiCond944) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond944) Conditional ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_425
          CFI (cfiCond944) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond944) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond944) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond944) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond944) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond944) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond944) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond944) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond944) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond944) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond944) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond944) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond944) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond944) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond944) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond944) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond944) CFA_SP SP+-6
          CFI (cfiCond944) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond945 Using cfiCommon0
          CFI (cfiCond945) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond945) Conditional ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_426
          CFI (cfiCond945) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond945) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond945) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond945) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond945) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond945) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond945) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond945) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond945) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond945) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond945) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond945) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond945) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond945) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond945) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond945) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond945) CFA_SP SP+-6
          CFI (cfiCond945) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond946 Using cfiCommon0
          CFI (cfiCond946) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond946) Conditional ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_427
          CFI (cfiCond946) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond946) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond946) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond946) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond946) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond946) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond946) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond946) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond946) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond946) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond946) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond946) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond946) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond946) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond946) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond946) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond946) CFA_SP SP+-6
          CFI (cfiCond946) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond947 Using cfiCommon0
          CFI (cfiCond947) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond947) Conditional ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_421
          CFI (cfiCond947) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond947) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond947) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond947) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond947) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond947) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond947) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond947) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond947) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond947) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond947) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond947) CFA_SP SP+-6
          CFI (cfiCond947) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond948 Using cfiCommon0
          CFI (cfiCond948) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond948) Conditional ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_422
          CFI (cfiCond948) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond948) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond948) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond948) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond948) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond948) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond948) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond948) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond948) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond948) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond948) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond948) CFA_SP SP+-6
          CFI (cfiCond948) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond949 Using cfiCommon0
          CFI (cfiCond949) Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI (cfiCond949) Conditional ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_413
          CFI (cfiCond949) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond949) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond949) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond949) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond949) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond949) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond949) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond949) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond949) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond949) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond949) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond949) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond949) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond949) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond949) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond949) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond949) CFA_SP SP+-6
          CFI (cfiCond949) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond950 Using cfiCommon0
          CFI (cfiCond950) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond950) Conditional ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_414
          CFI (cfiCond950) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond950) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond950) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond950) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond950) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond950) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond950) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond950) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond950) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond950) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond950) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond950) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond950) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond950) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond950) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond950) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond950) CFA_SP SP+-6
          CFI (cfiCond950) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond951 Using cfiCommon0
          CFI (cfiCond951) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond951) Conditional ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_415
          CFI (cfiCond951) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond951) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond951) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond951) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond951) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond951) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond951) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond951) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond951) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond951) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond951) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond951) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond951) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond951) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond951) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond951) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond951) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond951) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond951) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond951) CFA_SP SP+-6
          CFI (cfiCond951) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond952 Using cfiCommon0
          CFI (cfiCond952) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond952) Conditional ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_416
          CFI (cfiCond952) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond952) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond952) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond952) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond952) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond952) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond952) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond952) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond952) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond952) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond952) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond952) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond952) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond952) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond952) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond952) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond952) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond952) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond952) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond952) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond952) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond952) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond952) CFA_SP SP+-6
          CFI (cfiCond952) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond953 Using cfiCommon0
          CFI (cfiCond953) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond953) Conditional ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_417
          CFI (cfiCond953) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond953) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond953) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond953) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond953) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond953) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond953) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond953) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond953) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond953) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond953) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond953) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond953) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond953) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond953) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond953) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond953) CFA_SP SP+-6
          CFI (cfiCond953) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond954 Using cfiCommon0
          CFI (cfiCond954) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond954) Conditional ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_418
          CFI (cfiCond954) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond954) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond954) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond954) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond954) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond954) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond954) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond954) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond954) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond954) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond954) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond954) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond954) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond954) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond954) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond954) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond954) CFA_SP SP+-6
          CFI (cfiCond954) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond955 Using cfiCommon0
          CFI (cfiCond955) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond955) Conditional ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_419
          CFI (cfiCond955) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond955) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond955) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond955) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond955) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond955) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond955) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond955) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond955) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond955) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond955) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond955) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond955) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond955) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond955) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond955) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond955) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond955) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond955) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond955) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond955) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond955) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond955) CFA_SP SP+-6
          CFI (cfiCond955) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond956 Using cfiCommon0
          CFI (cfiCond956) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond956) Conditional ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_420
          CFI (cfiCond956) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond956) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond956) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond956) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond956) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond956) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond956) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond956) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond956) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond956) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond956) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond956) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond956) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond956) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond956) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond956) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond956) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond956) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond956) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond956) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond956) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond956) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond956) CFA_SP SP+-6
          CFI (cfiCond956) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond957 Using cfiCommon0
          CFI (cfiCond957) Function zclClosures_HdlIncoming
          CFI (cfiCond957) Conditional ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_409
          CFI (cfiCond957) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond957) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond957) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond957) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond957) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond957) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond957) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond957) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond957) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond957) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond957) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond957) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond957) CFA_SP SP+-6
          CFI (cfiCond957) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond958 Using cfiCommon0
          CFI (cfiCond958) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond958) Conditional ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_410
          CFI (cfiCond958) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond958) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond958) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond958) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond958) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond958) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond958) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond958) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond958) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond958) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond958) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond958) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond958) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond958) CFA_SP SP+-6
          CFI (cfiCond958) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond959 Using cfiCommon0
          CFI (cfiCond959) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond959) Conditional ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_411
          CFI (cfiCond959) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond959) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond959) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond959) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond959) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond959) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond959) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond959) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond959) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond959) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond959) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond959) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond959) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond959) CFA_SP SP+-6
          CFI (cfiCond959) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond960 Using cfiCommon0
          CFI (cfiCond960) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond960) Conditional ??CrossCallReturnLabel_450, ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_412
          CFI (cfiCond960) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond960) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond960) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond960) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond960) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond960) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond960) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond960) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond960) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond960) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond960) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond960) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond960) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond960) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond960) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond960) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond960) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond960) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond960) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond960) CFA_SP SP+-6
          CFI (cfiCond960) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond961 Using cfiCommon0
          CFI (cfiCond961) Function zclClosures_ProcessInDoorLockCmds
          CFI (cfiCond961) Conditional ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_127
          CFI (cfiCond961) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond961) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond961) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond961) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond961) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond961) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond961) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond961) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond961) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond961) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond961) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond961) CFA_SP SP+-6
          CFI (cfiCond961) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond962 Using cfiCommon0
          CFI (cfiCond962) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond962) Conditional ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_128
          CFI (cfiCond962) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond962) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond962) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond962) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond962) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond962) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond962) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond962) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond962) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond962) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond962) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond962) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond962) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond962) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond962) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond962) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond962) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond962) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond962) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond962) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond962) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond962) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond962) CFA_SP SP+-6
          CFI (cfiCond962) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond963 Using cfiCommon0
          CFI (cfiCond963) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond963) Conditional ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_8
          CFI (cfiCond963) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond963) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond963) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond963) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond963) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond963) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond963) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond963) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond963) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond963) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond963) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond963) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond963) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond963) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond963) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond963) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond963) CFA_SP SP+-6
          CFI (cfiCond963) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond964 Using cfiCommon0
          CFI (cfiCond964) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond964) Conditional ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_9
          CFI (cfiCond964) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond964) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond964) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond964) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond964) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond964) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond964) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond964) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond964) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond964) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond964) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond964) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond964) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond964) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond964) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond964) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond964) CFA_SP SP+-6
          CFI (cfiCond964) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond965 Using cfiCommon0
          CFI (cfiCond965) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond965) Conditional ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_10
          CFI (cfiCond965) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond965) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond965) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond965) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond965) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond965) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond965) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond965) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond965) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond965) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond965) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond965) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond965) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond965) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond965) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond965) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond965) CFA_SP SP+-6
          CFI (cfiCond965) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond966 Using cfiCommon0
          CFI (cfiCond966) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond966) Conditional ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_11
          CFI (cfiCond966) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond966) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond966) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond966) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond966) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond966) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond966) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond966) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond966) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond966) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond966) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond966) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond966) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond966) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond966) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond966) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond966) CFA_SP SP+-6
          CFI (cfiCond966) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond967 Using cfiCommon0
          CFI (cfiCond967) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond967) Conditional ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_79
          CFI (cfiCond967) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond967) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond967) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond967) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond967) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond967) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond967) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond967) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond967) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond967) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond967) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond967) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond967) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond967) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond967) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond967) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond967) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond967) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond967) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond967) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond967) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond967) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond967) CFA_SP SP+-6
          CFI (cfiCond967) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond968 Using cfiCommon0
          CFI (cfiCond968) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond968) Conditional ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_80
          CFI (cfiCond968) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond968) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond968) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond968) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond968) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond968) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond968) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond968) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond968) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond968) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond968) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond968) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond968) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond968) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond968) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond968) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond968) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond968) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond968) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond968) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond968) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond968) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond968) CFA_SP SP+-6
          CFI (cfiCond968) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond969 Using cfiCommon0
          CFI (cfiCond969) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond969) Conditional ??CrossCallReturnLabel_451, ??CrossCallReturnLabel_446
          CFI (cfiCond969) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond969) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond969) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond969) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond969) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond969) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond969) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond969) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond969) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond969) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond969) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond969) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond969) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond969) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond969) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond969) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond969) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond969) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond969) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond969) CFA_SP SP+-4
          CFI (cfiCond969) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond970 Using cfiCommon0
          CFI (cfiCond970) Function zclClosures_ProcessInDoorLockSetTemporaryPin
          CFI (cfiCond970) Conditional ??CrossCallReturnLabel_451, ??CrossCallReturnLabel_447
          CFI (cfiCond970) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond970) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond970) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond970) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond970) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond970) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond970) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond970) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond970) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond970) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond970) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond970) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond970) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond970) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond970) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond970) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond970) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond970) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond970) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond970) CFA_SP SP+-4
          CFI (cfiCond970) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond971 Using cfiCommon0
          CFI (cfiCond971) Function zclClosures_HdlIncoming
          CFI (cfiCond971) Conditional ??CrossCallReturnLabel_451, ??CrossCallReturnLabel_444
          CFI (cfiCond971) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond971) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond971) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond971) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond971) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond971) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond971) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond971) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond971) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond971) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond971) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond971) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond971) CFA_SP SP+-4
          CFI (cfiCond971) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond972 Using cfiCommon0
          CFI (cfiCond972) Function zclClosures_SendDoorLockUserIDRequest
          CFI (cfiCond972) Conditional ??CrossCallReturnLabel_451, ??CrossCallReturnLabel_445
          CFI (cfiCond972) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond972) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond972) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond972) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond972) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond972) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond972) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond972) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond972) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond972) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond972) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond972) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond972) CFA_SP SP+-4
          CFI (cfiCond972) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond973 Using cfiCommon0
          CFI (cfiCond973) Function zclClosures_SendDoorLockSetWeekDayScheduleRequest
          CFI (cfiCond973) Conditional ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_115
          CFI (cfiCond973) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond973) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond973) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond973) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond973) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond973) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond973) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond973) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond973) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond973) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond973) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond973) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond973) CFA_SP SP+-4
          CFI (cfiCond973) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond974 Using cfiCommon0
          CFI (cfiCond974) Function zclClosures_SendDoorLockScheduleRequest
          CFI (cfiCond974) Conditional ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_116
          CFI (cfiCond974) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond974) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond974) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond974) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond974) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond974) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond974) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond974) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond974) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond974) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond974) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond974) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond974) CFA_SP SP+-4
          CFI (cfiCond974) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond975 Using cfiCommon0
          CFI (cfiCond975) Function zclClosures_SendDoorLockSetYearDayScheduleRequest
          CFI (cfiCond975) Conditional ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_117
          CFI (cfiCond975) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond975) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond975) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond975) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond975) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond975) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond975) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond975) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond975) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond975) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond975) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond975) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond975) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond975) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond975) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond975) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond975) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond975) CFA_SP SP+-4
          CFI (cfiCond975) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker976 Using cfiCommon1
          CFI (cfiPicker976) NoFunction
          CFI (cfiPicker976) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        RET
          CFI EndBlock cfiCond936
          CFI EndBlock cfiCond937
          CFI EndBlock cfiCond938
          CFI EndBlock cfiCond939
          CFI EndBlock cfiCond940
          CFI EndBlock cfiCond941
          CFI EndBlock cfiCond942
          CFI EndBlock cfiCond943
          CFI EndBlock cfiCond944
          CFI EndBlock cfiCond945
          CFI EndBlock cfiCond946
          CFI EndBlock cfiCond947
          CFI EndBlock cfiCond948
          CFI EndBlock cfiCond949
          CFI EndBlock cfiCond950
          CFI EndBlock cfiCond951
          CFI EndBlock cfiCond952
          CFI EndBlock cfiCond953
          CFI EndBlock cfiCond954
          CFI EndBlock cfiCond955
          CFI EndBlock cfiCond956
          CFI EndBlock cfiCond957
          CFI EndBlock cfiCond958
          CFI EndBlock cfiCond959
          CFI EndBlock cfiCond960
          CFI EndBlock cfiCond961
          CFI EndBlock cfiCond962
          CFI EndBlock cfiCond963
          CFI EndBlock cfiCond964
          CFI EndBlock cfiCond965
          CFI EndBlock cfiCond966
          CFI EndBlock cfiCond967
          CFI EndBlock cfiCond968
          CFI EndBlock cfiCond969
          CFI EndBlock cfiCond970
          CFI EndBlock cfiCond971
          CFI EndBlock cfiCond972
          CFI EndBlock cfiCond973
          CFI EndBlock cfiCond974
          CFI EndBlock cfiCond975
          CFI EndBlock cfiPicker976

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock977 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       A,R4
        MOV       ?V1,A
          CFI EndBlock cfiBlock977
        REQUIRE ??Subroutine185_0
        ; // Fall through to label ??Subroutine185_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine185_0:
          CFI Block cfiBlock978 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 23)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       A,R6
        MOV       R1,A
        LCALL     ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_504:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV       A,#0x1
          CFI EndBlock cfiBlock978
        REQUIRE ??Subroutine186_0
        ; // Fall through to label ??Subroutine186_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine186_0:
          CFI Block cfiBlock979 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock979
        REQUIRE ??Subroutine187_0
        ; // Fall through to label ??Subroutine187_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine187_0:
          CFI Block cfiBlock980 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x4
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock980
// 2518 
// 2519 /*********************************************************************
// 2520  * @fn      zclClosures_SendDoorLockClearAllCodesRequest
// 2521  *
// 2522  * @brief   Call to send out a Clear All Codes Command
// 2523  *
// 2524  * @param   srcEP - Sending application's endpoint
// 2525  * @param   dstAddr - where you want the message to go
// 2526  * @param   cmd - COMMAND_CLOSURES_CLEAR_ALL_PIN_CODES, COMMAND_CLOSURES_CLEAR_ALL_RFID_CODES
// 2527  * @param   disableDefaultRsp - decides default response is necessary or not
// 2528  * @param   seqNum - sequence number of the command packet
// 2529  *
// 2530  * @return  ZStatus_t
// 2531  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2532 ZStatus_t zclClosures_SendDoorLockClearAllCodesRequest( uint8 srcEP, afAddrType_t *dstAddr, uint8 cmd,
zclClosures_SendDoorLockClearAllCodesRequest:
          CFI Block cfiBlock981 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockClearAllCodesRequest
        CODE
// 2533                                                         uint8 disableDefaultRsp, uint8 seqNum )
// 2534 {
        FUNCALL zclClosures_SendDoorLockClearAllCodesRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
// 2535   // no payload
// 2536 
// 2537   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2538                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 2539                           disableDefaultRsp, 0, seqNum, 0, NULL );
        ; Setup parameters for call to function zcl_SendCommand
        CLR       A
        MOV       ?V2,A
        MOV       ?V3,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_66:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,R5
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       ?V1,#0x0
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,R4
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       R4,#0x1
        MOV       R5,#0x1
        LCALL     ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_505:
        SJMP      ??Subroutine186_0
// 2540 }
          CFI EndBlock cfiBlock981
// 2541 
// 2542 /*********************************************************************
// 2543  * @fn      zclClosures_SendDoorLockSetUserStatusRequest
// 2544  *
// 2545  * @brief   Call to send out a Set User Status Command
// 2546  *
// 2547  * @param   srcEP - Sending application's endpoint
// 2548  * @param   dstAddr - where you want the message to go
// 2549  * @param   userID - User ID is between 0 - [# PINs User supported attribute]
// 2550  * @param   userStatus - Used to indicate what the status is for a specific User ID
// 2551  * @param   disableDefaultRsp - decides default response is necessary or not
// 2552  * @param   seqNum - sequence number of the command packet
// 2553  *
// 2554  * @return  ZStatus_t
// 2555  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2556 ZStatus_t zclClosures_SendDoorLockSetUserStatusRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockSetUserStatusRequest:
          CFI Block cfiBlock982 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetUserStatusRequest
        CODE
// 2557                                                         uint16 userID, uint8 userStatus,
// 2558                                                         uint8 disableDefaultRsp, uint8 seqNum )
// 2559 {
        FUNCALL zclClosures_SendDoorLockSetUserStatusRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 3
        MOV       A,#-0x3
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV       A,R1
        MOV       R6,A
// 2560   uint8 payload[PAYLOAD_LEN_SET_USER_STATUS];
// 2561 
// 2562   payload[0] = LO_UINT16(userID);
        MOV       A,R4
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
// 2563   payload[1] = HI_UINT16(userID);
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R5
        MOVX      @DPTR,A
// 2564   payload[2] = userStatus;
        MOV       A,#0xd
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ??Subroutine195_0 & 0xFFFF
// 2565 
// 2566   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2567                           COMMAND_CLOSURES_SET_USER_STATUS, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 2568                           disableDefaultRsp, 0, seqNum, PAYLOAD_LEN_SET_USER_STATUS, payload );
??CrossCallReturnLabel_491:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       ?V0,#0x3
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_24:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        CLR       A
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_25:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V0,#0x9
        LJMP      ?Subroutine4 & 0xFFFF
// 2569 }
          CFI EndBlock cfiBlock982
// 2570 
// 2571 /*********************************************************************
// 2572  * @fn      zclClosures_SendDoorLockSetWeekDayScheduleRequest
// 2573  *
// 2574  * @brief   Call to send out a Set Week Day Schedule Command
// 2575  *
// 2576  * @param   srcEP - Sending application's endpoint
// 2577  * @param   dstAddr - where you want the message to go
// 2578  * @param   scheduleID - The Schedule ID # is between 0 - [# Schedule IDs per user attribute]
// 2579  * @param   userID - User ID is between 0 - [# PINs User supported attribute]
// 2580  * @param   daysMask - Bitmask of the effective days in the order XSFTWTMS
// 2581  * @param   startHour - The start hour of the Week Day Schedule: 0-23
// 2582  * @param   startMinute - The start minute of the Week Day Schedule: 0-59
// 2583  * @param   endHour - The end hour of the Week Day Schedule: 0-23
// 2584  * @param   endMinute - The end minute of the Week Day Schedule: 0-59
// 2585  * @param   disableDefaultRsp - decides default response is necessary or not
// 2586  * @param   seqNum - sequence number of the command packet
// 2587  *
// 2588  * @return  ZStatus_t
// 2589  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2590 ZStatus_t zclClosures_SendDoorLockSetWeekDayScheduleRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockSetWeekDayScheduleRequest:
          CFI Block cfiBlock983 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetWeekDayScheduleRequest
        CODE
// 2591                                                              uint8 scheduleID, uint16 userID,
// 2592                                                              uint8 daysMask, uint8 startHour,
// 2593                                                              uint8 startMinute, uint8 endHour,
// 2594                                                              uint8 endMinute, uint8 disableDefaultRsp, uint8 seqNum )
// 2595 {
        FUNCALL zclClosures_SendDoorLockSetWeekDayScheduleRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 8
        MOV       A,#-0x8
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       ?V0,R1
// 2596   uint8 payload[PAYLOAD_LEN_SET_WEEK_DAY_SCHEDULE];
// 2597 
// 2598   payload[0] = scheduleID;
        MOV       A,R4
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine53 & 0xFFFF
// 2599   payload[1] = LO_UINT16(userID);
??CrossCallReturnLabel_115:
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R0
        MOVX      @DPTR,A
// 2600   payload[2] = HI_UINT16(userID);
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R1
        MOVX      @DPTR,A
// 2601   payload[3] = daysMask;
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R5
        MOVX      @DPTR,A
// 2602   payload[4] = startHour;
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2603   payload[5] = startMinute;
        MOV       A,#0x17
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2604   payload[6] = endHour;
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2605   payload[7] = endMinute;
        MOV       A,#0x19
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ??Subroutine199_0 & 0xFFFF
// 2606 
// 2607   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2608                           COMMAND_CLOSURES_SET_WEEK_DAY_SCHEDULE, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 2609                           disableDefaultRsp, 0, seqNum, PAYLOAD_LEN_SET_WEEK_DAY_SCHEDULE, payload );
??CrossCallReturnLabel_520:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       ?V2,#0x8
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       A,#0x1f
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_67:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       A,#0x21
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_68:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       ?V1,#0x0
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       ?V1,#0xb
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       R1,?V0
        LCALL     ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_506:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        LJMP      ?Subroutine8 & 0xFFFF
// 2610 }
          CFI EndBlock cfiBlock983
// 2611 
// 2612 /*********************************************************************
// 2613  * @fn      zclClosures_SendDoorLockScheduleRequest
// 2614  *
// 2615  * @brief   Call to send out a Schedule Command
// 2616  *
// 2617  * @param   srcEP - Sending application's endpoint
// 2618  * @param   dstAddr - where you want the message to go
// 2619  * @param   cmd - COMMAND_CLOSURES_GET_WEEK_DAY_SCHEDULE, COMMAND_CLOSURES_CLEAR_WEEK_DAY_SCHEDULE,
// 2620  *                COMMAND_CLOSURES_GET_YEAR_DAY_SCHEDULE, COMMAND_CLOSURES_CLEAR_YEAR_DAY_SCHEDULE
// 2621  * @param   scheduleID - The Schedule ID # is between 0 - [# Schedule IDs per user attribute]
// 2622  * @param   userID - User ID is between 0 - [# PINs User supported attribute]
// 2623  * @param   disableDefaultRsp - decides default response is necessary or not
// 2624  * @param   seqNum - sequence number of the command packet
// 2625  *
// 2626  * @return  ZStatus_t
// 2627  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2628 ZStatus_t zclClosures_SendDoorLockScheduleRequest( uint8 srcEP, afAddrType_t *dstAddr, uint8 cmd,
zclClosures_SendDoorLockScheduleRequest:
          CFI Block cfiBlock984 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockScheduleRequest
        CODE
// 2629                                                    uint8 scheduleID, uint16 userID,
// 2630                                                    uint8 disableDefaultRsp, uint8 seqNum )
// 2631 {
        FUNCALL zclClosures_SendDoorLockScheduleRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 3
        MOV       A,#-0x3
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       A,R1
        MOV       R6,A
// 2632   uint8 payload[PAYLOAD_LEN_SCHEDULE];
// 2633 
// 2634   payload[0] = scheduleID;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,R5
        MOVX      @DPTR,A
        MOV       A,#0xf
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine53 & 0xFFFF
// 2635   payload[1] = LO_UINT16(userID);
??CrossCallReturnLabel_116:
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R0
        MOVX      @DPTR,A
// 2636   payload[2] = HI_UINT16(userID);
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R1
        LCALL     ??Subroutine199_0 & 0xFFFF
// 2637 
// 2638   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2639                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 2640                           disableDefaultRsp, 0, seqNum, PAYLOAD_LEN_SCHEDULE, payload );
??CrossCallReturnLabel_521:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       ?V2,#0x3
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_69:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_70:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V1,#0x0
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,R4
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       A,R6
        MOV       R1,A
        LCALL     ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_507:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       A,#0x3
        LJMP      ??Subroutine186_0 & 0xFFFF
// 2641 }
          CFI EndBlock cfiBlock984

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine53:
          CFI Block cfiCond985 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetWeekDayScheduleRequest
          CFI Conditional ??CrossCallReturnLabel_115
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond986 Using cfiCommon0
          CFI (cfiCond986) Function zclClosures_SendDoorLockScheduleRequest
          CFI (cfiCond986) Conditional ??CrossCallReturnLabel_116
          CFI (cfiCond986) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond986) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond986) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond986) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond986) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond986) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond986) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond986) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond986) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond986) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond986) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond986) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond986) CFA_SP SP+-2
          CFI (cfiCond986) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond987 Using cfiCommon0
          CFI (cfiCond987) Function zclClosures_SendDoorLockSetYearDayScheduleRequest
          CFI (cfiCond987) Conditional ??CrossCallReturnLabel_117
          CFI (cfiCond987) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond987) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond987) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond987) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond987) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond987) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond987) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond987) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond987) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond987) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond987) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond987) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond987) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond987) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond987) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond987) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond987) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond987) CFA_SP SP+-2
          CFI (cfiCond987) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker988 Using cfiCommon1
          CFI (cfiPicker988) NoFunction
          CFI (cfiPicker988) Picker
        LCALL     ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_448:
        MOV       A,#0x1
        RET
          CFI EndBlock cfiCond985
          CFI EndBlock cfiCond986
          CFI EndBlock cfiCond987
          CFI EndBlock cfiPicker988
// 2642 
// 2643 /*********************************************************************
// 2644  * @fn      zclClosures_SendDoorLockSetYearDayScheduleRequest
// 2645  *
// 2646  * @brief   Call to send out a Set Year Day Schedule Command
// 2647  *
// 2648  * @param   srcEP - Sending application's endpoint
// 2649  * @param   dstAddr - where you want the message to go
// 2650  * @param   scheduleID - The Schedule ID # is between 0 - [# Schedule IDs per user attribute]
// 2651  * @param   userID - User ID is between 0 - [# PINs User supported attribute]
// 2652  * @param   zigBeeLocalStartTime - Start time of the Year Day Schedule representing by ZigBeeLocalTime
// 2653  * @param   zigBeeLocalEndTime - End time of the Year Day Schedule representing by ZigBeeLocalTime
// 2654  * @param   disableDefaultRsp - decides default response is necessary or not
// 2655  * @param   seqNum - sequence number of the command packet
// 2656  *
// 2657  * @return  ZStatus_t
// 2658  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2659 ZStatus_t zclClosures_SendDoorLockSetYearDayScheduleRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockSetYearDayScheduleRequest:
          CFI Block cfiBlock989 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetYearDayScheduleRequest
        CODE
// 2660                                                              uint8 scheduleID, uint16 userID,
// 2661                                                              uint32 zigBeeLocalStartTime,
// 2662                                                              uint32 zigBeeLocalEndTime,
// 2663                                                              uint8 disableDefaultRsp, uint8 seqNum )
// 2664 {
        FUNCALL zclClosures_SendDoorLockSetYearDayScheduleRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 39, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        MOV       A,#-0x11
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
        ; Saved register size: 17
        ; Auto size: 11
        MOV       A,#-0xb
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       A,R1
        MOV       R7,A
        MOV       A,R4
// 2665   uint8 payload[PAYLOAD_LEN_SET_YEAR_DAY_SCHEDULE];
// 2666 
// 2667   payload[0] = scheduleID;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       A,#0x1c
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine53 & 0xFFFF
// 2668   payload[1] = LO_UINT16(userID);
??CrossCallReturnLabel_117:
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R0
        MOVX      @DPTR,A
// 2669   payload[2] = HI_UINT16(userID);
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R1
        MOVX      @DPTR,A
        MOV       A,#0x1e
        LCALL     ?XSTACK_DISP0_8
        MOV       R0,#?V0
        LCALL     ?L_MOV_X
// 2670   payload[3] = BREAK_UINT32(zigBeeLocalStartTime, 0);
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        MOVX      @DPTR,A
// 2671   payload[4] = BREAK_UINT32(zigBeeLocalStartTime, 1);
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine66 & 0xFFFF
// 2672   payload[5] = BREAK_UINT32(zigBeeLocalStartTime, 2);
??CrossCallReturnLabel_140:
        LCALL     ?UL_SHR
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine83 & 0xFFFF
// 2673   payload[6] = BREAK_UINT32(zigBeeLocalStartTime, 3);
??CrossCallReturnLabel_187:
        LCALL     ?UL_SHR
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        MOVX      @DPTR,A
        MOV       A,#0x22
        LCALL     ?XSTACK_DISP0_8
        MOV       R0,#?V0
        LCALL     ?L_MOV_X
// 2674   payload[7] = BREAK_UINT32(zigBeeLocalEndTime, 0);
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        MOVX      @DPTR,A
// 2675   payload[8] = BREAK_UINT32(zigBeeLocalEndTime, 1);
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine66 & 0xFFFF
// 2676   payload[9] = BREAK_UINT32(zigBeeLocalEndTime, 2);
??CrossCallReturnLabel_141:
        LCALL     ?UL_SHR
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine83 & 0xFFFF
// 2677   payload[10] = BREAK_UINT32(zigBeeLocalEndTime, 3);
??CrossCallReturnLabel_188:
        LCALL     ?UL_SHR
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        LCALL     ??Subroutine195_0 & 0xFFFF
// 2678 
// 2679   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2680                           COMMAND_CLOSURES_SET_YEAR_DAY_SCHEDULE, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 2681                           disableDefaultRsp, 0, seqNum, PAYLOAD_LEN_SET_YEAR_DAY_SCHEDULE, payload );
??CrossCallReturnLabel_492:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       ?V0,#0xb
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV       A,#0x2a
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_26:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        CLR       A
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       A,R5
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       ?V0,#0xe
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 39)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       A,R7
        MOV       R1,A
        LCALL     ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_508:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       A,#0xb
          CFI EndBlock cfiBlock989
        REQUIRE ?Subroutine5
        ; // Fall through to label ?Subroutine5
// 2682 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine5:
          CFI Block cfiBlock990 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 28)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Valid
        MOV       R7,#0x9
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock990
// 2683 
// 2684 /*********************************************************************
// 2685  * @fn      zclClosures_SendDoorLockSetHolidayScheduleRequest
// 2686  *
// 2687  * @brief   Call to send out a Set Holiday Schedule Command
// 2688  *
// 2689  * @param   srcEP - Sending application's endpoint
// 2690  * @param   dstAddr - where you want the message to go
// 2691  * @param   holidayScheduleID - A unique ID for given Holiday Schedule (0 to 254)
// 2692  * @param   zigBeeLocalStartTime - Start time of the Year Day Schedule representing by ZigBeeLocalTime
// 2693  * @param   zigBeeLocalEndTime - End time of the Year Day Schedule representing by ZigBeeLocalTime
// 2694  * @param   operatingModeDuringHoliday - A valid enumeration value as listed in operating mode attribute
// 2695  * @param   disableDefaultRsp - decides default response is necessary or not
// 2696  * @param   seqNum - sequence number of the command packet
// 2697  *
// 2698  * @return  ZStatus_t
// 2699  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2700 ZStatus_t zclClosures_SendDoorLockSetHolidayScheduleRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockSetHolidayScheduleRequest:
          CFI Block cfiBlock991 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetHolidayScheduleRequest
        CODE
// 2701                                                              uint8 holidayScheduleID,
// 2702                                                              uint32 zigBeeLocalStartTime,
// 2703                                                              uint32 zigBeeLocalEndTime,
// 2704                                                              uint8 operatingModeDuringHoliday,
// 2705                                                              uint8 disableDefaultRsp, uint8 seqNum )
// 2706 {
        FUNCALL zclClosures_SendDoorLockSetHolidayScheduleRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        MOV       A,#-0x11
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
        ; Saved register size: 17
        ; Auto size: 10
        MOV       A,#-0xa
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       ?V8,R1
// 2707   uint8 payload[PAYLOAD_LEN_SET_HOLIDAY_SCHEDULE];
// 2708 
// 2709   payload[0] = holidayScheduleID;
        MOV       A,R4
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       A,#0x1b
        LCALL     ?XSTACK_DISP0_8
        MOV       R0,#?V0
        LCALL     ?L_MOV_X
// 2710   payload[1] = BREAK_UINT32(zigBeeLocalStartTime, 0);
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        MOVX      @DPTR,A
// 2711   payload[2] = BREAK_UINT32(zigBeeLocalStartTime, 1);
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine66 & 0xFFFF
// 2712   payload[3] = BREAK_UINT32(zigBeeLocalStartTime, 2);
??CrossCallReturnLabel_142:
        LCALL     ?UL_SHR
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine83 & 0xFFFF
// 2713   payload[4] = BREAK_UINT32(zigBeeLocalStartTime, 3);
??CrossCallReturnLabel_189:
        LCALL     ?UL_SHR
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        MOVX      @DPTR,A
        MOV       A,#0x1f
        LCALL     ?XSTACK_DISP0_8
        MOV       R0,#?V0
        LCALL     ?L_MOV_X
// 2714   payload[5] = BREAK_UINT32(zigBeeLocalEndTime, 0);
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        MOVX      @DPTR,A
// 2715   payload[6] = BREAK_UINT32(zigBeeLocalEndTime, 1);
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine66 & 0xFFFF
// 2716   payload[7] = BREAK_UINT32(zigBeeLocalEndTime, 2);
??CrossCallReturnLabel_143:
        LCALL     ?UL_SHR
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine83 & 0xFFFF
// 2717   payload[8] = BREAK_UINT32(zigBeeLocalEndTime, 3);
??CrossCallReturnLabel_190:
        LCALL     ?UL_SHR
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        MOVX      @DPTR,A
// 2718   payload[9] = operatingModeDuringHoliday;
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine63 & 0xFFFF
// 2719 
// 2720   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2721                           COMMAND_CLOSURES_SET_HOLIDAY_SCHEDULE, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 2722                           disableDefaultRsp, 0, seqNum, PAYLOAD_LEN_SET_HOLIDAY_SCHEDULE, payload );
??CrossCallReturnLabel_490:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       ?V0,#0xa
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       A,#0x28
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_27:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        CLR       A
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 34)
        MOV       A,#0x2a
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_28:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV       ?V0,#0x11
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       R1,?V8
        LCALL     ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_509:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       A,#0xa
        LJMP      ?Subroutine5 & 0xFFFF
// 2723 }
          CFI EndBlock cfiBlock991

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine83:
          CFI Block cfiCond992 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetYearDayScheduleRequest
          CFI Conditional ??CrossCallReturnLabel_187
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond993 Using cfiCommon0
          CFI (cfiCond993) Function zclClosures_SendDoorLockSetYearDayScheduleRequest
          CFI (cfiCond993) Conditional ??CrossCallReturnLabel_188
          CFI (cfiCond993) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond993) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond993) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond993) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond993) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond993) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond993) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond993) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond993) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond993) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond993) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond993) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond993) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond993) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond993) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond993) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond993) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond993) CFA_SP SP+-2
          CFI (cfiCond993) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond994 Using cfiCommon0
          CFI (cfiCond994) Function zclClosures_SendDoorLockSetHolidayScheduleRequest
          CFI (cfiCond994) Conditional ??CrossCallReturnLabel_189
          CFI (cfiCond994) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond994) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond994) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond994) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond994) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond994) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond994) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond994) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond994) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond994) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond994) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond994) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond994) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond994) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond994) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond994) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond994) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond994) CFA_SP SP+-2
          CFI (cfiCond994) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond995 Using cfiCommon0
          CFI (cfiCond995) Function zclClosures_SendDoorLockSetHolidayScheduleRequest
          CFI (cfiCond995) Conditional ??CrossCallReturnLabel_190
          CFI (cfiCond995) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond995) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond995) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond995) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond995) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond995) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond995) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond995) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond995) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond995) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond995) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond995) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond995) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond995) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond995) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond995) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond995) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond995) CFA_SP SP+-2
          CFI (cfiCond995) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker996 Using cfiCommon1
          CFI (cfiPicker996) NoFunction
          CFI (cfiPicker996) Picker
        MOV       A,?V4
        MOVX      @DPTR,A
        MOV       A,#0x18
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond992
          CFI EndBlock cfiCond993
          CFI EndBlock cfiCond994
          CFI EndBlock cfiCond995
          CFI EndBlock cfiPicker996

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine66:
          CFI Block cfiCond997 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetYearDayScheduleRequest
          CFI Conditional ??CrossCallReturnLabel_140
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond998 Using cfiCommon0
          CFI (cfiCond998) Function zclClosures_SendDoorLockSetYearDayScheduleRequest
          CFI (cfiCond998) Conditional ??CrossCallReturnLabel_141
          CFI (cfiCond998) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond998) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond998) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond998) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond998) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond998) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond998) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond998) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond998) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond998) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond998) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond998) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond998) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond998) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond998) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond998) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond998) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond998) CFA_SP SP+-2
          CFI (cfiCond998) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond999 Using cfiCommon0
          CFI (cfiCond999) Function zclClosures_SendDoorLockSetHolidayScheduleRequest
          CFI (cfiCond999) Conditional ??CrossCallReturnLabel_142
          CFI (cfiCond999) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond999) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond999) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond999) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond999) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond999) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond999) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond999) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond999) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond999) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond999) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond999) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond999) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond999) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond999) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond999) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond999) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond999) CFA_SP SP+-2
          CFI (cfiCond999) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1000 Using cfiCommon0
          CFI (cfiCond1000) Function zclClosures_SendDoorLockSetHolidayScheduleRequest
          CFI (cfiCond1000) Conditional ??CrossCallReturnLabel_143
          CFI (cfiCond1000) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1000) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1000) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1000) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1000) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1000) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1000) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1000) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1000) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1000) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1000) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1000) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1000) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1000) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1000) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1000) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1000) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1000) CFA_SP SP+-2
          CFI (cfiCond1000) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker1001 Using cfiCommon1
          CFI (cfiPicker1001) NoFunction
          CFI (cfiPicker1001) Picker
        MOV       A,?V1
        MOVX      @DPTR,A
        MOV       ?V4,?V0
        MOV       ?V5,A
        MOV       ?V6,?V2
        MOV       ?V7,?V3
        MOV       A,#0x10
        MOV       R0,#?V4
        RET
          CFI EndBlock cfiCond997
          CFI EndBlock cfiCond998
          CFI EndBlock cfiCond999
          CFI EndBlock cfiCond1000
          CFI EndBlock cfiPicker1001
// 2724 
// 2725 /*********************************************************************
// 2726  * @fn      zclClosures_SendDoorLockHolidayScheduleRequest
// 2727  *
// 2728  * @brief   Call to send out a Holiday Schedule Command
// 2729  *
// 2730  * @param   srcEP - Sending application's endpoint
// 2731  * @param   dstAddr - where you want the message to go
// 2732  * @param   cmd - COMMAND_CLOSURES_GET_HOLIDAY_SCHEDULE, COMMAND_CLOSURES_CLEAR_HOLIDAY_SCHEDULE
// 2733  * @param   holidayScheduleID - A unique ID for given Holiday Schedule (0 to 254)
// 2734  * @param   disableDefaultRsp - decides default response is necessary or not
// 2735  * @param   seqNum - sequence number of the command packet
// 2736  *
// 2737  * @return  ZStatus_t
// 2738  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2739 ZStatus_t zclClosures_SendDoorLockHolidayScheduleRequest( uint8 srcEP, afAddrType_t *dstAddr, uint8 cmd,
zclClosures_SendDoorLockHolidayScheduleRequest:
          CFI Block cfiBlock1002 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockHolidayScheduleRequest
        CODE
// 2740                                                           uint8 holidayScheduleID,
// 2741                                                           uint8 disableDefaultRsp, uint8 seqNum )
// 2742 {
        FUNCALL zclClosures_SendDoorLockHolidayScheduleRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        LCALL     ?Subroutine64 & 0xFFFF
// 2743   uint8 payload[PAYLOAD_LEN_HOLIDAY_SCHEDULE];
// 2744 
// 2745   payload[0] = holidayScheduleID;
// 2746 
// 2747   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2748                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 2749                           disableDefaultRsp, 0, seqNum, PAYLOAD_LEN_HOLIDAY_SCHEDULE, payload );
??CrossCallReturnLabel_517:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       ?V2,#0x1
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       A,#0x12
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_71:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_72:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       ?V1,#0x0
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       ?V1,#0x1
        LJMP      ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock1002

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine29:
          CFI Block cfiCond1003 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockUserIDRequest
          CFI Conditional ??CrossCallReturnLabel_65
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1004 Using cfiCommon0
          CFI (cfiCond1004) Function zclClosures_SendDoorLockClearAllCodesRequest
          CFI (cfiCond1004) Conditional ??CrossCallReturnLabel_66
          CFI (cfiCond1004) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1004) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1004) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1004) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1004) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1004) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1004) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1004) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1004) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1004) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1004) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1004) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1004) CFA_SP SP+-2
          CFI (cfiCond1004) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1005 Using cfiCommon0
          CFI (cfiCond1005) Function zclClosures_SendDoorLockSetWeekDayScheduleRequest
          CFI (cfiCond1005) Conditional ??CrossCallReturnLabel_67
          CFI (cfiCond1005) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1005) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1005) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1005) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1005) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1005) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1005) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1005) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1005) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1005) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1005) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1005) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1005) CFA_SP SP+-2
          CFI (cfiCond1005) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1006 Using cfiCommon0
          CFI (cfiCond1006) Function zclClosures_SendDoorLockSetWeekDayScheduleRequest
          CFI (cfiCond1006) Conditional ??CrossCallReturnLabel_68
          CFI (cfiCond1006) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1006) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1006) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1006) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1006) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1006) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1006) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1006) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1006) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1006) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1006) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1006) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1006) CFA_SP SP+-2
          CFI (cfiCond1006) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1007 Using cfiCommon0
          CFI (cfiCond1007) Function zclClosures_SendDoorLockScheduleRequest
          CFI (cfiCond1007) Conditional ??CrossCallReturnLabel_69
          CFI (cfiCond1007) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1007) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1007) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1007) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1007) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1007) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1007) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1007) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1007) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1007) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1007) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1007) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1007) CFA_SP SP+-2
          CFI (cfiCond1007) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond1008 Using cfiCommon0
          CFI (cfiCond1008) Function zclClosures_SendDoorLockScheduleRequest
          CFI (cfiCond1008) Conditional ??CrossCallReturnLabel_70
          CFI (cfiCond1008) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1008) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1008) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1008) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1008) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1008) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1008) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1008) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1008) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1008) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1008) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1008) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1008) CFA_SP SP+-2
          CFI (cfiCond1008) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1009 Using cfiCommon0
          CFI (cfiCond1009) Function zclClosures_SendDoorLockHolidayScheduleRequest
          CFI (cfiCond1009) Conditional ??CrossCallReturnLabel_71
          CFI (cfiCond1009) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1009) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1009) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1009) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1009) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1009) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1009) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1009) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1009) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1009) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1009) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1009) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1009) CFA_SP SP+-2
          CFI (cfiCond1009) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1010 Using cfiCommon0
          CFI (cfiCond1010) Function zclClosures_SendDoorLockHolidayScheduleRequest
          CFI (cfiCond1010) Conditional ??CrossCallReturnLabel_72
          CFI (cfiCond1010) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1010) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1010) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1010) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1010) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1010) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1010) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1010) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1010) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1010) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1010) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1010) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1010) CFA_SP SP+-2
          CFI (cfiCond1010) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1011 Using cfiCommon0
          CFI (cfiCond1011) Function zclClosures_SendDoorLockStatusResponse
          CFI (cfiCond1011) Conditional ??CrossCallReturnLabel_73
          CFI (cfiCond1011) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1011) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1011) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1011) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1011) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1011) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1011) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1011) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1011) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1011) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1011) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1011) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1011) CFA_SP SP+-2
          CFI (cfiCond1011) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1012 Using cfiCommon0
          CFI (cfiCond1012) Function zclClosures_SendDoorLockStatusResponse
          CFI (cfiCond1012) Conditional ??CrossCallReturnLabel_74
          CFI (cfiCond1012) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1012) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1012) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1012) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1012) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1012) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1012) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1012) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1012) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1012) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1012) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1012) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1012) CFA_SP SP+-2
          CFI (cfiCond1012) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1013 Using cfiCommon0
          CFI (cfiCond1013) Function zclClosures_SendSetTemporaryPinStatusResponse
          CFI (cfiCond1013) Conditional ??CrossCallReturnLabel_75
          CFI (cfiCond1013) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1013) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1013) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1013) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1013) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1013) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1013) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1013) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1013) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1013) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1013) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1013) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1013) CFA_SP SP+-2
          CFI (cfiCond1013) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1014 Using cfiCommon0
          CFI (cfiCond1014) Function zclClosures_SendModifyPinStatusResponse
          CFI (cfiCond1014) Conditional ??CrossCallReturnLabel_76
          CFI (cfiCond1014) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1014) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1014) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1014) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1014) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1014) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1014) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1014) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1014) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1014) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1014) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1014) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1014) CFA_SP SP+-2
          CFI (cfiCond1014) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker1015 Using cfiCommon1
          CFI (cfiPicker1015) NoFunction
          CFI (cfiPicker1015) Picker
        MOVX      A,@DPTR
        MOV       ?V1,A
        MOV       R0,#?V1
        RET
          CFI EndBlock cfiCond1003
          CFI EndBlock cfiCond1004
          CFI EndBlock cfiCond1005
          CFI EndBlock cfiCond1006
          CFI EndBlock cfiCond1007
          CFI EndBlock cfiCond1008
          CFI EndBlock cfiCond1009
          CFI EndBlock cfiCond1010
          CFI EndBlock cfiCond1011
          CFI EndBlock cfiCond1012
          CFI EndBlock cfiCond1013
          CFI EndBlock cfiCond1014
          CFI EndBlock cfiPicker1015
// 2750 }
// 2751 
// 2752 /*********************************************************************
// 2753  * @fn      zclClosures_SendDoorLockSetUserTypeRequest
// 2754  *
// 2755  * @brief   Call to send out a Set User Type Command
// 2756  *
// 2757  * @param   srcEP - Sending application's endpoint
// 2758  * @param   dstAddr - where you want the message to go
// 2759  * @param   userID - User ID is between 0 - [# PINs User supported attribute]
// 2760  * @param   userType - Used to indicate what the type is for a specific User ID
// 2761  * @param   disableDefaultRsp - decides default response is necessary or not
// 2762  * @param   seqNum - sequence number of the command packet
// 2763  *
// 2764  * @return  ZStatus_t
// 2765  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2766 ZStatus_t zclClosures_SendDoorLockSetUserTypeRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockSetUserTypeRequest:
          CFI Block cfiBlock1016 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetUserTypeRequest
        CODE
// 2767                                                       uint16 userID, uint8 userType,
// 2768                                                       uint8 disableDefaultRsp, uint8 seqNum )
// 2769 {
        FUNCALL zclClosures_SendDoorLockSetUserTypeRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 3
        MOV       A,#-0x3
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV       A,R1
        MOV       R6,A
// 2770   uint8 payload[PAYLOAD_LEN_SET_USER_TYPE];
// 2771 
// 2772   payload[0] = LO_UINT16(userID);
        MOV       A,R4
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
// 2773   payload[1] = HI_UINT16(userID);
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R5
        MOVX      @DPTR,A
// 2774   payload[2] = userType;
        MOV       A,#0xd
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ??Subroutine195_0 & 0xFFFF
// 2775 
// 2776   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2777                           COMMAND_CLOSURES_SET_USER_TYPE, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 2778                           disableDefaultRsp, 0, seqNum, PAYLOAD_LEN_SET_USER_TYPE, payload );
??CrossCallReturnLabel_493:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       ?V0,#0x3
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_29:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        CLR       A
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_30:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V0,#0x14
        LJMP      ?Subroutine4 & 0xFFFF
// 2779 }
          CFI EndBlock cfiBlock1016
// 2780 
// 2781 /*********************************************************************
// 2782  * @fn      zclClosures_SendDoorLockSetRFIDCodeRequest
// 2783  *
// 2784  * @brief   Call to send out a Set RFID Code Command
// 2785  *
// 2786  * @param   srcEP - Sending application's endpoint
// 2787  * @param   dstAddr - where you want the message to go
// 2788  * @param   pPayload:
// 2789  *           userID - User ID is between 0 - [# PINs User supported attribute]
// 2790  *           userStatus - Used to indicate what the status is for a specific User ID
// 2791  *           userType - Used to indicate what the type is for a specific User ID
// 2792  *           aRfidCode - A ZigBee string indicating the RFID code used to create the event
// 2793  * @param   disableDefaultRsp - decides default response is necessary or not
// 2794  * @param   seqNum - sequence number of the command packet
// 2795  *
// 2796  * @return  ZStatus_t
// 2797  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2798 ZStatus_t zclClosures_SendDoorLockSetRFIDCodeRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockSetRFIDCodeRequest:
          CFI Block cfiBlock1017 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetRFIDCodeRequest
        CODE
// 2799                                                       zclDoorLockSetRFIDCode_t *pPayload,
// 2800                                                       uint8 disableDefaultRsp, uint8 seqNum )
// 2801 {
        FUNCALL zclClosures_SendDoorLockSetRFIDCodeRequest, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockSetRFIDCodeRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockSetRFIDCodeRequest, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV       A,#-0x14
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        LCALL     ?Subroutine11 & 0xFFFF
// 2802   uint8 i;
// 2803   uint8 *pBuf;  // variable length payload
// 2804   uint8 offset;
// 2805   uint8 calculatedArrayLen;
// 2806   uint8 calculatedBufSize;
// 2807   ZStatus_t status;
// 2808 
// 2809   // first octet of PIN/RFID Code variable string identifies its length
// 2810   calculatedArrayLen = pPayload->pRfidCode[0] + 1;   // add first byte of string
// 2811 
// 2812   // determine the total buffer size
// 2813   calculatedBufSize = calculatedArrayLen + PAYLOAD_LEN_SET_RFID_CODE;
// 2814 
// 2815   pBuf = zcl_mem_alloc( calculatedBufSize );
// 2816   if ( !pBuf )
??CrossCallReturnLabel_5:
        JNZ       ??zclClosures_SendDoorLockSetRFIDCodeRequest_0
// 2817   {
// 2818     return ( ZMemError );  // no memory
        MOV       R1,#0x10
        SJMP      ??CrossCallReturnLabel_433
// 2819   }
// 2820 
// 2821   // over-the-air is always little endian. Break into a byte stream.
// 2822   pBuf[0] = LO_UINT16(pPayload->userID);
??zclClosures_SendDoorLockSetRFIDCodeRequest_0:
        LCALL     ?Subroutine9 & 0xFFFF
// 2823   pBuf[1] = HI_UINT16(pPayload->userID);
// 2824   pBuf[2] = pPayload->userStatus;
// 2825   pBuf[3] = pPayload->userType;
// 2826   offset = 4;
// 2827   for ( i = 0; i < calculatedArrayLen; i++ )
??CrossCallReturnLabel_1:
        SJMP      ??zclClosures_SendDoorLockSetRFIDCodeRequest_1
// 2828   {
// 2829     pBuf[offset++] = pPayload->pRfidCode[i];
??zclClosures_SendDoorLockSetRFIDCodeRequest_2:
        LCALL     ?Subroutine10 & 0xFFFF
// 2830   }
??CrossCallReturnLabel_470:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_211:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_SendDoorLockSetRFIDCodeRequest_1:
        MOV       A,R0
        CLR       C
        SUBB      A,?V3
        JC        ??zclClosures_SendDoorLockSetRFIDCodeRequest_2
// 2831 
// 2832   status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2833                             COMMAND_CLOSURES_SET_RFID_CODE, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 2834                             disableDefaultRsp, 0, seqNum, calculatedBufSize, pBuf );
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V6
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       R0,#?V8
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,#0x1a
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_31:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        CLR       A
        MOV       ?V0,A
        MOV       ?V1,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       A,#0x1c
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_32:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       ?V0,#0x16
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        LCALL     ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_498:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        LCALL     ?Subroutine93 & 0xFFFF
// 2835   zcl_mem_free( pBuf );
// 2836   return status;
??CrossCallReturnLabel_433:
        LJMP      ?Subroutine3 & 0xFFFF
// 2837 }
          CFI EndBlock cfiBlock1017

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine95:
          CFI Block cfiCond1018 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI Conditional ??CrossCallReturnLabel_209
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1019 Using cfiCommon0
          CFI (cfiCond1019) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond1019) Conditional ??CrossCallReturnLabel_210
          CFI (cfiCond1019) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1019) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1019) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1019) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1019) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1019) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1019) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1019) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1019) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1019) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1019) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1019) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1019) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1019) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1019) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1019) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1019) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1019) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1019) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1019) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1019) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1020 Using cfiCommon0
          CFI (cfiCond1020) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond1020) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond1020) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1020) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1020) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1020) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1020) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1020) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1020) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1020) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1020) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1020) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1020) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1020) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1020) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1020) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1020) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1020) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1020) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1020) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1020) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1020) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1020) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1021 Using cfiCommon0
          CFI (cfiCond1021) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond1021) Conditional ??CrossCallReturnLabel_212
          CFI (cfiCond1021) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1021) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1021) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1021) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1021) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1021) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1021) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1021) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1021) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1021) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1021) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1021) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1021) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1021) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1021) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1021) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1021) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1021) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1021) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1021) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1021) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1022 Using cfiCommon0
          CFI (cfiCond1022) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond1022) Conditional ??CrossCallReturnLabel_213
          CFI (cfiCond1022) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1022) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1022) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1022) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1022) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1022) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1022) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1022) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1022) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1022) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1022) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1022) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1022) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1022) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1022) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1022) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1022) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1022) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1022) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1022) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1022) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker1023 Using cfiCommon1
          CFI (cfiPicker1023) NoFunction
          CFI (cfiPicker1023) Picker
        MOV       A,R1
        MOV       R2,A
        MOV       A,?V6
        ADD       A,R2
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond1018
          CFI EndBlock cfiCond1019
          CFI EndBlock cfiCond1020
          CFI EndBlock cfiCond1021
          CFI EndBlock cfiCond1022
          CFI EndBlock cfiPicker1023

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine20:
          CFI Block cfiCond1024 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI Conditional ??CrossCallReturnLabel_18
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1025 Using cfiCommon0
          CFI (cfiCond1025) Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI (cfiCond1025) Conditional ??CrossCallReturnLabel_19
          CFI (cfiCond1025) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1025) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1025) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1025) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1025) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1025) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1025) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1025) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1025) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1025) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1025) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1025) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1025) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1025) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1025) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1025) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1025) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1025) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1025) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1025) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1025) CFA_SP SP+-2
          CFI (cfiCond1025) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1026 Using cfiCommon0
          CFI (cfiCond1026) Function zclClosures_SendDoorLockGetLogRecordRequest
          CFI (cfiCond1026) Conditional ??CrossCallReturnLabel_20
          CFI (cfiCond1026) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1026) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1026) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1026) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1026) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1026) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1026) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1026) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1026) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1026) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1026) CFA_SP SP+-2
          CFI (cfiCond1026) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1027 Using cfiCommon0
          CFI (cfiCond1027) Function zclClosures_SendDoorLockGetLogRecordRequest
          CFI (cfiCond1027) Conditional ??CrossCallReturnLabel_21
          CFI (cfiCond1027) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1027) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1027) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1027) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1027) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1027) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1027) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1027) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1027) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1027) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1027) CFA_SP SP+-2
          CFI (cfiCond1027) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond1028 Using cfiCommon0
          CFI (cfiCond1028) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond1028) Conditional ??CrossCallReturnLabel_22
          CFI (cfiCond1028) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1028) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1028) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1028) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1028) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1028) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1028) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1028) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1028) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1028) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1028) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1028) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1028) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1028) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1028) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1028) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1028) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1028) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1028) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1028) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1028) CFA_SP SP+-2
          CFI (cfiCond1028) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1029 Using cfiCommon0
          CFI (cfiCond1029) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond1029) Conditional ??CrossCallReturnLabel_23
          CFI (cfiCond1029) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1029) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1029) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1029) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1029) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1029) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1029) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1029) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1029) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1029) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1029) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1029) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1029) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1029) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1029) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1029) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1029) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1029) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1029) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1029) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1029) CFA_SP SP+-2
          CFI (cfiCond1029) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1030 Using cfiCommon0
          CFI (cfiCond1030) Function zclClosures_SendDoorLockSetUserStatusRequest
          CFI (cfiCond1030) Conditional ??CrossCallReturnLabel_24
          CFI (cfiCond1030) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1030) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1030) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1030) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1030) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1030) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1030) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1030) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1030) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1030) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1030) CFA_SP SP+-2
          CFI (cfiCond1030) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1031 Using cfiCommon0
          CFI (cfiCond1031) Function zclClosures_SendDoorLockSetUserStatusRequest
          CFI (cfiCond1031) Conditional ??CrossCallReturnLabel_25
          CFI (cfiCond1031) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1031) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1031) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1031) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1031) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1031) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1031) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1031) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1031) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1031) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1031) CFA_SP SP+-2
          CFI (cfiCond1031) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1032 Using cfiCommon0
          CFI (cfiCond1032) Function zclClosures_SendDoorLockSetYearDayScheduleRequest
          CFI (cfiCond1032) Conditional ??CrossCallReturnLabel_26
          CFI (cfiCond1032) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1032) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1032) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1032) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1032) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1032) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1032) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1032) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1032) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1032) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1032) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1032) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1032) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1032) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1032) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1032) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1032) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1032) CFA_SP SP+-2
          CFI (cfiCond1032) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond1033 Using cfiCommon0
          CFI (cfiCond1033) Function zclClosures_SendDoorLockSetHolidayScheduleRequest
          CFI (cfiCond1033) Conditional ??CrossCallReturnLabel_27
          CFI (cfiCond1033) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1033) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1033) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1033) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1033) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1033) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1033) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1033) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1033) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1033) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1033) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1033) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1033) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1033) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1033) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1033) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1033) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1033) CFA_SP SP+-2
          CFI (cfiCond1033) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond1034 Using cfiCommon0
          CFI (cfiCond1034) Function zclClosures_SendDoorLockSetHolidayScheduleRequest
          CFI (cfiCond1034) Conditional ??CrossCallReturnLabel_28
          CFI (cfiCond1034) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1034) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1034) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1034) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1034) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1034) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1034) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1034) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1034) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1034) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1034) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1034) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1034) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1034) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1034) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1034) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1034) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1034) CFA_SP SP+-2
          CFI (cfiCond1034) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond1035 Using cfiCommon0
          CFI (cfiCond1035) Function zclClosures_SendDoorLockSetUserTypeRequest
          CFI (cfiCond1035) Conditional ??CrossCallReturnLabel_29
          CFI (cfiCond1035) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1035) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1035) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1035) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1035) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1035) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1035) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1035) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1035) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1035) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1035) CFA_SP SP+-2
          CFI (cfiCond1035) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1036 Using cfiCommon0
          CFI (cfiCond1036) Function zclClosures_SendDoorLockSetUserTypeRequest
          CFI (cfiCond1036) Conditional ??CrossCallReturnLabel_30
          CFI (cfiCond1036) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1036) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1036) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1036) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1036) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1036) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1036) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1036) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1036) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1036) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1036) CFA_SP SP+-2
          CFI (cfiCond1036) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1037 Using cfiCommon0
          CFI (cfiCond1037) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond1037) Conditional ??CrossCallReturnLabel_31
          CFI (cfiCond1037) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1037) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1037) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1037) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1037) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1037) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1037) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1037) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1037) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1037) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1037) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1037) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1037) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1037) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1037) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1037) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1037) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1037) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1037) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1037) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1037) CFA_SP SP+-2
          CFI (cfiCond1037) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1038 Using cfiCommon0
          CFI (cfiCond1038) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond1038) Conditional ??CrossCallReturnLabel_32
          CFI (cfiCond1038) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1038) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1038) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1038) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1038) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1038) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1038) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1038) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1038) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1038) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1038) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1038) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1038) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1038) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1038) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1038) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1038) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1038) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1038) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1038) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1038) CFA_SP SP+-2
          CFI (cfiCond1038) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1039 Using cfiCommon0
          CFI (cfiCond1039) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond1039) Conditional ??CrossCallReturnLabel_33
          CFI (cfiCond1039) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1039) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1039) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1039) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1039) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1039) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1039) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1039) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1039) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1039) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1039) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1039) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1039) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1039) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1039) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1039) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1039) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1039) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1039) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1039) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1039) CFA_SP SP+-2
          CFI (cfiCond1039) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1040 Using cfiCommon0
          CFI (cfiCond1040) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond1040) Conditional ??CrossCallReturnLabel_34
          CFI (cfiCond1040) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1040) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1040) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1040) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1040) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1040) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1040) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1040) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1040) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1040) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1040) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1040) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1040) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1040) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1040) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1040) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1040) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1040) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1040) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1040) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1040) CFA_SP SP+-2
          CFI (cfiCond1040) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1041 Using cfiCommon0
          CFI (cfiCond1041) Function zclClosures_SendDoorLockGetUserStatusResponse
          CFI (cfiCond1041) Conditional ??CrossCallReturnLabel_35
          CFI (cfiCond1041) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1041) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1041) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1041) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1041) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1041) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1041) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1041) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1041) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1041) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1041) CFA_SP SP+-2
          CFI (cfiCond1041) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1042 Using cfiCommon0
          CFI (cfiCond1042) Function zclClosures_SendDoorLockGetUserStatusResponse
          CFI (cfiCond1042) Conditional ??CrossCallReturnLabel_36
          CFI (cfiCond1042) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1042) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1042) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1042) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1042) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1042) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1042) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1042) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1042) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1042) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1042) CFA_SP SP+-2
          CFI (cfiCond1042) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1043 Using cfiCommon0
          CFI (cfiCond1043) Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
          CFI (cfiCond1043) Conditional ??CrossCallReturnLabel_37
          CFI (cfiCond1043) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1043) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1043) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1043) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1043) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1043) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1043) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1043) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1043) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1043) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1043) CFA_SP SP+-2
          CFI (cfiCond1043) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1044 Using cfiCommon0
          CFI (cfiCond1044) Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
          CFI (cfiCond1044) Conditional ??CrossCallReturnLabel_38
          CFI (cfiCond1044) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1044) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1044) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1044) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1044) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1044) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1044) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1044) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1044) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1044) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1044) CFA_SP SP+-2
          CFI (cfiCond1044) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1045 Using cfiCommon0
          CFI (cfiCond1045) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond1045) Conditional ??CrossCallReturnLabel_39
          CFI (cfiCond1045) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1045) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1045) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1045) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1045) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1045) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1045) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1045) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1045) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1045) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1045) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1045) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1045) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1045) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1045) CFA_SP SP+-2
          CFI (cfiCond1045) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond1046 Using cfiCommon0
          CFI (cfiCond1046) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond1046) Conditional ??CrossCallReturnLabel_40
          CFI (cfiCond1046) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1046) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1046) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1046) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1046) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1046) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1046) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1046) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1046) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1046) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1046) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1046) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1046) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1046) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1046) CFA_SP SP+-2
          CFI (cfiCond1046) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond1047 Using cfiCommon0
          CFI (cfiCond1047) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1047) Conditional ??CrossCallReturnLabel_41
          CFI (cfiCond1047) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1047) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1047) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1047) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1047) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1047) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1047) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1047) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1047) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1047) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1047) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1047) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1047) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1047) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1047) CFA_SP SP+-2
          CFI (cfiCond1047) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1048 Using cfiCommon0
          CFI (cfiCond1048) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1048) Conditional ??CrossCallReturnLabel_42
          CFI (cfiCond1048) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1048) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1048) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1048) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1048) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1048) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1048) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1048) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1048) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1048) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1048) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1048) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1048) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1048) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1048) CFA_SP SP+-2
          CFI (cfiCond1048) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond1049 Using cfiCommon0
          CFI (cfiCond1049) Function zclClosures_SendDoorLockGetUserTypeResponse
          CFI (cfiCond1049) Conditional ??CrossCallReturnLabel_43
          CFI (cfiCond1049) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1049) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1049) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1049) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1049) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1049) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1049) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1049) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1049) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1049) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1049) CFA_SP SP+-2
          CFI (cfiCond1049) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1050 Using cfiCommon0
          CFI (cfiCond1050) Function zclClosures_SendDoorLockGetUserTypeResponse
          CFI (cfiCond1050) Conditional ??CrossCallReturnLabel_44
          CFI (cfiCond1050) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1050) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1050) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1050) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1050) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1050) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1050) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1050) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1050) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1050) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1050) CFA_SP SP+-2
          CFI (cfiCond1050) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1051 Using cfiCommon0
          CFI (cfiCond1051) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond1051) Conditional ??CrossCallReturnLabel_45
          CFI (cfiCond1051) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1051) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1051) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1051) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1051) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1051) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1051) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1051) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1051) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1051) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1051) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1051) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1051) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1051) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1051) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1051) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1051) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1051) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1051) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1051) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1051) CFA_SP SP+-2
          CFI (cfiCond1051) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1052 Using cfiCommon0
          CFI (cfiCond1052) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond1052) Conditional ??CrossCallReturnLabel_46
          CFI (cfiCond1052) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1052) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1052) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1052) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1052) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1052) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1052) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1052) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1052) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1052) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1052) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1052) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1052) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1052) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1052) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1052) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1052) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1052) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1052) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1052) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1052) CFA_SP SP+-2
          CFI (cfiCond1052) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker1053 Using cfiCommon1
          CFI (cfiPicker1053) NoFunction
          CFI (cfiPicker1053) Picker
        MOVX      A,@DPTR
        MOV       ?V0,A
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond1024
          CFI EndBlock cfiCond1025
          CFI EndBlock cfiCond1026
          CFI EndBlock cfiCond1027
          CFI EndBlock cfiCond1028
          CFI EndBlock cfiCond1029
          CFI EndBlock cfiCond1030
          CFI EndBlock cfiCond1031
          CFI EndBlock cfiCond1032
          CFI EndBlock cfiCond1033
          CFI EndBlock cfiCond1034
          CFI EndBlock cfiCond1035
          CFI EndBlock cfiCond1036
          CFI EndBlock cfiCond1037
          CFI EndBlock cfiCond1038
          CFI EndBlock cfiCond1039
          CFI EndBlock cfiCond1040
          CFI EndBlock cfiCond1041
          CFI EndBlock cfiCond1042
          CFI EndBlock cfiCond1043
          CFI EndBlock cfiCond1044
          CFI EndBlock cfiCond1045
          CFI EndBlock cfiCond1046
          CFI EndBlock cfiCond1047
          CFI EndBlock cfiCond1048
          CFI EndBlock cfiCond1049
          CFI EndBlock cfiCond1050
          CFI EndBlock cfiCond1051
          CFI EndBlock cfiCond1052
          CFI EndBlock cfiPicker1053
// 2838 
// 2839 /*********************************************************************
// 2840  * @fn      zclClosures_SendDoorLockStatusResponse
// 2841  *
// 2842  * @brief   Call to send out a Status Response
// 2843  *
// 2844  * @param   srcEP - Sending application's endpoint
// 2845  * @param   dstAddr - where you want the message to go
// 2846  * @param   cmd - COMMAND_CLOSURES_LOCK_DOOR_RSP, COMMAND_CLOSURES_UNLOCK_DOOR_RSP
// 2847  *                COMMAND_CLOSURES_TOGGLE_RSP, COMMAND_CLOSURES_UNLOCK_WITH_TIMEOUT_RSP,
// 2848  *                COMMAND_CLOSURES_SET_PIN_CODE_RSP, COMMAND_CLOSURES_CLEAR_PIN_CODE_RSP,
// 2849  *                COMMAND_CLOSURES_CLEAR_ALL_PIN_CODES_RSP, COMMAND_CLOSURES_SET_USER_STATUS_RSP,
// 2850  *                COMMAND_CLOSURES_SET_WEEK_DAY_SCHEDULE_RSP, COMMAND_CLOSURES_CLEAR_WEEK_DAY_SCHEDULE_RSP,
// 2851  *                COMMAND_CLOSURES_SET_YEAR_DAY_SCHEDULE_RSP, COMMAND_CLOSURES_CLEAR_YEAR_DAY_SCHEDULE_RSP,
// 2852  *                COMMAND_CLOSURES_SET_HOLIDAY_SCHEDULE_RSP, COMMAND_CLOSURES_CLEAR_HOLIDAY_SCHEDULE_RSP,
// 2853  *                COMMAND_CLOSURES_SET_USER_TYPE_RSP, COMMAND_CLOSURES_SET_RFID_CODE_RSP,
// 2854  *                COMMAND_CLOSURES_CLEAR_RFID_CODE_RSP, COMMAND_CLOSURES_CLEAR_ALL_RFID_CODES_RSP
// 2855  * @param   status - Returns the state due to the requesting command
// 2856  * @param   disableDefaultRsp - decides default response is necessary or not
// 2857  * @param   seqNum - sequence number of the command packet
// 2858  *
// 2859  * @return  ZStatus_t
// 2860  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2861 ZStatus_t zclClosures_SendDoorLockStatusResponse( uint8 srcEP, afAddrType_t *dstAddr,uint8 cmd,
zclClosures_SendDoorLockStatusResponse:
          CFI Block cfiBlock1054 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockStatusResponse
        CODE
// 2862                                                   uint8 status, uint8 disableDefaultRsp, uint8 seqNum )
// 2863 {
        FUNCALL zclClosures_SendDoorLockStatusResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        LCALL     ?Subroutine64 & 0xFFFF
// 2864   uint8 payload[1];   // 1 byte payload
// 2865 
// 2866   payload[0] = status;
// 2867 
// 2868   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2869                           cmd, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 2870                           disableDefaultRsp, 0, seqNum, sizeof( payload ), payload );
??CrossCallReturnLabel_518:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       ?V2,#0x1
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       A,#0x12
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_73:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_74:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        LJMP      ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock1054
// 2871 }
// 2872 
// 2873 /*********************************************************************
// 2874  * @fn      zclClosures_SendDoorLockGetLogRecordResponse
// 2875  *
// 2876  * @brief   Call to send out a Get Log Record Response
// 2877  *
// 2878  * @param   srcEP - Sending application's endpoint
// 2879  * @param   dstAddr - where you want the message to go
// 2880  * @param   pPayload:
// 2881  *           logEntryID - The index into the log table where this log entry is stored
// 2882  *           timestamp - A ZigBeeLocalTime used to timestamp all events and alarms on the door lock
// 2883  *           eventType - Indicates the type of event that took place on the door lock
// 2884  *           source - A source value of available sources
// 2885  *           eventIDAlarmCode - A one byte value indicating the type of event that took place on the door lock
// 2886  *           userID - User ID is between 0 - [# PINs User supported attribute]
// 2887  *           aPIN - A ZigBee string indicating the PIN code used to create the event on the door lock
// 2888  * @param   disableDefaultRsp - decides default response is necessary or not
// 2889  * @param   seqNum - sequence number of the command packet
// 2890  *
// 2891  * @return  ZStatus_t
// 2892  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2893 ZStatus_t zclClosures_SendDoorLockGetLogRecordResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockGetLogRecordResponse:
          CFI Block cfiBlock1055 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetLogRecordResponse
        CODE
// 2894                                                         zclDoorLockGetLogRecordRsp_t *pPayload,
// 2895                                                         uint8 disableDefaultRsp, uint8 seqNum )
// 2896 {
        FUNCALL zclClosures_SendDoorLockGetLogRecordResponse, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockGetLogRecordResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockGetLogRecordResponse, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV       A,#-0x16
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V11,R1
        MOV       ?V12,R2
        MOV       ?V13,R3
        MOV       A,R4
        MOV       R6,A
        MOV       A,R5
        MOV       R7,A
// 2897   uint8 i;
// 2898   uint8 *pBuf;  // variable length payload
// 2899   uint8 offset;
// 2900   uint8 calculatedArrayLen;
// 2901   uint8 calculatedBufSize;
// 2902   ZStatus_t status;
// 2903 
// 2904   // first octet of PIN/RFID Code variable string identifies its length
// 2905   calculatedArrayLen = pPayload->pPIN[0] + 1;   // add first byte of string
        MOV       A,R4
        ADD       A,#0xb
        MOV       ?V8,A
        CLR       A
        ADDC      A,R7
        MOV       ?V9,A
        MOV       DPL,?V8
        LCALL     ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_443:
        MOV       ?V10,A
// 2906 
// 2907   // determine the total buffer size
// 2908   calculatedBufSize = calculatedArrayLen + PAYLOAD_LEN_GET_LOG_RECORD_RSP;
        MOV       A,#0xb
        ADD       A,?V10
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
// 2909 
// 2910   pBuf = zcl_mem_alloc( calculatedBufSize );
        MOV       ?V2,A
        MOV       ?V3,#0x0
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,?V3
        LCALL     ??Subroutine200_0 & 0xFFFF
// 2911   if ( !pBuf )
??CrossCallReturnLabel_527:
        JNZ       ??zclClosures_SendDoorLockGetLogRecordResponse_0
// 2912   {
// 2913     return ( ZMemError );  // no memory
        MOV       R1,#0x10
        LJMP      ??CrossCallReturnLabel_437 & 0xFFFF
// 2914   }
// 2915 
// 2916   // over-the-air is always little endian. Break into a byte stream.
// 2917   pBuf[0] = LO_UINT16(pPayload->logEntryID);
??zclClosures_SendDoorLockGetLogRecordResponse_0:
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine189_0 & 0xFFFF
??CrossCallReturnLabel_456:
        LCALL     ?Subroutine82 & 0xFFFF
// 2918   pBuf[1] = HI_UINT16(pPayload->logEntryID);
??CrossCallReturnLabel_185:
        LCALL     ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_458:
        INC       DPTR
        MOVX      @DPTR,A
// 2919   pBuf[2] = BREAK_UINT32(pPayload->timestamp, 0);
        MOV       A,R6
        ADD       A,#0x2
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        MOV       DPL,R2
        MOV       DPH,A
        MOV       R0,#?V4
        LCALL     ?L_MOV_X
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ?Subroutine73 & 0xFFFF
// 2920   pBuf[3] = BREAK_UINT32(pPayload->timestamp, 1);
??CrossCallReturnLabel_452:
        LCALL     ?L_MOV_X
        MOV       A,?V5
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine188_0 & 0xFFFF
// 2921   pBuf[4] = BREAK_UINT32(pPayload->timestamp, 2);
??CrossCallReturnLabel_454:
        LCALL     ?L_MOV_X
        MOV       A,#0x10
        MOV       R0,#?V4
        LCALL     ?UL_SHR
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine73 & 0xFFFF
// 2922   pBuf[5] = BREAK_UINT32(pPayload->timestamp, 3);
??CrossCallReturnLabel_453:
        LCALL     ?L_MOV_X
        MOV       A,#0x18
        MOV       R0,#?V4
        LCALL     ?UL_SHR
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V4
        LCALL     ?Subroutine81 & 0xFFFF
// 2923   pBuf[6] = pPayload->eventType;
??CrossCallReturnLabel_180:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine132 & 0xFFFF
??CrossCallReturnLabel_277:
        LCALL     ?Subroutine82 & 0xFFFF
// 2924   pBuf[7] = pPayload->source;
??CrossCallReturnLabel_186:
        LCALL     ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_99:
        LCALL     ?Subroutine81 & 0xFFFF
// 2925   pBuf[8] = pPayload->eventIDAlarmCode;
??CrossCallReturnLabel_181:
        LCALL     ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_100:
        INC       DPTR
        MOVX      @DPTR,A
// 2926   pBuf[9] = LO_UINT16(pPayload->userID);
        MOV       A,R6
        ADD       A,#0x9
        MOV       R0,A
        CLR       A
        ADDC      A,R7
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,A
        LCALL     ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_85:
        LCALL     ?Subroutine79 & 0xFFFF
// 2927   pBuf[10] = HI_UINT16(pPayload->userID);
??CrossCallReturnLabel_173:
        LCALL     ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_86:
        INC       DPTR
        MOVX      @DPTR,A
// 2928   offset = 11;
        MOV       R1,#0xb
// 2929   for ( i = 0; i < calculatedArrayLen; i++ )
        MOV       R0,#0x0
        SJMP      ??zclClosures_SendDoorLockGetLogRecordResponse_1
// 2930   {
// 2931     pBuf[offset++] = pPayload->pPIN[i];
??zclClosures_SendDoorLockGetLogRecordResponse_2:
        MOV       A,R0
        MOV       R2,A
        MOV       DPL,?V8
        MOV       DPH,?V9
        LCALL     ??Subroutine190_0 & 0xFFFF
// 2932   }
??CrossCallReturnLabel_467:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_214:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_SendDoorLockGetLogRecordResponse_1:
        MOV       A,R0
        CLR       C
        SUBB      A,?V10
        JC        ??zclClosures_SendDoorLockGetLogRecordResponse_2
// 2933 
// 2934   status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2935                             COMMAND_CLOSURES_GET_LOG_RECORD_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 2936                             disableDefaultRsp, 0, seqNum, calculatedBufSize, pBuf );
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       A,#0x1c
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_101:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       A,#0x1e
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_102:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       ?V2,#0x1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       ?V2,#0x4
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 34)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       R2,?V12
        MOV       R3,?V13
        MOV       R1,?V11
        LCALL     ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_510:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       A,R1
        MOV       R6,A
// 2937   zcl_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     ??Subroutine182_0 & 0xFFFF
// 2938   return status;
??CrossCallReturnLabel_437:
        MOV       A,#0x1
        SJMP      ??Subroutine191_0
// 2939 }
          CFI EndBlock cfiBlock1055

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine79:
          CFI Block cfiCond1056 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockCmds
          CFI Conditional ??CrossCallReturnLabel_175
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond1057 Using cfiCommon0
          CFI (cfiCond1057) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1057) Conditional ??CrossCallReturnLabel_173
          CFI (cfiCond1057) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1057) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1057) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1057) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1057) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1057) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1057) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1057) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1057) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1057) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1057) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1057) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1057) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1057) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1057) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1057) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1057) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1057) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1057) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1057) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1057) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1057) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1057) CFA_SP SP+-2
          CFI (cfiCond1057) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1058 Using cfiCommon0
          CFI (cfiCond1058) Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
          CFI (cfiCond1058) Conditional ??CrossCallReturnLabel_174
          CFI (cfiCond1058) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1058) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1058) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1058) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1058) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1058) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1058) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1058) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1058) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1058) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1058) CFA_SP SP+-2
          CFI (cfiCond1058) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker1059 Using cfiCommon1
          CFI (cfiPicker1059) NoFunction
          CFI (cfiPicker1059) Picker
        MOVX      @DPTR,A
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        RET
          CFI EndBlock cfiCond1056
          CFI EndBlock cfiCond1057
          CFI EndBlock cfiCond1058
          CFI EndBlock cfiPicker1059

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine73:
          CFI Block cfiCond1060 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI Conditional ??CrossCallReturnLabel_452
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1061 Using cfiCommon0
          CFI (cfiCond1061) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1061) Conditional ??CrossCallReturnLabel_453
          CFI (cfiCond1061) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1061) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1061) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1061) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1061) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1061) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1061) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1061) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1061) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1061) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1061) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1061) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1061) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1061) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1061) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1061) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1061) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1061) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1061) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1061) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1061) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1061) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1061) CFA_SP SP+-2
          CFI (cfiCond1061) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker1062 Using cfiCommon1
          CFI (cfiPicker1062) NoFunction
          CFI (cfiPicker1062) Picker
        INC       DPTR
        INC       DPTR
        MOV       A,?V4
          CFI EndBlock cfiCond1060
          CFI EndBlock cfiCond1061
          CFI EndBlock cfiPicker1062
        REQUIRE ??Subroutine188_0
        ; // Fall through to label ??Subroutine188_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine188_0:
          CFI Block cfiCond1063 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI Conditional ??CrossCallReturnLabel_454
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1064 Using cfiCommon0
          CFI (cfiCond1064) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1064) Conditional ??CrossCallReturnLabel_452
          CFI (cfiCond1064) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1064) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1064) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1064) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1064) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1064) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1064) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1064) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1064) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1064) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1064) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1064) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1064) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1064) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1064) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1064) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1064) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1064) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1064) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1064) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1064) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1064) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1064) CFA_SP SP+-2
          CFI (cfiCond1064) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1065 Using cfiCommon0
          CFI (cfiCond1065) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1065) Conditional ??CrossCallReturnLabel_453
          CFI (cfiCond1065) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1065) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1065) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1065) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1065) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1065) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1065) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1065) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1065) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1065) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1065) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1065) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1065) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1065) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1065) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1065) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1065) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1065) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1065) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1065) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1065) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1065) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1065) CFA_SP SP+-2
          CFI (cfiCond1065) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker1066 Using cfiCommon1
          CFI (cfiPicker1066) NoFunction
          CFI (cfiPicker1066) Picker
        LCALL     ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_536:
        MOV       R0,#?V4
        RET
          CFI EndBlock cfiCond1063
          CFI EndBlock cfiCond1064
          CFI EndBlock cfiCond1065
          CFI EndBlock cfiPicker1066

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine126:
          CFI Block cfiCond1067 Using cfiCommon0
          CFI Function zclClosures_RegisterDoorLockCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_534
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1068 Using cfiCommon0
          CFI (cfiCond1068) Function zclClosures_RegisterDoorLockCmdCallbacks
          CFI (cfiCond1068) Conditional ??CrossCallReturnLabel_535
          CFI (cfiCond1068) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1068) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1068) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1068) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1068) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1068) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1068) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1068) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1068) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1068) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1068) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1068) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1068) CFA_SP SP+-2
          CFI (cfiCond1068) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1069 Using cfiCommon0
          CFI (cfiCond1069) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1069) Conditional ??CrossCallReturnLabel_536, ??CrossCallReturnLabel_452
          CFI (cfiCond1069) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1069) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1069) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1069) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1069) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1069) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1069) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1069) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1069) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1069) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1069) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1069) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1069) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1069) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1069) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1069) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1069) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1069) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1069) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1069) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1069) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1069) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1069) CFA_SP SP+-4
          CFI (cfiCond1069) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1070 Using cfiCommon0
          CFI (cfiCond1070) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1070) Conditional ??CrossCallReturnLabel_536, ??CrossCallReturnLabel_453
          CFI (cfiCond1070) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1070) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1070) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1070) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1070) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1070) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1070) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1070) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1070) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1070) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1070) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1070) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1070) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1070) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1070) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1070) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1070) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1070) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1070) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1070) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1070) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1070) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1070) CFA_SP SP+-4
          CFI (cfiCond1070) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1071 Using cfiCommon0
          CFI (cfiCond1071) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1071) Conditional ??CrossCallReturnLabel_536, ??CrossCallReturnLabel_454
          CFI (cfiCond1071) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1071) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1071) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1071) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1071) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1071) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1071) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1071) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1071) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1071) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1071) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1071) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1071) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1071) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1071) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1071) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1071) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1071) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1071) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1071) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1071) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1071) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1071) CFA_SP SP+-4
          CFI (cfiCond1071) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1072 Using cfiCommon0
          CFI (cfiCond1072) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1072) Conditional ??CrossCallReturnLabel_537, ??CrossCallReturnLabel_528
          CFI (cfiCond1072) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1072) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1072) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1072) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1072) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1072) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1072) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1072) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1072) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1072) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1072) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1072) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1072) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1072) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1072) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1072) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1072) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1072) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1072) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1072) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1072) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1072) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1072) CFA_SP SP+-4
          CFI (cfiCond1072) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1073 Using cfiCommon0
          CFI (cfiCond1073) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1073) Conditional ??CrossCallReturnLabel_537, ??CrossCallReturnLabel_529
          CFI (cfiCond1073) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1073) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1073) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1073) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1073) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1073) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1073) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1073) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1073) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1073) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1073) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1073) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1073) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1073) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1073) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1073) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1073) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1073) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1073) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1073) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1073) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1073) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1073) CFA_SP SP+-4
          CFI (cfiCond1073) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1074 Using cfiCommon0
          CFI (cfiCond1074) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1074) Conditional ??CrossCallReturnLabel_537, ??CrossCallReturnLabel_530
          CFI (cfiCond1074) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1074) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1074) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1074) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1074) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1074) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1074) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1074) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1074) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1074) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1074) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1074) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1074) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1074) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1074) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1074) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1074) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1074) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1074) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1074) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1074) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1074) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1074) CFA_SP SP+-4
          CFI (cfiCond1074) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1075 Using cfiCommon0
          CFI (cfiCond1075) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1075) Conditional ??CrossCallReturnLabel_537, ??CrossCallReturnLabel_531
          CFI (cfiCond1075) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1075) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1075) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1075) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1075) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1075) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1075) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1075) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1075) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1075) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1075) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1075) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1075) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1075) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1075) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1075) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1075) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1075) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1075) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1075) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1075) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1075) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1075) CFA_SP SP+-4
          CFI (cfiCond1075) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1076 Using cfiCommon0
          CFI (cfiCond1076) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1076) Conditional ??CrossCallReturnLabel_537, ??CrossCallReturnLabel_532
          CFI (cfiCond1076) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1076) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1076) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1076) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1076) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1076) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1076) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1076) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1076) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1076) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1076) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1076) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1076) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1076) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1076) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1076) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1076) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1076) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1076) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1076) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1076) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1076) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1076) CFA_SP SP+-4
          CFI (cfiCond1076) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1077 Using cfiCommon0
          CFI (cfiCond1077) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1077) Conditional ??CrossCallReturnLabel_537, ??CrossCallReturnLabel_533
          CFI (cfiCond1077) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1077) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1077) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1077) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1077) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1077) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1077) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1077) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1077) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1077) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1077) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1077) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1077) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1077) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1077) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1077) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1077) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1077) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1077) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1077) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1077) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1077) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1077) CFA_SP SP+-4
          CFI (cfiCond1077) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1078 Using cfiCommon1
          CFI (cfiPicker1078) NoFunction
          CFI (cfiPicker1078) Picker
        MOVX      @DPTR,A
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond1067
          CFI EndBlock cfiCond1068
          CFI EndBlock cfiCond1069
          CFI EndBlock cfiCond1070
          CFI EndBlock cfiCond1071
          CFI EndBlock cfiCond1072
          CFI EndBlock cfiCond1073
          CFI EndBlock cfiCond1074
          CFI EndBlock cfiCond1075
          CFI EndBlock cfiCond1076
          CFI EndBlock cfiCond1077
          CFI EndBlock cfiPicker1078

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine62:
          CFI Block cfiCond1079 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI Conditional ??CrossCallReturnLabel_457
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1080 Using cfiCommon0
          CFI (cfiCond1080) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1080) Conditional ??CrossCallReturnLabel_458
          CFI (cfiCond1080) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1080) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1080) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1080) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1080) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1080) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1080) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1080) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1080) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1080) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1080) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1080) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1080) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1080) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1080) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1080) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1080) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1080) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1080) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1080) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1080) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1080) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1080) CFA_SP SP+-2
          CFI (cfiCond1080) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker1081 Using cfiCommon1
          CFI (cfiPicker1081) NoFunction
          CFI (cfiPicker1081) Picker
        INC       DPTR
          CFI EndBlock cfiCond1079
          CFI EndBlock cfiCond1080
          CFI EndBlock cfiPicker1081
        REQUIRE ??Subroutine189_0
        ; // Fall through to label ??Subroutine189_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine189_0:
          CFI Block cfiCond1082 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI Conditional ??CrossCallReturnLabel_455
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1083 Using cfiCommon0
          CFI (cfiCond1083) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1083) Conditional ??CrossCallReturnLabel_456
          CFI (cfiCond1083) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1083) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1083) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1083) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1083) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1083) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1083) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1083) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1083) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1083) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1083) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1083) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1083) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1083) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1083) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1083) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1083) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1083) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1083) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1083) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1083) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1083) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1083) CFA_SP SP+-2
          CFI (cfiCond1083) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1084 Using cfiCommon0
          CFI (cfiCond1084) Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI (cfiCond1084) Conditional ??CrossCallReturnLabel_457
          CFI (cfiCond1084) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1084) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1084) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1084) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1084) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1084) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1084) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1084) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1084) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1084) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1084) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1084) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1084) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1084) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1084) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1084) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1084) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1084) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1084) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1084) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1084) CFA_SP SP+-2
          CFI (cfiCond1084) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1085 Using cfiCommon0
          CFI (cfiCond1085) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1085) Conditional ??CrossCallReturnLabel_458
          CFI (cfiCond1085) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1085) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1085) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1085) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1085) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1085) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1085) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1085) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1085) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1085) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1085) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1085) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1085) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1085) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1085) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1085) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1085) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1085) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1085) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1085) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1085) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1085) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1085) CFA_SP SP+-2
          CFI (cfiCond1085) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker1086 Using cfiCommon1
          CFI (cfiPicker1086) NoFunction
          CFI (cfiPicker1086) Picker
        LCALL     ??Subroutine194_0 & 0xFFFF
??CrossCallReturnLabel_488:
        RET
          CFI EndBlock cfiCond1082
          CFI EndBlock cfiCond1083
          CFI EndBlock cfiCond1084
          CFI EndBlock cfiCond1085
          CFI EndBlock cfiPicker1086

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine45:
          CFI Block cfiCond1087 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI Conditional ??CrossCallReturnLabel_99
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1088 Using cfiCommon0
          CFI (cfiCond1088) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1088) Conditional ??CrossCallReturnLabel_100
          CFI (cfiCond1088) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1088) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1088) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1088) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1088) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1088) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1088) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1088) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1088) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1088) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1088) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1088) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1088) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1088) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1088) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1088) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1088) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1088) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1088) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1088) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1088) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1088) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1088) CFA_SP SP+-2
          CFI (cfiCond1088) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker1089 Using cfiCommon1
          CFI (cfiPicker1089) NoFunction
          CFI (cfiPicker1089) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_227:
        RET
          CFI EndBlock cfiCond1087
          CFI EndBlock cfiCond1088
          CFI EndBlock cfiPicker1089

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine104:
          CFI Block cfiCond1090 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI Conditional ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_99
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1091 Using cfiCommon0
          CFI (cfiCond1091) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1091) Conditional ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_100
          CFI (cfiCond1091) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1091) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1091) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1091) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1091) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1091) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1091) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1091) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1091) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1091) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1091) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1091) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1091) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1091) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1091) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1091) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1091) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1091) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1091) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1091) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1091) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1091) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1091) CFA_SP SP+-4
          CFI (cfiCond1091) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1092 Using cfiCommon0
          CFI (cfiCond1092) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1092) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_85
          CFI (cfiCond1092) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1092) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1092) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1092) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1092) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1092) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1092) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1092) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1092) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1092) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1092) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1092) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1092) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1092) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1092) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1092) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1092) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1092) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1092) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1092) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1092) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1092) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1092) CFA_SP SP+-4
          CFI (cfiCond1092) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1093 Using cfiCommon0
          CFI (cfiCond1093) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1093) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_86
          CFI (cfiCond1093) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1093) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1093) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1093) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1093) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1093) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1093) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1093) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1093) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1093) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1093) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1093) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1093) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1093) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1093) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1093) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1093) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1093) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1093) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1093) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1093) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1093) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1093) CFA_SP SP+-4
          CFI (cfiCond1093) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker1094 Using cfiCommon1
          CFI (cfiPicker1094) NoFunction
          CFI (cfiPicker1094) Picker
        LCALL     ?Subroutine132 & 0xFFFF
??CrossCallReturnLabel_278:
        INC       DPTR
        RET
          CFI EndBlock cfiCond1090
          CFI EndBlock cfiCond1091
          CFI EndBlock cfiCond1092
          CFI EndBlock cfiCond1093
          CFI EndBlock cfiPicker1094

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine132:
          CFI Block cfiCond1095 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI Conditional ??CrossCallReturnLabel_277
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1096 Using cfiCommon0
          CFI (cfiCond1096) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1096) Conditional ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_99
          CFI (cfiCond1096) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1096) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1096) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1096) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1096) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1096) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1096) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1096) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1096) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1096) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1096) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1096) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1096) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1096) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1096) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1096) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1096) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1096) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1096) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1096) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1096) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1096) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1096) CFA_SP SP+-6
          CFI (cfiCond1096) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1097 Using cfiCommon0
          CFI (cfiCond1097) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1097) Conditional ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_100
          CFI (cfiCond1097) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1097) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1097) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1097) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1097) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1097) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1097) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1097) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1097) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1097) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1097) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1097) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1097) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1097) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1097) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1097) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1097) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1097) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1097) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1097) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1097) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1097) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1097) CFA_SP SP+-6
          CFI (cfiCond1097) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1098 Using cfiCommon0
          CFI (cfiCond1098) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1098) Conditional ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_85
          CFI (cfiCond1098) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1098) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1098) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1098) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1098) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1098) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1098) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1098) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1098) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1098) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1098) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1098) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1098) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1098) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1098) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1098) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1098) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1098) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1098) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1098) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1098) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1098) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1098) CFA_SP SP+-6
          CFI (cfiCond1098) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1099 Using cfiCommon0
          CFI (cfiCond1099) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1099) Conditional ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_86
          CFI (cfiCond1099) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1099) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1099) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1099) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1099) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1099) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1099) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1099) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1099) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1099) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1099) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1099) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1099) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1099) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1099) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1099) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1099) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1099) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1099) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1099) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1099) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1099) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1099) CFA_SP SP+-6
          CFI (cfiCond1099) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker1100 Using cfiCommon1
          CFI (cfiPicker1100) NoFunction
          CFI (cfiPicker1100) Picker
        MOVX      A,@DPTR
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1095
          CFI EndBlock cfiCond1096
          CFI EndBlock cfiCond1097
          CFI EndBlock cfiCond1098
          CFI EndBlock cfiCond1099
          CFI EndBlock cfiPicker1100

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine36:
          CFI Block cfiCond1101 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI Conditional ??CrossCallReturnLabel_85
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1102 Using cfiCommon0
          CFI (cfiCond1102) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1102) Conditional ??CrossCallReturnLabel_86
          CFI (cfiCond1102) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1102) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1102) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1102) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1102) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1102) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1102) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1102) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1102) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1102) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1102) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1102) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1102) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1102) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1102) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1102) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1102) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1102) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1102) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1102) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1102) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1102) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1102) CFA_SP SP+-2
          CFI (cfiCond1102) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker1103 Using cfiCommon1
          CFI (cfiPicker1103) NoFunction
          CFI (cfiPicker1103) Picker
        LCALL     ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_226:
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1101
          CFI EndBlock cfiCond1102
          CFI EndBlock cfiPicker1103

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine10:
          CFI Block cfiCond1104 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI Conditional ??CrossCallReturnLabel_468
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1105 Using cfiCommon0
          CFI (cfiCond1105) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond1105) Conditional ??CrossCallReturnLabel_469
          CFI (cfiCond1105) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1105) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1105) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1105) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1105) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1105) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1105) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1105) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1105) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1105) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1105) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1105) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1105) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1105) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1105) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1105) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1105) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1105) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1105) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1105) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1105) CFA_SP SP+-2
          CFI (cfiCond1105) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1106 Using cfiCommon0
          CFI (cfiCond1106) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond1106) Conditional ??CrossCallReturnLabel_470
          CFI (cfiCond1106) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1106) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1106) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1106) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1106) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1106) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1106) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1106) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1106) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1106) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1106) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1106) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1106) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1106) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1106) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1106) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1106) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1106) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1106) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1106) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1106) CFA_SP SP+-2
          CFI (cfiCond1106) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1107 Using cfiCommon0
          CFI (cfiCond1107) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond1107) Conditional ??CrossCallReturnLabel_471
          CFI (cfiCond1107) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1107) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1107) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1107) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1107) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1107) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1107) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1107) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1107) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1107) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1107) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1107) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1107) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1107) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1107) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1107) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1107) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1107) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1107) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1107) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1107) CFA_SP SP+-2
          CFI (cfiCond1107) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1108 Using cfiCommon0
          CFI (cfiCond1108) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond1108) Conditional ??CrossCallReturnLabel_472
          CFI (cfiCond1108) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1108) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1108) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1108) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1108) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1108) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1108) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1108) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1108) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1108) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1108) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1108) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1108) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1108) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1108) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1108) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1108) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1108) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1108) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1108) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1108) CFA_SP SP+-2
          CFI (cfiCond1108) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1109 Using cfiCommon0
          CFI (cfiCond1109) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1109) Conditional ??CrossCallReturnLabel_473
          CFI (cfiCond1109) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1109) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1109) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1109) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1109) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1109) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1109) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1109) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1109) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1109) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1109) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1109) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1109) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1109) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1109) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1109) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1109) CFA_SP SP+-2
          CFI (cfiCond1109) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1110 Using cfiCommon0
          CFI (cfiCond1110) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1110) Conditional ??CrossCallReturnLabel_474
          CFI (cfiCond1110) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1110) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1110) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1110) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1110) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1110) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1110) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1110) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1110) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1110) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1110) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1110) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1110) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1110) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1110) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1110) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1110) CFA_SP SP+-2
          CFI (cfiCond1110) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1111 Using cfiCommon1
          CFI (cfiPicker1111) NoFunction
          CFI (cfiPicker1111) Picker
        MOV       A,R0
        MOV       R2,A
        MOV       DPL,?V4
        MOV       DPH,?V5
          CFI EndBlock cfiCond1104
          CFI EndBlock cfiCond1105
          CFI EndBlock cfiCond1106
          CFI EndBlock cfiCond1107
          CFI EndBlock cfiCond1108
          CFI EndBlock cfiCond1109
          CFI EndBlock cfiCond1110
          CFI EndBlock cfiPicker1111
        REQUIRE ??Subroutine190_0
        ; // Fall through to label ??Subroutine190_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine190_0:
          CFI Block cfiCond1112 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockUnlockWithTimeout
          CFI Conditional ??CrossCallReturnLabel_459
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1113 Using cfiCommon0
          CFI (cfiCond1113) Function zclClosures_ProcessInDoorLockSetPINCode
          CFI (cfiCond1113) Conditional ??CrossCallReturnLabel_460
          CFI (cfiCond1113) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1113) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1113) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1113) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1113) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1113) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1113) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1113) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1113) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1113) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1113) CFA_SP SP+-2
          CFI (cfiCond1113) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1114 Using cfiCommon0
          CFI (cfiCond1114) Function zclClosures_ProcessInDoorLockSetRFIDCode
          CFI (cfiCond1114) Conditional ??CrossCallReturnLabel_461
          CFI (cfiCond1114) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1114) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1114) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1114) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1114) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1114) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1114) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1114) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1114) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1114) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1114) CFA_SP SP+-2
          CFI (cfiCond1114) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1115 Using cfiCommon0
          CFI (cfiCond1115) Function zclClosures_ProcessInDoorLockGetLogRecordRsp
          CFI (cfiCond1115) Conditional ??CrossCallReturnLabel_462
          CFI (cfiCond1115) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1115) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1115) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1115) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1115) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1115) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1115) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1115) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1115) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1115) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1115) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1115) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1115) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1115) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1115) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1115) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1115) CFA_SP SP+-2
          CFI (cfiCond1115) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond1116 Using cfiCommon0
          CFI (cfiCond1116) Function zclClosures_ProcessInDoorLockGetPINCodeRsp
          CFI (cfiCond1116) Conditional ??CrossCallReturnLabel_463
          CFI (cfiCond1116) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1116) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1116) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1116) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1116) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1116) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1116) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1116) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1116) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1116) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1116) CFA_SP SP+-2
          CFI (cfiCond1116) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1117 Using cfiCommon0
          CFI (cfiCond1117) Function zclClosures_ProcessInDoorLockGetRFIDCodeRsp
          CFI (cfiCond1117) Conditional ??CrossCallReturnLabel_464
          CFI (cfiCond1117) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1117) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1117) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1117) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1117) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1117) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1117) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1117) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1117) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1117) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1117) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1117) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1117) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1117) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1117) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1117) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1117) CFA_SP SP+-2
          CFI (cfiCond1117) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1118 Using cfiCommon0
          CFI (cfiCond1118) Function zclClosures_ProcessInDoorLockOperationEventNotification
          CFI (cfiCond1118) Conditional ??CrossCallReturnLabel_465
          CFI (cfiCond1118) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1118) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1118) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1118) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1118) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1118) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1118) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1118) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1118) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1118) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1118) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1118) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1118) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1118) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1118) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1118) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1118) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1118) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1118) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1118) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1118) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1118) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1118) CFA_SP SP+-2
          CFI (cfiCond1118) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond1119 Using cfiCommon0
          CFI (cfiCond1119) Function zclClosures_ProcessInDoorLockProgrammingEventNotification
          CFI (cfiCond1119) Conditional ??CrossCallReturnLabel_466
          CFI (cfiCond1119) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1119) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1119) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1119) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1119) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1119) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1119) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1119) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1119) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1119) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1119) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1119) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1119) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1119) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1119) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1119) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1119) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1119) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1119) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1119) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1119) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1119) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1119) CFA_SP SP+-2
          CFI (cfiCond1119) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond1120 Using cfiCommon0
          CFI (cfiCond1120) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1120) Conditional ??CrossCallReturnLabel_467
          CFI (cfiCond1120) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1120) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1120) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1120) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1120) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1120) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1120) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1120) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1120) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1120) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1120) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1120) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1120) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1120) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1120) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1120) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1120) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1120) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1120) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1120) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1120) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1120) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1120) CFA_SP SP+-2
          CFI (cfiCond1120) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1121 Using cfiCommon0
          CFI (cfiCond1121) Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI (cfiCond1121) Conditional ??CrossCallReturnLabel_468
          CFI (cfiCond1121) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1121) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1121) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1121) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1121) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1121) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1121) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1121) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1121) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1121) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1121) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1121) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1121) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1121) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1121) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1121) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1121) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1121) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1121) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1121) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1121) CFA_SP SP+-2
          CFI (cfiCond1121) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1122 Using cfiCommon0
          CFI (cfiCond1122) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond1122) Conditional ??CrossCallReturnLabel_469
          CFI (cfiCond1122) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1122) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1122) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1122) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1122) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1122) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1122) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1122) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1122) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1122) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1122) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1122) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1122) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1122) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1122) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1122) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1122) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1122) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1122) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1122) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1122) CFA_SP SP+-2
          CFI (cfiCond1122) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1123 Using cfiCommon0
          CFI (cfiCond1123) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond1123) Conditional ??CrossCallReturnLabel_470
          CFI (cfiCond1123) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1123) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1123) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1123) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1123) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1123) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1123) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1123) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1123) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1123) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1123) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1123) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1123) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1123) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1123) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1123) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1123) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1123) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1123) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1123) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1123) CFA_SP SP+-2
          CFI (cfiCond1123) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1124 Using cfiCommon0
          CFI (cfiCond1124) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond1124) Conditional ??CrossCallReturnLabel_471
          CFI (cfiCond1124) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1124) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1124) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1124) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1124) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1124) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1124) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1124) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1124) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1124) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1124) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1124) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1124) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1124) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1124) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1124) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1124) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1124) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1124) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1124) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1124) CFA_SP SP+-2
          CFI (cfiCond1124) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1125 Using cfiCommon0
          CFI (cfiCond1125) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond1125) Conditional ??CrossCallReturnLabel_472
          CFI (cfiCond1125) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1125) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1125) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1125) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1125) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1125) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1125) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1125) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1125) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1125) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1125) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1125) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1125) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1125) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1125) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1125) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1125) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1125) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1125) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1125) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1125) CFA_SP SP+-2
          CFI (cfiCond1125) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1126 Using cfiCommon0
          CFI (cfiCond1126) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1126) Conditional ??CrossCallReturnLabel_473
          CFI (cfiCond1126) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1126) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1126) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1126) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1126) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1126) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1126) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1126) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1126) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1126) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1126) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1126) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1126) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1126) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1126) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1126) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1126) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1126) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1126) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1126) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1126) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1126) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1126) CFA_SP SP+-2
          CFI (cfiCond1126) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1127 Using cfiCommon0
          CFI (cfiCond1127) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1127) Conditional ??CrossCallReturnLabel_474
          CFI (cfiCond1127) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1127) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1127) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1127) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1127) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1127) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1127) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1127) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1127) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1127) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1127) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1127) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1127) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1127) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1127) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1127) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1127) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1127) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1127) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1127) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1127) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1127) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1127) CFA_SP SP+-2
          CFI (cfiCond1127) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1128 Using cfiCommon1
          CFI (cfiPicker1128) NoFunction
          CFI (cfiPicker1128) Picker
        LCALL     ?Subroutine109 & 0xFFFF
??CrossCallReturnLabel_476:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1112
          CFI EndBlock cfiCond1113
          CFI EndBlock cfiCond1114
          CFI EndBlock cfiCond1115
          CFI EndBlock cfiCond1116
          CFI EndBlock cfiCond1117
          CFI EndBlock cfiCond1118
          CFI EndBlock cfiCond1119
          CFI EndBlock cfiCond1120
          CFI EndBlock cfiCond1121
          CFI EndBlock cfiCond1122
          CFI EndBlock cfiCond1123
          CFI EndBlock cfiCond1124
          CFI EndBlock cfiCond1125
          CFI EndBlock cfiCond1126
          CFI EndBlock cfiCond1127
          CFI EndBlock cfiPicker1128

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine2:
          CFI Block cfiBlock1129 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 35)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,#0xd
          CFI EndBlock cfiBlock1129
        REQUIRE ??Subroutine191_0
        ; // Fall through to label ??Subroutine191_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine191_0:
          CFI Block cfiBlock1130 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 33)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock1130
        REQUIRE ??Subroutine192_0
        ; // Fall through to label ??Subroutine192_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine192_0:
          CFI Block cfiBlock1131 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0xe
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock1131
// 2940 
// 2941 /*********************************************************************
// 2942  * @fn      zclClosures_SendDoorLockGetPINCodeResponse
// 2943  *
// 2944  * @brief   Call to send out a Get PIN Code Response
// 2945  *
// 2946  * @param   srcEP - Sending application's endpoint
// 2947  * @param   dstAddr - where you want the message to go
// 2948  * @param   pPayload:
// 2949  *           userID - User ID is between 0 - [# PINs User supported attribute]
// 2950  *           userStatus - Used to indicate what the status is for a specific User ID
// 2951  *           userType - Used to indicate what the type is for a specific User ID
// 2952  *           aCode - Returned PIN number
// 2953  * @param   disableDefaultRsp - decides default response is necessary or not
// 2954  * @param   seqNum - sequence number of the command packet
// 2955  *
// 2956  * @return  ZStatus_t
// 2957  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2958 ZStatus_t zclClosures_SendDoorLockGetPINCodeResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockGetPINCodeResponse:
          CFI Block cfiBlock1132 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetPINCodeResponse
        CODE
// 2959                                                       zclDoorLockGetPINCodeRsp_t *pPayload,
// 2960                                                       uint8 disableDefaultRsp, uint8 seqNum )
// 2961 {
        FUNCALL zclClosures_SendDoorLockGetPINCodeResponse, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockGetPINCodeResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockGetPINCodeResponse, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV       A,#-0x14
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        LCALL     ?Subroutine11 & 0xFFFF
// 2962   uint8 i;
// 2963   uint8 *pBuf;  // variable length payload
// 2964   uint8 offset;
// 2965   uint8 calculatedArrayLen;
// 2966   uint8 calculatedBufSize;
// 2967   ZStatus_t status;
// 2968 
// 2969   // first octet of PIN/RFID Code variable string identifies its length
// 2970   calculatedArrayLen = pPayload->pCode[0] + 1;   // add first byte of string
// 2971 
// 2972   // determine the total buffer size
// 2973   calculatedBufSize = calculatedArrayLen + PAYLOAD_LEN_GET_PIN_CODE_RSP;
// 2974 
// 2975   pBuf = zcl_mem_alloc( calculatedBufSize );
// 2976   if ( !pBuf )
??CrossCallReturnLabel_6:
        JNZ       ??zclClosures_SendDoorLockGetPINCodeResponse_0
// 2977   {
// 2978     return ( ZMemError );  // no memory
        MOV       R1,#0x10
        SJMP      ??CrossCallReturnLabel_434
// 2979   }
// 2980 
// 2981   // over-the-air is always little endian. Break into a byte stream.
// 2982   pBuf[0] = LO_UINT16(pPayload->userID);
??zclClosures_SendDoorLockGetPINCodeResponse_0:
        LCALL     ?Subroutine9 & 0xFFFF
// 2983   pBuf[1] = HI_UINT16(pPayload->userID);
// 2984   pBuf[2] = pPayload->userStatus;
// 2985   pBuf[3] = pPayload->userType;
// 2986   offset = 4;
// 2987   for ( i = 0; i < calculatedArrayLen; i++ )
??CrossCallReturnLabel_2:
        SJMP      ??zclClosures_SendDoorLockGetPINCodeResponse_1
// 2988   {
// 2989     pBuf[offset++] = pPayload->pCode[i];
??zclClosures_SendDoorLockGetPINCodeResponse_2:
        LCALL     ?Subroutine10 & 0xFFFF
// 2990   }
??CrossCallReturnLabel_471:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_212:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_SendDoorLockGetPINCodeResponse_1:
        MOV       A,R0
        CLR       C
        SUBB      A,?V3
        JC        ??zclClosures_SendDoorLockGetPINCodeResponse_2
// 2991 
// 2992   status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 2993                             COMMAND_CLOSURES_GET_PIN_CODE_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 2994                             disableDefaultRsp, 0, seqNum, calculatedBufSize, pBuf );
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V6
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       R0,#?V8
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,#0x1a
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_33:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        CLR       A
        MOV       ?V0,A
        MOV       ?V1,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       A,#0x1c
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_34:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       ?V0,#0x6
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        LCALL     ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_499:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        LCALL     ?Subroutine93 & 0xFFFF
// 2995   zcl_mem_free( pBuf );
// 2996   return status;
??CrossCallReturnLabel_434:
        LJMP      ?Subroutine3 & 0xFFFF
// 2997 }
          CFI EndBlock cfiBlock1132

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine11:
          CFI Block cfiCond1133 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI Conditional ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1134 Using cfiCommon0
          CFI (cfiCond1134) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond1134) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond1134) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1134) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1134) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1134) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1134) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1134) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1134) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1134) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1134) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1134) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1134) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1134) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1134) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1134) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1134) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1134) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1134) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1134) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1134) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1134) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1134) CFA_SP SP+-2
          CFI (cfiCond1134) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1135 Using cfiCommon0
          CFI (cfiCond1135) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond1135) Conditional ??CrossCallReturnLabel_6
          CFI (cfiCond1135) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1135) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1135) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1135) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1135) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1135) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1135) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1135) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1135) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1135) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1135) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1135) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1135) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1135) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1135) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1135) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1135) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1135) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1135) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1135) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1135) CFA_SP SP+-2
          CFI (cfiCond1135) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1136 Using cfiCommon0
          CFI (cfiCond1136) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond1136) Conditional ??CrossCallReturnLabel_7
          CFI (cfiCond1136) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1136) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1136) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1136) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1136) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1136) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1136) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1136) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1136) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1136) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1136) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1136) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1136) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1136) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1136) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1136) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1136) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1136) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1136) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1136) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1136) CFA_SP SP+-2
          CFI (cfiCond1136) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker1137 Using cfiCommon1
          CFI (cfiPicker1137) NoFunction
          CFI (cfiPicker1137) Picker
        MOV       ?V2,R1
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
        MOV       ?V0,R4
        MOV       ?V1,R5
        MOV       A,R4
        ADD       A,#0x4
        LCALL     ?Subroutine131 & 0xFFFF
??CrossCallReturnLabel_276:
        LCALL     ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_477:
        MOV       ?V3,A
        MOV       A,#0x4
        ADD       A,?V3
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        LCALL     ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_272:
        RET
          CFI EndBlock cfiCond1133
          CFI EndBlock cfiCond1134
          CFI EndBlock cfiCond1135
          CFI EndBlock cfiCond1136
          CFI EndBlock cfiPicker1137

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine131:
          CFI Block cfiCond1138 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI Conditional ??CrossCallReturnLabel_275
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1139 Using cfiCommon0
          CFI (cfiCond1139) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond1139) Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_4
          CFI (cfiCond1139) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1139) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1139) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1139) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1139) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1139) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1139) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1139) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1139) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1139) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1139) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1139) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1139) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1139) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1139) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1139) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1139) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1139) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1139) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1139) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1139) CFA_SP SP+-4
          CFI (cfiCond1139) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1140 Using cfiCommon0
          CFI (cfiCond1140) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond1140) Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_5
          CFI (cfiCond1140) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1140) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1140) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1140) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1140) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1140) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1140) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1140) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1140) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1140) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1140) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1140) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1140) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1140) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1140) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1140) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1140) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1140) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1140) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1140) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1140) CFA_SP SP+-4
          CFI (cfiCond1140) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1141 Using cfiCommon0
          CFI (cfiCond1141) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond1141) Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_6
          CFI (cfiCond1141) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1141) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1141) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1141) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1141) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1141) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1141) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1141) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1141) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1141) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1141) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1141) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1141) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1141) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1141) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1141) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1141) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1141) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1141) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1141) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1141) CFA_SP SP+-4
          CFI (cfiCond1141) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1142 Using cfiCommon0
          CFI (cfiCond1142) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond1142) Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_7
          CFI (cfiCond1142) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1142) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1142) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1142) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1142) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1142) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1142) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1142) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1142) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1142) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1142) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1142) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1142) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1142) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1142) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1142) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1142) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1142) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1142) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1142) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1142) CFA_SP SP+-4
          CFI (cfiCond1142) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker1143 Using cfiCommon1
          CFI (cfiPicker1143) NoFunction
          CFI (cfiPicker1143) Picker
        MOV       R0,A
        CLR       A
        ADDC      A,?V1
        MOV       ?V4,R0
        MOV       ?V5,A
        MOV       DPL,R0
        RET
          CFI EndBlock cfiCond1138
          CFI EndBlock cfiCond1139
          CFI EndBlock cfiCond1140
          CFI EndBlock cfiCond1141
          CFI EndBlock cfiCond1142
          CFI EndBlock cfiPicker1143

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine129:
          CFI Block cfiCond1144 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI Conditional ??CrossCallReturnLabel_271
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1145 Using cfiCommon0
          CFI (cfiCond1145) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond1145) Conditional ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_4
          CFI (cfiCond1145) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1145) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1145) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1145) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1145) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1145) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1145) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1145) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1145) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1145) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1145) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1145) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1145) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1145) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1145) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1145) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1145) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1145) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1145) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1145) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1145) CFA_SP SP+-4
          CFI (cfiCond1145) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1146 Using cfiCommon0
          CFI (cfiCond1146) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond1146) Conditional ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_5
          CFI (cfiCond1146) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1146) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1146) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1146) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1146) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1146) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1146) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1146) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1146) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1146) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1146) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1146) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1146) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1146) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1146) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1146) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1146) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1146) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1146) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1146) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1146) CFA_SP SP+-4
          CFI (cfiCond1146) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1147 Using cfiCommon0
          CFI (cfiCond1147) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond1147) Conditional ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_6
          CFI (cfiCond1147) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1147) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1147) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1147) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1147) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1147) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1147) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1147) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1147) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1147) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1147) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1147) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1147) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1147) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1147) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1147) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1147) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1147) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1147) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1147) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1147) CFA_SP SP+-4
          CFI (cfiCond1147) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1148 Using cfiCommon0
          CFI (cfiCond1148) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond1148) Conditional ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_7
          CFI (cfiCond1148) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1148) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1148) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1148) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1148) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1148) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1148) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1148) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1148) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1148) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1148) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1148) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1148) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1148) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1148) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1148) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1148) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1148) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1148) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1148) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1148) CFA_SP SP+-4
          CFI (cfiCond1148) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker1149 Using cfiCommon1
          CFI (cfiPicker1149) NoFunction
          CFI (cfiPicker1149) Picker
        MOV       ?V8,A
        MOV       ?V9,#0x0
        ; Setup parameters for call to function osal_mem_alloc
        ; Setup parameters for call to function osal_mem_alloc
        ; Setup parameters for call to function osal_mem_alloc
        ; Setup parameters for call to function osal_mem_alloc
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,?V9
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V6,R2
        MOV       ?V7,R3
        MOV       A,R2
        ORL       A,R3
        RET
          CFI EndBlock cfiCond1144
          CFI EndBlock cfiCond1145
          CFI EndBlock cfiCond1146
          CFI EndBlock cfiCond1147
          CFI EndBlock cfiCond1148
          CFI EndBlock cfiPicker1149

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine101:
          CFI Block cfiCond1150 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI Conditional ??CrossCallReturnLabel_477, ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1151 Using cfiCommon0
          CFI (cfiCond1151) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond1151) Conditional ??CrossCallReturnLabel_477, ??CrossCallReturnLabel_5
          CFI (cfiCond1151) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1151) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1151) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1151) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1151) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1151) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1151) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1151) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1151) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1151) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1151) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1151) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1151) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1151) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1151) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1151) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1151) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1151) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1151) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1151) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1151) CFA_SP SP+-4
          CFI (cfiCond1151) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1152 Using cfiCommon0
          CFI (cfiCond1152) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond1152) Conditional ??CrossCallReturnLabel_477, ??CrossCallReturnLabel_6
          CFI (cfiCond1152) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1152) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1152) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1152) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1152) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1152) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1152) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1152) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1152) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1152) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1152) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1152) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1152) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1152) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1152) CFA_SP SP+-4
          CFI (cfiCond1152) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1153 Using cfiCommon0
          CFI (cfiCond1153) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond1153) Conditional ??CrossCallReturnLabel_477, ??CrossCallReturnLabel_7
          CFI (cfiCond1153) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1153) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1153) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1153) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1153) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1153) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1153) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1153) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1153) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1153) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1153) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1153) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1153) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1153) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1153) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1153) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1153) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1153) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1153) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1153) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1153) CFA_SP SP+-4
          CFI (cfiCond1153) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1154 Using cfiCommon0
          CFI (cfiCond1154) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1154) Conditional ??CrossCallReturnLabel_478, ??CrossCallReturnLabel_109
          CFI (cfiCond1154) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1154) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1154) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1154) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1154) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1154) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1154) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1154) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1154) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1154) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1154) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1154) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1154) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1154) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1154) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1154) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1154) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1154) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1154) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1154) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1154) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1154) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1154) CFA_SP SP+-4
          CFI (cfiCond1154) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1155 Using cfiCommon0
          CFI (cfiCond1155) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1155) Conditional ??CrossCallReturnLabel_478, ??CrossCallReturnLabel_110
          CFI (cfiCond1155) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1155) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1155) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1155) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1155) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1155) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1155) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1155) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1155) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1155) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1155) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1155) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1155) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1155) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1155) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1155) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1155) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1155) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1155) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1155) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1155) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1155) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1155) CFA_SP SP+-4
          CFI (cfiCond1155) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1156 Using cfiCommon1
          CFI (cfiPicker1156) NoFunction
          CFI (cfiPicker1156) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond1150
          CFI EndBlock cfiCond1151
          CFI EndBlock cfiCond1152
          CFI EndBlock cfiCond1153
          CFI EndBlock cfiCond1154
          CFI EndBlock cfiCond1155
          CFI EndBlock cfiPicker1156
        REQUIRE ??Subroutine193_0
        ; // Fall through to label ??Subroutine193_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine193_0:
          CFI Block cfiCond1157 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockRequest
          CFI Conditional ??CrossCallReturnLabel_479, ??CrossCallReturnLabel_441
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1158 Using cfiCommon0
          CFI (cfiCond1158) Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI (cfiCond1158) Conditional ??CrossCallReturnLabel_479, ??CrossCallReturnLabel_442
          CFI (cfiCond1158) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1158) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1158) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1158) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1158) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1158) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1158) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1158) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1158) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1158) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1158) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1158) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1158) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1158) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1158) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1158) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1158) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1158) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1158) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1158) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1158) CFA_SP SP+-4
          CFI (cfiCond1158) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1159 Using cfiCommon0
          CFI (cfiCond1159) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1159) Conditional ??CrossCallReturnLabel_479, ??CrossCallReturnLabel_443
          CFI (cfiCond1159) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1159) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1159) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1159) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1159) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1159) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1159) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1159) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1159) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1159) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1159) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1159) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1159) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1159) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1159) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1159) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1159) CFA_SP SP+-4
          CFI (cfiCond1159) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1160 Using cfiCommon0
          CFI (cfiCond1160) Function zclClosures_ProcessInDoorLock
          CFI (cfiCond1160) Conditional ??CrossCallReturnLabel_479, ??CrossCallReturnLabel_440
          CFI (cfiCond1160) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1160) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1160) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1160) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1160) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1160) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1160) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1160) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1160) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1160) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1160) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1160) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1160) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1160) CFA_SP SP+-4
          CFI (cfiCond1160) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1161 Using cfiCommon0
          CFI (cfiCond1161) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond1161) Conditional ??CrossCallReturnLabel_477, ??CrossCallReturnLabel_4
          CFI (cfiCond1161) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1161) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1161) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1161) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1161) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1161) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1161) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1161) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1161) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1161) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1161) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1161) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1161) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1161) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1161) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1161) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1161) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1161) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1161) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1161) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1161) CFA_SP SP+-4
          CFI (cfiCond1161) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1162 Using cfiCommon0
          CFI (cfiCond1162) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond1162) Conditional ??CrossCallReturnLabel_477, ??CrossCallReturnLabel_5
          CFI (cfiCond1162) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1162) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1162) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1162) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1162) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1162) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1162) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1162) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1162) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1162) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1162) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1162) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1162) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1162) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1162) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1162) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1162) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1162) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1162) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1162) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1162) CFA_SP SP+-4
          CFI (cfiCond1162) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1163 Using cfiCommon0
          CFI (cfiCond1163) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond1163) Conditional ??CrossCallReturnLabel_477, ??CrossCallReturnLabel_6
          CFI (cfiCond1163) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1163) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1163) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1163) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1163) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1163) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1163) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1163) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1163) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1163) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1163) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1163) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1163) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1163) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1163) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1163) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1163) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1163) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1163) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1163) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1163) CFA_SP SP+-4
          CFI (cfiCond1163) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1164 Using cfiCommon0
          CFI (cfiCond1164) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond1164) Conditional ??CrossCallReturnLabel_477, ??CrossCallReturnLabel_7
          CFI (cfiCond1164) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1164) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1164) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1164) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1164) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1164) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1164) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1164) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1164) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1164) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1164) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1164) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1164) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1164) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1164) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1164) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1164) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1164) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1164) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1164) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1164) CFA_SP SP+-4
          CFI (cfiCond1164) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1165 Using cfiCommon0
          CFI (cfiCond1165) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1165) Conditional ??CrossCallReturnLabel_478, ??CrossCallReturnLabel_109
          CFI (cfiCond1165) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1165) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1165) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1165) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1165) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1165) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1165) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1165) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1165) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1165) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1165) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1165) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1165) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1165) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1165) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1165) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1165) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1165) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1165) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1165) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1165) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1165) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1165) CFA_SP SP+-4
          CFI (cfiCond1165) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1166 Using cfiCommon0
          CFI (cfiCond1166) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1166) Conditional ??CrossCallReturnLabel_478, ??CrossCallReturnLabel_110
          CFI (cfiCond1166) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1166) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1166) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1166) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1166) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1166) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1166) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1166) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1166) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1166) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1166) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1166) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1166) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1166) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1166) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1166) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1166) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1166) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1166) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1166) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1166) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1166) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1166) CFA_SP SP+-4
          CFI (cfiCond1166) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1167 Using cfiCommon1
          CFI (cfiPicker1167) NoFunction
          CFI (cfiPicker1167) Picker
        LCALL     ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_481:
        INC       A
        RET
          CFI EndBlock cfiCond1157
          CFI EndBlock cfiCond1158
          CFI EndBlock cfiCond1159
          CFI EndBlock cfiCond1160
          CFI EndBlock cfiCond1161
          CFI EndBlock cfiCond1162
          CFI EndBlock cfiCond1163
          CFI EndBlock cfiCond1164
          CFI EndBlock cfiCond1165
          CFI EndBlock cfiCond1166
          CFI EndBlock cfiPicker1167

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine9:
          CFI Block cfiCond1168 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1169 Using cfiCommon0
          CFI (cfiCond1169) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond1169) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond1169) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1169) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1169) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1169) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1169) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1169) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1169) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1169) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1169) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1169) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1169) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1169) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1169) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1169) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1169) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1169) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1169) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1169) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1169) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1169) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1169) CFA_SP SP+-2
          CFI (cfiCond1169) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1170 Using cfiCommon0
          CFI (cfiCond1170) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond1170) Conditional ??CrossCallReturnLabel_2
          CFI (cfiCond1170) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1170) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1170) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1170) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1170) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1170) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1170) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1170) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1170) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1170) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1170) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1170) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1170) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1170) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1170) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1170) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1170) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1170) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1170) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1170) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1170) CFA_SP SP+-2
          CFI (cfiCond1170) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1171 Using cfiCommon0
          CFI (cfiCond1171) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond1171) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond1171) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1171) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1171) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1171) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1171) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1171) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1171) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1171) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1171) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1171) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1171) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1171) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1171) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1171) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1171) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1171) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1171) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1171) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1171) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1171) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1171) CFA_SP SP+-2
          CFI (cfiCond1171) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker1172 Using cfiCommon1
          CFI (cfiPicker1172) NoFunction
          CFI (cfiPicker1172) Picker
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ??Subroutine194_0 & 0xFFFF
??CrossCallReturnLabel_484:
        LCALL     ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_256:
        LCALL     ?Subroutine120 & 0xFFFF
??CrossCallReturnLabel_486:
        INC       DPTR
        LCALL     ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_257:
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_246:
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_240:
        MOV       R1,#0x4
        MOV       R0,#0x0
        RET
          CFI EndBlock cfiCond1168
          CFI EndBlock cfiCond1169
          CFI EndBlock cfiCond1170
          CFI EndBlock cfiCond1171
          CFI EndBlock cfiPicker1172

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine120:
          CFI Block cfiCond1173 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI Conditional ??CrossCallReturnLabel_486, ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1174 Using cfiCommon0
          CFI (cfiCond1174) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond1174) Conditional ??CrossCallReturnLabel_486, ??CrossCallReturnLabel_1
          CFI (cfiCond1174) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1174) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1174) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1174) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1174) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1174) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1174) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1174) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1174) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1174) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1174) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1174) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1174) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1174) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1174) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1174) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1174) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1174) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1174) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1174) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1174) CFA_SP SP+-4
          CFI (cfiCond1174) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1175 Using cfiCommon0
          CFI (cfiCond1175) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond1175) Conditional ??CrossCallReturnLabel_486, ??CrossCallReturnLabel_2
          CFI (cfiCond1175) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1175) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1175) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1175) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1175) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1175) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1175) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1175) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1175) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1175) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1175) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1175) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1175) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1175) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1175) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1175) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1175) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1175) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1175) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1175) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1175) CFA_SP SP+-4
          CFI (cfiCond1175) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1176 Using cfiCommon0
          CFI (cfiCond1176) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond1176) Conditional ??CrossCallReturnLabel_486, ??CrossCallReturnLabel_3
          CFI (cfiCond1176) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1176) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1176) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1176) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1176) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1176) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1176) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1176) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1176) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1176) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1176) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1176) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1176) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1176) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1176) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1176) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1176) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1176) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1176) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1176) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1176) CFA_SP SP+-4
          CFI (cfiCond1176) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1177 Using cfiCommon0
          CFI (cfiCond1177) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1177) Conditional ??CrossCallReturnLabel_487, ??CrossCallReturnLabel_16
          CFI (cfiCond1177) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1177) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1177) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1177) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1177) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1177) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1177) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1177) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1177) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1177) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1177) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1177) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1177) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1177) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1177) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1177) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1177) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1177) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1177) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1177) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1177) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1177) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1177) CFA_SP SP+-4
          CFI (cfiCond1177) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1178 Using cfiCommon0
          CFI (cfiCond1178) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1178) Conditional ??CrossCallReturnLabel_487, ??CrossCallReturnLabel_17
          CFI (cfiCond1178) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1178) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1178) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1178) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1178) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1178) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1178) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1178) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1178) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1178) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1178) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1178) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1178) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1178) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1178) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1178) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1178) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1178) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1178) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1178) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1178) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1178) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1178) CFA_SP SP+-4
          CFI (cfiCond1178) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1179 Using cfiCommon1
          CFI (cfiPicker1179) NoFunction
          CFI (cfiPicker1179) Picker
        INC       DPTR
          CFI EndBlock cfiCond1173
          CFI EndBlock cfiCond1174
          CFI EndBlock cfiCond1175
          CFI EndBlock cfiCond1176
          CFI EndBlock cfiCond1177
          CFI EndBlock cfiCond1178
          CFI EndBlock cfiPicker1179
        REQUIRE ??Subroutine194_0
        ; // Fall through to label ??Subroutine194_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine194_0:
          CFI Block cfiCond1180 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI Conditional ??CrossCallReturnLabel_488, ??CrossCallReturnLabel_457
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1181 Using cfiCommon0
          CFI (cfiCond1181) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1181) Conditional ??CrossCallReturnLabel_488, ??CrossCallReturnLabel_458
          CFI (cfiCond1181) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1181) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1181) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1181) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1181) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1181) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1181) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1181) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1181) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1181) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1181) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1181) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1181) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1181) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1181) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1181) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1181) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1181) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1181) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1181) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1181) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1181) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1181) CFA_SP SP+-4
          CFI (cfiCond1181) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1182 Using cfiCommon0
          CFI (cfiCond1182) Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI (cfiCond1182) Conditional ??CrossCallReturnLabel_488, ??CrossCallReturnLabel_455
          CFI (cfiCond1182) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1182) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1182) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1182) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1182) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1182) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1182) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1182) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1182) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1182) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1182) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1182) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1182) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1182) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1182) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1182) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1182) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1182) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1182) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1182) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1182) CFA_SP SP+-4
          CFI (cfiCond1182) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1183 Using cfiCommon0
          CFI (cfiCond1183) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1183) Conditional ??CrossCallReturnLabel_488, ??CrossCallReturnLabel_456
          CFI (cfiCond1183) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1183) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1183) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1183) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1183) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1183) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1183) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1183) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1183) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1183) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1183) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1183) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1183) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1183) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1183) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1183) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1183) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1183) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1183) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1183) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1183) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1183) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1183) CFA_SP SP+-4
          CFI (cfiCond1183) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1184 Using cfiCommon0
          CFI (cfiCond1184) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond1184) Conditional ??CrossCallReturnLabel_484, ??CrossCallReturnLabel_0
          CFI (cfiCond1184) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1184) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1184) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1184) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1184) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1184) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1184) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1184) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1184) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1184) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1184) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1184) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1184) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1184) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1184) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1184) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1184) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1184) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1184) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1184) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1184) CFA_SP SP+-4
          CFI (cfiCond1184) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1185 Using cfiCommon0
          CFI (cfiCond1185) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond1185) Conditional ??CrossCallReturnLabel_484, ??CrossCallReturnLabel_1
          CFI (cfiCond1185) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1185) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1185) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1185) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1185) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1185) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1185) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1185) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1185) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1185) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1185) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1185) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1185) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1185) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1185) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1185) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1185) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1185) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1185) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1185) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1185) CFA_SP SP+-4
          CFI (cfiCond1185) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1186 Using cfiCommon0
          CFI (cfiCond1186) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond1186) Conditional ??CrossCallReturnLabel_484, ??CrossCallReturnLabel_2
          CFI (cfiCond1186) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1186) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1186) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1186) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1186) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1186) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1186) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1186) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1186) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1186) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1186) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1186) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1186) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1186) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1186) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1186) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1186) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1186) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1186) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1186) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1186) CFA_SP SP+-4
          CFI (cfiCond1186) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1187 Using cfiCommon0
          CFI (cfiCond1187) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond1187) Conditional ??CrossCallReturnLabel_484, ??CrossCallReturnLabel_3
          CFI (cfiCond1187) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1187) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1187) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1187) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1187) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1187) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1187) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1187) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1187) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1187) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1187) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1187) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1187) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1187) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1187) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1187) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1187) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1187) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1187) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1187) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1187) CFA_SP SP+-4
          CFI (cfiCond1187) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1188 Using cfiCommon0
          CFI (cfiCond1188) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1188) Conditional ??CrossCallReturnLabel_485, ??CrossCallReturnLabel_16
          CFI (cfiCond1188) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1188) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1188) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1188) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1188) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1188) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1188) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1188) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1188) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1188) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1188) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1188) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1188) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1188) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1188) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1188) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1188) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1188) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1188) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1188) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1188) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1188) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1188) CFA_SP SP+-4
          CFI (cfiCond1188) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1189 Using cfiCommon0
          CFI (cfiCond1189) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1189) Conditional ??CrossCallReturnLabel_485, ??CrossCallReturnLabel_17
          CFI (cfiCond1189) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1189) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1189) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1189) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1189) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1189) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1189) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1189) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1189) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1189) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1189) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1189) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1189) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1189) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1189) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1189) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1189) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1189) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1189) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1189) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1189) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1189) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1189) CFA_SP SP+-4
          CFI (cfiCond1189) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1190 Using cfiCommon0
          CFI (cfiCond1190) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond1190) Conditional ??CrossCallReturnLabel_486, ??CrossCallReturnLabel_0
          CFI (cfiCond1190) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1190) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1190) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1190) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1190) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1190) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1190) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1190) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1190) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1190) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1190) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1190) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1190) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1190) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1190) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1190) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1190) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1190) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1190) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1190) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1190) CFA_SP SP+-4
          CFI (cfiCond1190) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1191 Using cfiCommon0
          CFI (cfiCond1191) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond1191) Conditional ??CrossCallReturnLabel_486, ??CrossCallReturnLabel_1
          CFI (cfiCond1191) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1191) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1191) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1191) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1191) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1191) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1191) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1191) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1191) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1191) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1191) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1191) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1191) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1191) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1191) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1191) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1191) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1191) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1191) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1191) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1191) CFA_SP SP+-4
          CFI (cfiCond1191) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1192 Using cfiCommon0
          CFI (cfiCond1192) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond1192) Conditional ??CrossCallReturnLabel_486, ??CrossCallReturnLabel_2
          CFI (cfiCond1192) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1192) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1192) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1192) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1192) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1192) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1192) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1192) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1192) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1192) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1192) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1192) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1192) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1192) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1192) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1192) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1192) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1192) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1192) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1192) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1192) CFA_SP SP+-4
          CFI (cfiCond1192) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1193 Using cfiCommon0
          CFI (cfiCond1193) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond1193) Conditional ??CrossCallReturnLabel_486, ??CrossCallReturnLabel_3
          CFI (cfiCond1193) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1193) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1193) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1193) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1193) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1193) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1193) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1193) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1193) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1193) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1193) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1193) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1193) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1193) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1193) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1193) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1193) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1193) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1193) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1193) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1193) CFA_SP SP+-4
          CFI (cfiCond1193) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1194 Using cfiCommon0
          CFI (cfiCond1194) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1194) Conditional ??CrossCallReturnLabel_487, ??CrossCallReturnLabel_16
          CFI (cfiCond1194) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1194) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1194) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1194) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1194) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1194) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1194) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1194) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1194) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1194) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1194) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1194) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1194) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1194) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1194) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1194) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1194) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1194) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1194) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1194) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1194) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1194) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1194) CFA_SP SP+-4
          CFI (cfiCond1194) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1195 Using cfiCommon0
          CFI (cfiCond1195) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1195) Conditional ??CrossCallReturnLabel_487, ??CrossCallReturnLabel_17
          CFI (cfiCond1195) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1195) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1195) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1195) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1195) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1195) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1195) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1195) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1195) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1195) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1195) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1195) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1195) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1195) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1195) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1195) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1195) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1195) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1195) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1195) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1195) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1195) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1195) CFA_SP SP+-4
          CFI (cfiCond1195) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1196 Using cfiCommon1
          CFI (cfiPicker1196) NoFunction
          CFI (cfiPicker1196) Picker
        MOVX      A,@DPTR
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond1180
          CFI EndBlock cfiCond1181
          CFI EndBlock cfiCond1182
          CFI EndBlock cfiCond1183
          CFI EndBlock cfiCond1184
          CFI EndBlock cfiCond1185
          CFI EndBlock cfiCond1186
          CFI EndBlock cfiCond1187
          CFI EndBlock cfiCond1188
          CFI EndBlock cfiCond1189
          CFI EndBlock cfiCond1190
          CFI EndBlock cfiCond1191
          CFI EndBlock cfiCond1192
          CFI EndBlock cfiCond1193
          CFI EndBlock cfiCond1194
          CFI EndBlock cfiCond1195
          CFI EndBlock cfiPicker1196
// 2998 
// 2999 /*********************************************************************
// 3000  * @fn      zclClosures_SendDoorLockGetUserStatusResponse
// 3001  *
// 3002  * @brief   Call to send out a Get User Status Response
// 3003  *
// 3004  * @param   srcEP - Sending application's endpoint
// 3005  * @param   dstAddr - where you want the message to go
// 3006  * @param   userID - User ID is between 0 - [# PINs User supported attribute]
// 3007  * @param   userStatus - Used to indicate what the status is for a specific User ID
// 3008  * @param   disableDefaultRsp - decides default response is necessary or not
// 3009  * @param   seqNum - sequence number of the command packet
// 3010  *
// 3011  * @return  ZStatus_t
// 3012  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3013 ZStatus_t zclClosures_SendDoorLockGetUserStatusResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockGetUserStatusResponse:
          CFI Block cfiBlock1197 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetUserStatusResponse
        CODE
// 3014                                                          uint16 userID, uint8 userStatus,
// 3015                                                          uint8 disableDefaultRsp, uint8 seqNum )
// 3016 {
        FUNCALL zclClosures_SendDoorLockGetUserStatusResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 3
        MOV       A,#-0x3
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV       A,R1
        MOV       R6,A
// 3017   uint8 payload[PAYLOAD_LEN_GET_USER_STATUS_RSP];
// 3018 
// 3019   payload[0] = LO_UINT16(userID);
        MOV       A,R4
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
// 3020   payload[1] = HI_UINT16(userID);
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R5
        MOVX      @DPTR,A
// 3021   payload[2] = userStatus;
        MOV       A,#0xd
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ??Subroutine195_0 & 0xFFFF
// 3022 
// 3023   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 3024                           COMMAND_CLOSURES_GET_USER_STATUS_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 3025                           disableDefaultRsp, 0, seqNum, PAYLOAD_LEN_GET_USER_STATUS_RSP, payload );
??CrossCallReturnLabel_494:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       ?V0,#0x3
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_35:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        CLR       A
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_36:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V0,#0xa
        LJMP      ?Subroutine4 & 0xFFFF
// 3026 }
          CFI EndBlock cfiBlock1197

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine63:
          CFI Block cfiCond1198 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetLogRecordRequest
          CFI Conditional ??CrossCallReturnLabel_489
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1199 Using cfiCommon0
          CFI (cfiCond1199) Function zclClosures_SendDoorLockSetHolidayScheduleRequest
          CFI (cfiCond1199) Conditional ??CrossCallReturnLabel_490
          CFI (cfiCond1199) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1199) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1199) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1199) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1199) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1199) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1199) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1199) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1199) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1199) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1199) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1199) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1199) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1199) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1199) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1199) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1199) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1199) CFA_SP SP+-2
          CFI (cfiCond1199) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker1200 Using cfiCommon1
          CFI (cfiPicker1200) NoFunction
          CFI (cfiPicker1200) Picker
        MOV       A,R5
          CFI EndBlock cfiCond1198
          CFI EndBlock cfiCond1199
          CFI EndBlock cfiPicker1200
        REQUIRE ??Subroutine195_0
        ; // Fall through to label ??Subroutine195_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine195_0:
          CFI Block cfiCond1201 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetUserStatusRequest
          CFI Conditional ??CrossCallReturnLabel_491
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1202 Using cfiCommon0
          CFI (cfiCond1202) Function zclClosures_SendDoorLockSetYearDayScheduleRequest
          CFI (cfiCond1202) Conditional ??CrossCallReturnLabel_492
          CFI (cfiCond1202) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1202) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1202) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1202) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1202) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1202) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1202) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1202) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1202) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1202) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1202) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1202) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1202) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1202) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1202) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1202) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1202) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1202) CFA_SP SP+-2
          CFI (cfiCond1202) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1203 Using cfiCommon0
          CFI (cfiCond1203) Function zclClosures_SendDoorLockSetUserTypeRequest
          CFI (cfiCond1203) Conditional ??CrossCallReturnLabel_493
          CFI (cfiCond1203) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1203) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1203) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1203) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1203) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1203) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1203) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1203) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1203) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1203) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1203) CFA_SP SP+-2
          CFI (cfiCond1203) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1204 Using cfiCommon0
          CFI (cfiCond1204) Function zclClosures_SendDoorLockGetUserStatusResponse
          CFI (cfiCond1204) Conditional ??CrossCallReturnLabel_494
          CFI (cfiCond1204) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1204) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1204) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1204) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1204) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1204) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1204) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1204) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1204) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1204) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1204) CFA_SP SP+-2
          CFI (cfiCond1204) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1205 Using cfiCommon0
          CFI (cfiCond1205) Function zclClosures_SendDoorLockGetUserTypeResponse
          CFI (cfiCond1205) Conditional ??CrossCallReturnLabel_495
          CFI (cfiCond1205) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1205) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1205) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1205) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1205) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1205) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1205) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1205) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1205) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1205) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1205) CFA_SP SP+-2
          CFI (cfiCond1205) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1206 Using cfiCommon0
          CFI (cfiCond1206) Function zclClosures_SendDoorLockGetLogRecordRequest
          CFI (cfiCond1206) Conditional ??CrossCallReturnLabel_489
          CFI (cfiCond1206) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1206) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1206) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1206) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1206) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1206) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1206) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1206) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1206) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1206) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1206) CFA_SP SP+-2
          CFI (cfiCond1206) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1207 Using cfiCommon0
          CFI (cfiCond1207) Function zclClosures_SendDoorLockSetHolidayScheduleRequest
          CFI (cfiCond1207) Conditional ??CrossCallReturnLabel_490
          CFI (cfiCond1207) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1207) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1207) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1207) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1207) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1207) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1207) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1207) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1207) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1207) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1207) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1207) CFA_SP SP+-2
          CFI (cfiCond1207) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker1208 Using cfiCommon1
          CFI (cfiPicker1208) NoFunction
          CFI (cfiPicker1208) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,?XSP + 0
        MOV       R1,?XSP + 1
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond1201
          CFI EndBlock cfiCond1202
          CFI EndBlock cfiCond1203
          CFI EndBlock cfiCond1204
          CFI EndBlock cfiCond1205
          CFI EndBlock cfiCond1206
          CFI EndBlock cfiCond1207
          CFI EndBlock cfiPicker1208
// 3027 
// 3028 /*********************************************************************
// 3029  * @fn      zclClosures_SendDoorLockGetWeekDayScheduleResponse
// 3030  *
// 3031  * @brief   Call to send out a Get Week Day Schedule Response
// 3032  *
// 3033  * @param   srcEP - Sending application's endpoint
// 3034  * @param   dstAddr - where you want the message to go
// 3035  * @param   pCmd:
// 3036  *               scheduleID - The Schedule ID # is between 0 - [# Schedule IDs per user attribute]
// 3037  *               userID - User ID is between 0 - [# PINs User supported attribute]
// 3038  *               status - Returns the state due to the requesting command
// 3039  *               daysMask - Bitmask of the effective days in the order XSFTWTMS
// 3040  *               startHour - The start hour of the Week Day Schedule: 0-23
// 3041  *               startMinute - The start minute of the Week Day Schedule: 0-59
// 3042  *               endHour - The end hour of the Week Day Schedule: 0-23
// 3043  *               endMinute - The end minute of the Week Day Schedule: 0-59
// 3044  * @param   disableDefaultRsp - decides default response is necessary or not
// 3045  * @param   seqNum - sequence number of the command packet
// 3046  *
// 3047  * @return  ZStatus_t
// 3048  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3049 ZStatus_t zclClosures_SendDoorLockGetWeekDayScheduleResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockGetWeekDayScheduleResponse:
          CFI Block cfiBlock1209 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
        CODE
// 3050                                                               zclDoorLockGetWeekDayScheduleRsp_t *pCmd,
// 3051                                                               uint8 disableDefaultRsp, uint8 seqNum )
// 3052 {
        FUNCALL zclClosures_SendDoorLockGetWeekDayScheduleResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 9
        MOV       A,#-0x9
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,R1
        MOV       R6,A
// 3053   uint8 payload[PAYLOAD_LEN_GET_WEEK_DAY_SCHEDULE_RSP];
// 3054   uint8 payloadLen = sizeof( payload );
        MOV       R7,#0x9
// 3055 
// 3056   payload[0] = pCmd->scheduleID;
        LCALL     ?Subroutine105 & 0xFFFF
// 3057   payload[1] = LO_UINT16( pCmd->userID );
??CrossCallReturnLabel_228:
        MOV       R0,DPL
        MOV       R1,DPH
        MOVX      A,@DPTR
        MOV       ?V0,A
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        LCALL     ?Subroutine79 & 0xFFFF
// 3058   payload[2] = HI_UINT16( pCmd->userID );
??CrossCallReturnLabel_174:
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 3059   payload[3] = pCmd->status;
        MOV       A,R4
        ADD       A,#0x3
        MOV       R0,A
        CLR       A
        ADDC      A,R5
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 3060 
// 3061   if ( pCmd->status == ZCL_STATUS_SUCCESS )
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        JNZ       ??zclClosures_SendDoorLockGetWeekDayScheduleRes_1
// 3062   {
// 3063     payload[4] = pCmd->daysMask;
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine87 & 0xFFFF
// 3064     payload[5] = pCmd->startHour;
// 3065     payload[6] = pCmd->startMinute;
// 3066     payload[7] = pCmd->endHour;
// 3067     payload[8] = pCmd->endMinute;
// 3068   }
??CrossCallReturnLabel_197:
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_162:
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_163:
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_160:
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        SJMP      ??zclClosures_SendDoorLockGetWeekDayScheduleRes_2
// 3069   else
// 3070   {
// 3071     payloadLen = 4;
??zclClosures_SendDoorLockGetWeekDayScheduleRes_1:
        MOV       R7,#0x4
// 3072   }
// 3073 
// 3074   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 3075                           COMMAND_CLOSURES_GET_WEEK_DAY_SCHEDULE_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 3076                           disableDefaultRsp, 0, seqNum, payloadLen, payload );
??zclClosures_SendDoorLockGetWeekDayScheduleRes_2:
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,?XSP + 0
        MOV       R1,?XSP + 1
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,R7
        MOV       ?V0,A
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_37:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        CLR       A
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       A,#0x1a
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_38:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       ?V0,#0xc
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       A,R6
        MOV       R1,A
        LCALL     ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_511:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,#0x9
        LJMP      ??Subroutine197_0 & 0xFFFF
// 3077 }
          CFI EndBlock cfiBlock1209

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine99:
          CFI Block cfiCond1210 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI Conditional ??CrossCallReturnLabel_496
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond1211 Using cfiCommon0
          CFI (cfiCond1211) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond1211) Conditional ??CrossCallReturnLabel_497
          CFI (cfiCond1211) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1211) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1211) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1211) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1211) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1211) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1211) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1211) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1211) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1211) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1211) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1211) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1211) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1211) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1211) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1211) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1211) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1211) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1211) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1211) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1211) CFA_SP SP+-2
          CFI (cfiCond1211) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond1212 Using cfiCommon0
          CFI (cfiCond1212) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond1212) Conditional ??CrossCallReturnLabel_498
          CFI (cfiCond1212) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1212) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1212) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1212) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1212) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1212) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1212) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1212) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1212) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1212) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1212) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1212) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1212) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1212) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1212) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1212) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1212) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1212) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1212) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1212) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1212) CFA_SP SP+-2
          CFI (cfiCond1212) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond1213 Using cfiCommon0
          CFI (cfiCond1213) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond1213) Conditional ??CrossCallReturnLabel_499
          CFI (cfiCond1213) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1213) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1213) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1213) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1213) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1213) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1213) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1213) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1213) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1213) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1213) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1213) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1213) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1213) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1213) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1213) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1213) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1213) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1213) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1213) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1213) CFA_SP SP+-2
          CFI (cfiCond1213) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond1214 Using cfiCommon0
          CFI (cfiCond1214) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond1214) Conditional ??CrossCallReturnLabel_500
          CFI (cfiCond1214) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1214) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1214) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1214) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1214) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1214) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1214) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1214) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1214) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1214) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1214) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1214) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1214) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1214) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1214) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1214) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1214) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1214) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1214) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1214) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1214) CFA_SP SP+-2
          CFI (cfiCond1214) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiPicker1215 Using cfiCommon1
          CFI (cfiPicker1215) NoFunction
          CFI (cfiPicker1215) Picker
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        MOV       R1,?V2
          CFI EndBlock cfiCond1210
          CFI EndBlock cfiCond1211
          CFI EndBlock cfiCond1212
          CFI EndBlock cfiCond1213
          CFI EndBlock cfiCond1214
          CFI EndBlock cfiPicker1215
        REQUIRE ??Subroutine196_0
        ; // Fall through to label ??Subroutine196_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine196_0:
          CFI Block cfiCond1216 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockRequest
          CFI Conditional ??CrossCallReturnLabel_501
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond1217 Using cfiCommon0
          CFI (cfiCond1217) Function zclClosures_SendDoorLockGetLogRecordRequest
          CFI (cfiCond1217) Conditional ??CrossCallReturnLabel_502
          CFI (cfiCond1217) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1217) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1217) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1217) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1217) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1217) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1217) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1217) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1217) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1217) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1217) CFA_SP SP+-2
          CFI (cfiCond1217) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1218 Using cfiCommon0
          CFI (cfiCond1218) Function zclClosures_SendDoorLockUserIDRequest
          CFI (cfiCond1218) Conditional ??CrossCallReturnLabel_503
          CFI (cfiCond1218) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1218) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1218) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1218) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1218) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1218) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1218) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1218) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1218) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1218) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1218) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1218) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1218) CFA_SP SP+-2
          CFI (cfiCond1218) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1219 Using cfiCommon0
          CFI (cfiCond1219) Function zclClosures_SendDoorLockHolidayScheduleRequest
          CFI (cfiCond1219) Conditional ??CrossCallReturnLabel_504
          CFI (cfiCond1219) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1219) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1219) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1219) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1219) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1219) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1219) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1219) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1219) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1219) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1219) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1219) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1219) CFA_SP SP+-2
          CFI (cfiCond1219) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1220 Using cfiCommon0
          CFI (cfiCond1220) Function zclClosures_SendDoorLockStatusResponse
          CFI (cfiCond1220) Conditional ??CrossCallReturnLabel_504
          CFI (cfiCond1220) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1220) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1220) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1220) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1220) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1220) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1220) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1220) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1220) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1220) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1220) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1220) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1220) CFA_SP SP+-2
          CFI (cfiCond1220) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1221 Using cfiCommon0
          CFI (cfiCond1221) Function zclClosures_SendSetTemporaryPinStatusResponse
          CFI (cfiCond1221) Conditional ??CrossCallReturnLabel_504
          CFI (cfiCond1221) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1221) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1221) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1221) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1221) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1221) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1221) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1221) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1221) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1221) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1221) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1221) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1221) CFA_SP SP+-2
          CFI (cfiCond1221) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1222 Using cfiCommon0
          CFI (cfiCond1222) Function zclClosures_SendModifyPinStatusResponse
          CFI (cfiCond1222) Conditional ??CrossCallReturnLabel_504
          CFI (cfiCond1222) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1222) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1222) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1222) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1222) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1222) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1222) CFA_SP SP+-2
          CFI (cfiCond1222) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1223 Using cfiCommon0
          CFI (cfiCond1223) Function zclClosures_SendDoorLockClearAllCodesRequest
          CFI (cfiCond1223) Conditional ??CrossCallReturnLabel_505
          CFI (cfiCond1223) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1223) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1223) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1223) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1223) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1223) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1223) CFA_SP SP+-2
          CFI (cfiCond1223) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1224 Using cfiCommon0
          CFI (cfiCond1224) Function zclClosures_SendDoorLockSetWeekDayScheduleRequest
          CFI (cfiCond1224) Conditional ??CrossCallReturnLabel_506
          CFI (cfiCond1224) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1224) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1224) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1224) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1224) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1224) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1224) CFA_SP SP+-2
          CFI (cfiCond1224) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond1225 Using cfiCommon0
          CFI (cfiCond1225) Function zclClosures_SendDoorLockScheduleRequest
          CFI (cfiCond1225) Conditional ??CrossCallReturnLabel_507
          CFI (cfiCond1225) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1225) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1225) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1225) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1225) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1225) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1225) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1225) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1225) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1225) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1225) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1225) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1225) CFA_SP SP+-2
          CFI (cfiCond1225) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1226 Using cfiCommon0
          CFI (cfiCond1226) Function zclClosures_SendDoorLockSetYearDayScheduleRequest
          CFI (cfiCond1226) Conditional ??CrossCallReturnLabel_508
          CFI (cfiCond1226) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1226) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1226) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1226) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1226) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1226) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1226) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1226) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1226) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1226) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1226) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1226) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1226) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1226) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1226) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1226) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1226) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1226) CFA_SP SP+-2
          CFI (cfiCond1226) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond1227 Using cfiCommon0
          CFI (cfiCond1227) Function zclClosures_SendDoorLockSetHolidayScheduleRequest
          CFI (cfiCond1227) Conditional ??CrossCallReturnLabel_509
          CFI (cfiCond1227) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1227) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1227) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1227) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1227) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1227) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1227) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1227) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1227) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1227) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1227) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1227) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1227) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1227) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1227) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1227) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1227) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1227) CFA_SP SP+-2
          CFI (cfiCond1227) CFA_XSP16 add(XSP16, 38)
          CFI Block cfiCond1228 Using cfiCommon0
          CFI (cfiCond1228) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1228) Conditional ??CrossCallReturnLabel_510
          CFI (cfiCond1228) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1228) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1228) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1228) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1228) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1228) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1228) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1228) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1228) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1228) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1228) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1228) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1228) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1228) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1228) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1228) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1228) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1228) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1228) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1228) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1228) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1228) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1228) CFA_SP SP+-2
          CFI (cfiCond1228) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond1229 Using cfiCommon0
          CFI (cfiCond1229) Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
          CFI (cfiCond1229) Conditional ??CrossCallReturnLabel_511
          CFI (cfiCond1229) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1229) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1229) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1229) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1229) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1229) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1229) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1229) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1229) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1229) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1229) CFA_SP SP+-2
          CFI (cfiCond1229) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond1230 Using cfiCommon0
          CFI (cfiCond1230) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond1230) Conditional ??CrossCallReturnLabel_512
          CFI (cfiCond1230) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1230) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1230) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1230) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1230) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1230) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1230) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1230) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1230) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1230) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1230) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1230) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1230) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1230) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1230) CFA_SP SP+-2
          CFI (cfiCond1230) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1231 Using cfiCommon0
          CFI (cfiCond1231) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1231) Conditional ??CrossCallReturnLabel_513
          CFI (cfiCond1231) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1231) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1231) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1231) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1231) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1231) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1231) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1231) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1231) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1231) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1231) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1231) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1231) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1231) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1231) CFA_SP SP+-2
          CFI (cfiCond1231) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond1232 Using cfiCommon0
          CFI (cfiCond1232) Function zclClosures_SendDoorLockSetUserStatusRequest
          CFI (cfiCond1232) Conditional ??CrossCallReturnLabel_514
          CFI (cfiCond1232) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1232) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1232) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1232) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1232) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1232) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1232) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1232) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1232) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1232) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1232) CFA_SP SP+-2
          CFI (cfiCond1232) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1233 Using cfiCommon0
          CFI (cfiCond1233) Function zclClosures_SendDoorLockSetUserTypeRequest
          CFI (cfiCond1233) Conditional ??CrossCallReturnLabel_514
          CFI (cfiCond1233) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1233) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1233) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1233) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1233) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1233) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1233) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1233) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1233) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1233) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1233) CFA_SP SP+-2
          CFI (cfiCond1233) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1234 Using cfiCommon0
          CFI (cfiCond1234) Function zclClosures_SendDoorLockGetUserStatusResponse
          CFI (cfiCond1234) Conditional ??CrossCallReturnLabel_514
          CFI (cfiCond1234) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1234) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1234) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1234) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1234) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1234) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1234) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1234) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1234) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1234) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1234) CFA_SP SP+-2
          CFI (cfiCond1234) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1235 Using cfiCommon0
          CFI (cfiCond1235) Function zclClosures_SendDoorLockGetUserTypeResponse
          CFI (cfiCond1235) Conditional ??CrossCallReturnLabel_514
          CFI (cfiCond1235) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1235) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1235) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1235) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1235) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1235) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1235) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1235) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1235) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1235) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1235) CFA_SP SP+-2
          CFI (cfiCond1235) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1236 Using cfiCommon0
          CFI (cfiCond1236) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1236) Conditional ??CrossCallReturnLabel_515
          CFI (cfiCond1236) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1236) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1236) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1236) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1236) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1236) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1236) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1236) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1236) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1236) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1236) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1236) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1236) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1236) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1236) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1236) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1236) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1236) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1236) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1236) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1236) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1236) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1236) CFA_SP SP+-2
          CFI (cfiCond1236) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond1237 Using cfiCommon0
          CFI (cfiCond1237) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1237) Conditional ??CrossCallReturnLabel_516
          CFI (cfiCond1237) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1237) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1237) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1237) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1237) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1237) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1237) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1237) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1237) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1237) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1237) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1237) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1237) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1237) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1237) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1237) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1237) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1237) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1237) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1237) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1237) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1237) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1237) CFA_SP SP+-2
          CFI (cfiCond1237) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond1238 Using cfiCommon0
          CFI (cfiCond1238) Function zclClosures_SendDoorLockUnlockTimeoutRequest
          CFI (cfiCond1238) Conditional ??CrossCallReturnLabel_496
          CFI (cfiCond1238) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1238) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1238) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1238) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1238) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1238) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1238) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1238) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1238) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1238) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1238) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1238) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1238) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1238) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1238) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1238) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1238) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1238) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1238) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1238) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1238) CFA_SP SP+-2
          CFI (cfiCond1238) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond1239 Using cfiCommon0
          CFI (cfiCond1239) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond1239) Conditional ??CrossCallReturnLabel_497
          CFI (cfiCond1239) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1239) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1239) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1239) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1239) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1239) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1239) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1239) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1239) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1239) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1239) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1239) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1239) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1239) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1239) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1239) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1239) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1239) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1239) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1239) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1239) CFA_SP SP+-2
          CFI (cfiCond1239) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond1240 Using cfiCommon0
          CFI (cfiCond1240) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond1240) Conditional ??CrossCallReturnLabel_498
          CFI (cfiCond1240) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1240) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1240) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1240) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1240) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1240) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1240) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1240) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1240) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1240) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1240) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1240) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1240) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1240) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1240) CFA_SP SP+-2
          CFI (cfiCond1240) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond1241 Using cfiCommon0
          CFI (cfiCond1241) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond1241) Conditional ??CrossCallReturnLabel_499
          CFI (cfiCond1241) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1241) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1241) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1241) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1241) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1241) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1241) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1241) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1241) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1241) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1241) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1241) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1241) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1241) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1241) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1241) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1241) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1241) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1241) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1241) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1241) CFA_SP SP+-2
          CFI (cfiCond1241) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond1242 Using cfiCommon0
          CFI (cfiCond1242) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond1242) Conditional ??CrossCallReturnLabel_500
          CFI (cfiCond1242) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1242) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1242) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1242) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1242) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1242) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1242) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1242) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1242) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1242) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1242) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1242) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1242) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1242) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1242) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1242) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1242) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1242) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1242) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1242) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1242) CFA_SP SP+-2
          CFI (cfiCond1242) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiPicker1243 Using cfiCommon1
          CFI (cfiPicker1243) NoFunction
          CFI (cfiPicker1243) Picker
        LCALL     `??zcl_SendCommand::?relay`; Banked call to: zcl_SendCommand
        MOV       A,#0xb
        RET
          CFI EndBlock cfiCond1216
          CFI EndBlock cfiCond1217
          CFI EndBlock cfiCond1218
          CFI EndBlock cfiCond1219
          CFI EndBlock cfiCond1220
          CFI EndBlock cfiCond1221
          CFI EndBlock cfiCond1222
          CFI EndBlock cfiCond1223
          CFI EndBlock cfiCond1224
          CFI EndBlock cfiCond1225
          CFI EndBlock cfiCond1226
          CFI EndBlock cfiCond1227
          CFI EndBlock cfiCond1228
          CFI EndBlock cfiCond1229
          CFI EndBlock cfiCond1230
          CFI EndBlock cfiCond1231
          CFI EndBlock cfiCond1232
          CFI EndBlock cfiCond1233
          CFI EndBlock cfiCond1234
          CFI EndBlock cfiCond1235
          CFI EndBlock cfiCond1236
          CFI EndBlock cfiCond1237
          CFI EndBlock cfiCond1238
          CFI EndBlock cfiCond1239
          CFI EndBlock cfiCond1240
          CFI EndBlock cfiCond1241
          CFI EndBlock cfiCond1242
          CFI EndBlock cfiPicker1243

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine87:
          CFI Block cfiCond1244 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI Conditional ??CrossCallReturnLabel_196
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1245 Using cfiCommon0
          CFI (cfiCond1245) Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
          CFI (cfiCond1245) Conditional ??CrossCallReturnLabel_197
          CFI (cfiCond1245) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1245) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1245) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1245) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1245) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1245) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1245) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1245) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1245) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1245) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1245) CFA_SP SP+-2
          CFI (cfiCond1245) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker1246 Using cfiCommon1
          CFI (cfiPicker1246) NoFunction
          CFI (cfiPicker1246) Picker
        LCALL     ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_267:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1244
          CFI EndBlock cfiCond1245
          CFI EndBlock cfiPicker1246

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine127:
          CFI Block cfiCond1247 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI Conditional ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_169
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1248 Using cfiCommon0
          CFI (cfiCond1248) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond1248) Conditional ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_170
          CFI (cfiCond1248) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1248) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1248) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1248) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1248) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1248) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1248) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1248) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1248) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1248) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1248) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1248) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1248) CFA_SP SP+-4
          CFI (cfiCond1248) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1249 Using cfiCommon0
          CFI (cfiCond1249) Function zclClosures_ProcessInDoorLockSetWeekDaySchedule
          CFI (cfiCond1249) Conditional ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_55
          CFI (cfiCond1249) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1249) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1249) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1249) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1249) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1249) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1249) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1249) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1249) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1249) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1249) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1249) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1249) CFA_SP SP+-4
          CFI (cfiCond1249) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1250 Using cfiCommon0
          CFI (cfiCond1250) Function zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp
          CFI (cfiCond1250) Conditional ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_56
          CFI (cfiCond1250) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1250) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1250) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1250) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1250) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1250) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1250) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1250) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1250) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1250) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1250) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1250) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1250) CFA_SP SP+-4
          CFI (cfiCond1250) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1251 Using cfiCommon0
          CFI (cfiCond1251) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond1251) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_196
          CFI (cfiCond1251) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1251) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1251) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1251) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1251) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1251) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1251) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1251) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1251) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1251) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1251) CFA_SP SP+-4
          CFI (cfiCond1251) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1252 Using cfiCommon0
          CFI (cfiCond1252) Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
          CFI (cfiCond1252) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_197
          CFI (cfiCond1252) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1252) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1252) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1252) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1252) CFA_SP SP+-4
          CFI (cfiCond1252) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond1253 Using cfiCommon0
          CFI (cfiCond1253) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond1253) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_164
          CFI (cfiCond1253) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1253) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1253) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1253) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1253) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1253) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1253) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1253) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1253) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1253) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1253) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1253) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1253) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1253) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1253) CFA_SP SP+-4
          CFI (cfiCond1253) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1254 Using cfiCommon0
          CFI (cfiCond1254) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond1254) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_165
          CFI (cfiCond1254) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1254) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1254) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1254) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1254) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1254) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1254) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1254) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1254) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1254) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1254) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1254) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1254) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1254) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1254) CFA_SP SP+-4
          CFI (cfiCond1254) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1255 Using cfiCommon0
          CFI (cfiCond1255) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond1255) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_166
          CFI (cfiCond1255) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1255) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1255) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1255) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1255) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1255) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1255) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1255) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1255) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1255) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1255) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1255) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1255) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1255) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1255) CFA_SP SP+-4
          CFI (cfiCond1255) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker1256 Using cfiCommon1
          CFI (cfiPicker1256) NoFunction
          CFI (cfiPicker1256) Picker
        MOVX      @DPTR,A
        MOV       DPL,R4
        MOV       DPH,R5
        RET
          CFI EndBlock cfiCond1247
          CFI EndBlock cfiCond1248
          CFI EndBlock cfiCond1249
          CFI EndBlock cfiCond1250
          CFI EndBlock cfiCond1251
          CFI EndBlock cfiCond1252
          CFI EndBlock cfiCond1253
          CFI EndBlock cfiCond1254
          CFI EndBlock cfiCond1255
          CFI EndBlock cfiPicker1256

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine74:
          CFI Block cfiCond1257 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
          CFI Conditional ??CrossCallReturnLabel_162
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond1258 Using cfiCommon0
          CFI (cfiCond1258) Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
          CFI (cfiCond1258) Conditional ??CrossCallReturnLabel_163
          CFI (cfiCond1258) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1258) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1258) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1258) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1258) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1258) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1258) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1258) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1258) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1258) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1258) CFA_SP SP+-2
          CFI (cfiCond1258) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker1259 Using cfiCommon1
          CFI (cfiPicker1259) NoFunction
          CFI (cfiPicker1259) Picker
        LCALL     ?Subroutine123 & 0xFFFF
??CrossCallReturnLabel_259:
        RET
          CFI EndBlock cfiCond1257
          CFI EndBlock cfiCond1258
          CFI EndBlock cfiPicker1259

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine123:
          CFI Block cfiCond1260 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
          CFI Conditional ??CrossCallReturnLabel_259, ??CrossCallReturnLabel_162
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond1261 Using cfiCommon0
          CFI (cfiCond1261) Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
          CFI (cfiCond1261) Conditional ??CrossCallReturnLabel_259, ??CrossCallReturnLabel_163
          CFI (cfiCond1261) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1261) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1261) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1261) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1261) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1261) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1261) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1261) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1261) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1261) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1261) CFA_SP SP+-4
          CFI (cfiCond1261) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond1262 Using cfiCommon0
          CFI (cfiCond1262) Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
          CFI (cfiCond1262) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_160
          CFI (cfiCond1262) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1262) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1262) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1262) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1262) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1262) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1262) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1262) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1262) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1262) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1262) CFA_SP SP+-4
          CFI (cfiCond1262) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond1263 Using cfiCommon0
          CFI (cfiCond1263) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1263) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_161
          CFI (cfiCond1263) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1263) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1263) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1263) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1263) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1263) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1263) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1263) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1263) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1263) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1263) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1263) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1263) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1263) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1263) CFA_SP SP+-4
          CFI (cfiCond1263) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker1264 Using cfiCommon1
          CFI (cfiPicker1264) NoFunction
          CFI (cfiPicker1264) Picker
        MOVX      @DPTR,A
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1260
          CFI EndBlock cfiCond1261
          CFI EndBlock cfiCond1262
          CFI EndBlock cfiCond1263
          CFI EndBlock cfiPicker1264
// 3078 
// 3079 /*********************************************************************
// 3080  * @fn      zclClosures_SendDoorLockGetYearDayScheduleResponse
// 3081  *
// 3082  * @brief   Call to send out a Get Year Day Schedule Response
// 3083  *
// 3084  * @param   srcEP - Sending application's endpoint
// 3085  * @param   dstAddr - where you want the message to go
// 3086  * @param   pCmd:
// 3087  *             scheduleID - The Schedule ID # is between 0 - [# Schedule IDs per user attribute]
// 3088  *             userID - User ID is between 0 - [# PINs User supported attribute]
// 3089  *             status - Returns the state due to the requesting command
// 3090  *             zigBeeLocalStartTime - Start time of the Year Day Schedule representing by ZigBeeLocalTime
// 3091  *             zigBeeLocalEndTime - End time of the Year Day Schedule representing by ZigBeeLocalTime
// 3092  * @param   disableDefaultRsp - decides default response is necessary or not
// 3093  * @param   seqNum - sequence number of the command packet
// 3094  *
// 3095  * @return  ZStatus_t
// 3096  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3097 ZStatus_t zclClosures_SendDoorLockGetYearDayScheduleResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockGetYearDayScheduleResponse:
          CFI Block cfiBlock1265 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetYearDayScheduleResponse
        CODE
// 3098                                                               zclDoorLockGetYearDayScheduleRsp_t *pCmd,
// 3099                                                               uint8 disableDefaultRsp, uint8 seqNum )
// 3100 {
        FUNCALL zclClosures_SendDoorLockGetYearDayScheduleResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 12
        MOV       A,#-0xc
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       A,R1
        MOV       R6,A
// 3101   uint8 payload[PAYLOAD_LEN_GET_YEAR_DAY_SCHEDULE_RSP];
// 3102   uint8 payloadLen = sizeof( payload );
        MOV       R1,#0xc
// 3103 
// 3104   payload[0] = pCmd->scheduleID;
        LCALL     ?Subroutine34 & 0xFFFF
// 3105   payload[1] = LO_UINT16( pCmd->userID );
??CrossCallReturnLabel_81:
        MOV       ?V2,A
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V2
        LCALL     ?Subroutine86 & 0xFFFF
// 3106   payload[2] = HI_UINT16( pCmd->userID );
??CrossCallReturnLabel_194:
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V0,A
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        MOVX      @DPTR,A
// 3107   payload[3] = pCmd->status;
        MOV       A,R4
        ADD       A,#0x3
        MOV       ?V0,A
        CLR       A
        ADDC      A,R5
        MOV       ?V1,A
        MOV       DPL,?V0
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine85 & 0xFFFF
// 3108 
// 3109   if ( pCmd->status == ZCL_STATUS_SUCCESS )
??CrossCallReturnLabel_191:
        JZ        $+5
        LJMP      ??zclClosures_SendDoorLockGetYearDayScheduleRes_1 & 0xFFFF
// 3110   {
// 3111     payload[4] = BREAK_UINT32( pCmd->zigBeeLocalStartTime, 0 );
        MOV       A,R4
        ADD       A,#0x4
        LCALL     ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_202:
        LCALL     ?L_MOV_X
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine65 & 0xFFFF
// 3112     payload[5] = BREAK_UINT32( pCmd->zigBeeLocalStartTime, 1 );
??CrossCallReturnLabel_131:
        LCALL     ?L_MOV_X
        MOV       A,?V1
        MOV       ?V0,A
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine65 & 0xFFFF
// 3113     payload[6] = BREAK_UINT32( pCmd->zigBeeLocalStartTime, 2 );
??CrossCallReturnLabel_132:
        LCALL     ?L_MOV_X
        MOV       A,#0x10
        MOV       R0,#?V0
        LCALL     ?UL_SHR
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine65 & 0xFFFF
// 3114     payload[7] = BREAK_UINT32( pCmd->zigBeeLocalStartTime, 3 );
??CrossCallReturnLabel_133:
        LCALL     ?L_MOV_X
        MOV       A,#0x18
        MOV       R0,#?V0
        LCALL     ?UL_SHR
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        MOVX      @DPTR,A
// 3115     payload[8] = BREAK_UINT32( pCmd->zigBeeLocalEndTime, 0 );
        MOV       A,R4
        ADD       A,#0x8
        MOV       R4,A
        JNC       ??zclClosures_SendDoorLockGetYearDayScheduleRes_2
        INC       R5
??zclClosures_SendDoorLockGetYearDayScheduleRes_2:
        MOV       DPL,A
        MOV       DPH,R5
        MOV       R0,#?V0
        LCALL     ?L_MOV_X
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine75 & 0xFFFF
// 3116     payload[9] = BREAK_UINT32( pCmd->zigBeeLocalEndTime, 1 );
// 3117     payload[10] = BREAK_UINT32( pCmd->zigBeeLocalEndTime, 2 );
// 3118     payload[11] = BREAK_UINT32( pCmd->zigBeeLocalEndTime, 3 );
// 3119   }
??CrossCallReturnLabel_164:
        LCALL     ?L_MOV_X
        MOV       A,?V1
        MOV       ?V0,A
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_165:
        LCALL     ?L_MOV_X
        MOV       A,#0x10
        MOV       R0,#?V0
        LCALL     ?UL_SHR
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_166:
        LCALL     ?L_MOV_X
        MOV       A,#0x18
        MOV       R0,#?V0
        LCALL     ?UL_SHR
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        MOVX      @DPTR,A
        SJMP      ??zclClosures_SendDoorLockGetYearDayScheduleRes_3
// 3120   else
// 3121   {
// 3122     payloadLen = 4;
??zclClosures_SendDoorLockGetYearDayScheduleRes_1:
        MOV       R1,#0x4
// 3123   }
// 3124 
// 3125   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 3126                           COMMAND_CLOSURES_GET_YEAR_DAY_SCHEDULE_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 3127                           disableDefaultRsp, 0, seqNum, payloadLen, payload );
??zclClosures_SendDoorLockGetYearDayScheduleRes_3:
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       ?V0,R4
        MOV       ?V1,R5
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       A,R1
        MOV       ?V0,A
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       A,#0x1f
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_39:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        CLR       A
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       A,#0x21
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_40:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 34)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        MOV       ?V0,#0xf
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       A,R6
        MOV       R1,A
        LCALL     ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_512:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       A,#0xc
          CFI EndBlock cfiBlock1265
        REQUIRE ?Subroutine6
        ; // Fall through to label ?Subroutine6
// 3128 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine6:
          CFI Block cfiBlock1266 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 26)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Valid
        MOV       R7,#0x6
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock1266

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine75:
          CFI Block cfiCond1267 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI Conditional ??CrossCallReturnLabel_164
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1268 Using cfiCommon0
          CFI (cfiCond1268) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond1268) Conditional ??CrossCallReturnLabel_165
          CFI (cfiCond1268) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1268) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1268) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1268) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1268) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1268) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1268) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1268) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1268) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1268) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1268) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1268) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1268) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1268) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1268) CFA_SP SP+-2
          CFI (cfiCond1268) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1269 Using cfiCommon0
          CFI (cfiCond1269) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond1269) Conditional ??CrossCallReturnLabel_166
          CFI (cfiCond1269) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1269) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1269) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1269) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1269) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1269) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1269) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1269) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1269) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1269) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1269) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1269) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1269) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1269) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1269) CFA_SP SP+-2
          CFI (cfiCond1269) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker1270 Using cfiCommon1
          CFI (cfiPicker1270) NoFunction
          CFI (cfiPicker1270) Picker
        MOV       A,?V0
        LCALL     ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_268:
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond1267
          CFI EndBlock cfiCond1268
          CFI EndBlock cfiCond1269
          CFI EndBlock cfiPicker1270
// 3129 
// 3130 /*********************************************************************
// 3131  * @fn      zclClosures_SendDoorLockGetHolidayScheduleResponse
// 3132  *
// 3133  * @brief   Call to send out a Get Holiday Schedule Response
// 3134  *
// 3135  * @param   srcEP - Sending application's endpoint
// 3136  * @param   dstAddr - where you want the message to go
// 3137  * @param   pCmd:
// 3138  *             holidayScheduleID - A unique ID for given Holiday Schedule (0 to 254)
// 3139  *             status - Returns the state due to the requesting command
// 3140  *             zigBeeLocalStartTime - Start time of the Year Day Schedule representing by ZigBeeLocalTime
// 3141  *             zigBeeLocalEndTime - End time of the Year Day Schedule representing by ZigBeeLocalTime
// 3142  *             operatingModeDuringHoliday - A valid enumeration value as listed in operating mode attribute
// 3143  * @param   disableDefaultRsp - decides default response is necessary or not
// 3144  * @param   seqNum - sequence number of the command packet
// 3145  *
// 3146  * @return  ZStatus_t
// 3147  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3148 ZStatus_t zclClosures_SendDoorLockGetHolidayScheduleResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockGetHolidayScheduleResponse:
          CFI Block cfiBlock1271 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetHolidayScheduleResponse
        CODE
// 3149                                                               zclDoorLockGetHolidayScheduleRsp_t *pCmd,
// 3150                                                               uint8 disableDefaultRsp, uint8 seqNum )
// 3151 {
        FUNCALL zclClosures_SendDoorLockGetHolidayScheduleResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 11
        MOV       A,#-0xb
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,R1
        MOV       R6,A
// 3152   uint8 payload[PAYLOAD_LEN_GET_HOLIDAY_SCHEDULE_RSP];
// 3153   uint8 payloadLen = sizeof( payload );
        MOV       R1,#0xb
// 3154 
// 3155   payload[0] = pCmd->holidayScheduleID;
        LCALL     ?Subroutine34 & 0xFFFF
// 3156   payload[1] = pCmd->status;
??CrossCallReturnLabel_82:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine85 & 0xFFFF
// 3157 
// 3158   if ( pCmd->status == ZCL_STATUS_SUCCESS )
??CrossCallReturnLabel_192:
        JZ        $+5
        LJMP      ??zclClosures_SendDoorLockGetHolidayScheduleRes_1 & 0xFFFF
// 3159   {
// 3160     payload[2] = BREAK_UINT32( pCmd->zigBeeLocalStartTime, 0 );
        MOV       A,R4
        ADD       A,#0x2
        LCALL     ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_203:
        LCALL     ?L_MOV_X
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine65 & 0xFFFF
// 3161     payload[3] = BREAK_UINT32( pCmd->zigBeeLocalStartTime, 1 );
??CrossCallReturnLabel_134:
        LCALL     ?L_MOV_X
        MOV       A,?V1
        MOV       ?V0,A
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine65 & 0xFFFF
// 3162     payload[4] = BREAK_UINT32( pCmd->zigBeeLocalStartTime, 2 );
??CrossCallReturnLabel_135:
        LCALL     ?L_MOV_X
        MOV       A,#0x10
        MOV       R0,#?V0
        LCALL     ?UL_SHR
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine65 & 0xFFFF
// 3163     payload[5] = BREAK_UINT32( pCmd->zigBeeLocalStartTime, 3 );
??CrossCallReturnLabel_136:
        LCALL     ?L_MOV_X
        MOV       A,#0x18
        MOV       R0,#?V0
        LCALL     ?UL_SHR
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        MOVX      @DPTR,A
// 3164     payload[6] = BREAK_UINT32( pCmd->zigBeeLocalEndTime, 0 );
        MOV       A,R4
        ADD       A,#0x6
        LCALL     ?Subroutine91 & 0xFFFF
// 3165     payload[7] = BREAK_UINT32( pCmd->zigBeeLocalEndTime, 1 );
// 3166     payload[8] = BREAK_UINT32( pCmd->zigBeeLocalEndTime, 2 );
// 3167     payload[9] = BREAK_UINT32( pCmd->zigBeeLocalEndTime, 3 );
// 3168     payload[10] = pCmd->operatingModeDuringHoliday;
// 3169   }
??CrossCallReturnLabel_204:
        LCALL     ?L_MOV_X
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_137:
        LCALL     ?L_MOV_X
        MOV       A,?V1
        MOV       ?V0,A
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_138:
        LCALL     ?L_MOV_X
        MOV       A,#0x10
        MOV       R0,#?V0
        LCALL     ?UL_SHR
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_139:
        LCALL     ?L_MOV_X
        MOV       A,#0x18
        MOV       R0,#?V0
        LCALL     ?UL_SHR
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        LCALL     ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_161:
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        SJMP      ??zclClosures_SendDoorLockGetHolidayScheduleRes_2
// 3170   else
// 3171   {
// 3172     payloadLen = 2;
??zclClosures_SendDoorLockGetHolidayScheduleRes_1:
        MOV       R1,#0x2
// 3173   }
// 3174 
// 3175   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 3176                           COMMAND_CLOSURES_GET_HOLIDAY_SCHEDULE_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 3177                           disableDefaultRsp, 0, seqNum, payloadLen, payload );
??zclClosures_SendDoorLockGetHolidayScheduleRes_2:
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       ?V0,R4
        MOV       ?V1,R5
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       A,R1
        MOV       ?V0,A
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       A,#0x1e
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_41:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        CLR       A
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV       A,#0x20
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_42:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 34)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       ?V0,#0x12
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       A,R6
        MOV       R1,A
        LCALL     ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_513:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,#0xb
        LJMP      ?Subroutine6 & 0xFFFF
// 3178 }
          CFI EndBlock cfiBlock1271

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine91:
          CFI Block cfiCond1272 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI Conditional ??CrossCallReturnLabel_202
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1273 Using cfiCommon0
          CFI (cfiCond1273) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1273) Conditional ??CrossCallReturnLabel_203
          CFI (cfiCond1273) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1273) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1273) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1273) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1273) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1273) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1273) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1273) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1273) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1273) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1273) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1273) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1273) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1273) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1273) CFA_SP SP+-2
          CFI (cfiCond1273) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1274 Using cfiCommon0
          CFI (cfiCond1274) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1274) Conditional ??CrossCallReturnLabel_204
          CFI (cfiCond1274) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1274) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1274) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1274) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1274) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1274) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1274) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1274) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1274) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1274) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1274) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1274) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1274) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1274) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1274) CFA_SP SP+-2
          CFI (cfiCond1274) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker1275 Using cfiCommon1
          CFI (cfiPicker1275) NoFunction
          CFI (cfiPicker1275) Picker
        MOV       ?V0,A
        CLR       A
        ADDC      A,R5
        MOV       ?V4,?V0
        MOV       ?V5,A
        MOV       DPL,?V4
        MOV       DPH,A
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond1272
          CFI EndBlock cfiCond1273
          CFI EndBlock cfiCond1274
          CFI EndBlock cfiPicker1275

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine85:
          CFI Block cfiCond1276 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI Conditional ??CrossCallReturnLabel_191
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1277 Using cfiCommon0
          CFI (cfiCond1277) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1277) Conditional ??CrossCallReturnLabel_192
          CFI (cfiCond1277) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1277) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1277) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1277) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1277) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1277) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1277) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1277) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1277) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1277) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1277) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1277) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1277) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1277) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1277) CFA_SP SP+-2
          CFI (cfiCond1277) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker1278 Using cfiCommon1
          CFI (cfiPicker1278) NoFunction
          CFI (cfiPicker1278) Picker
        LCALL     ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_258:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1276
          CFI EndBlock cfiCond1277
          CFI EndBlock cfiPicker1278

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine72:
          CFI Block cfiCond1279 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
          CFI Conditional ??CrossCallReturnLabel_160
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond1280 Using cfiCommon0
          CFI (cfiCond1280) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1280) Conditional ??CrossCallReturnLabel_161
          CFI (cfiCond1280) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1280) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1280) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1280) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1280) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1280) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1280) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1280) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1280) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1280) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1280) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1280) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1280) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1280) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1280) CFA_SP SP+-2
          CFI (cfiCond1280) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker1281 Using cfiCommon1
          CFI (cfiPicker1281) NoFunction
          CFI (cfiPicker1281) Picker
        LCALL     ?Subroutine123 & 0xFFFF
??CrossCallReturnLabel_260:
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1279
          CFI EndBlock cfiCond1280
          CFI EndBlock cfiPicker1281

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine65:
          CFI Block cfiCond1282 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI Conditional ??CrossCallReturnLabel_131
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1283 Using cfiCommon0
          CFI (cfiCond1283) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond1283) Conditional ??CrossCallReturnLabel_132
          CFI (cfiCond1283) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1283) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1283) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1283) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1283) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1283) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1283) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1283) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1283) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1283) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1283) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1283) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1283) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1283) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1283) CFA_SP SP+-2
          CFI (cfiCond1283) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1284 Using cfiCommon0
          CFI (cfiCond1284) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond1284) Conditional ??CrossCallReturnLabel_133
          CFI (cfiCond1284) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1284) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1284) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1284) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1284) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1284) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1284) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1284) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1284) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1284) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1284) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1284) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1284) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1284) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1284) CFA_SP SP+-2
          CFI (cfiCond1284) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1285 Using cfiCommon0
          CFI (cfiCond1285) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1285) Conditional ??CrossCallReturnLabel_134
          CFI (cfiCond1285) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1285) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1285) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1285) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1285) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1285) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1285) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1285) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1285) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1285) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1285) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1285) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1285) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1285) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1285) CFA_SP SP+-2
          CFI (cfiCond1285) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1286 Using cfiCommon0
          CFI (cfiCond1286) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1286) Conditional ??CrossCallReturnLabel_135
          CFI (cfiCond1286) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1286) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1286) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1286) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1286) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1286) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1286) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1286) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1286) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1286) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1286) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1286) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1286) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1286) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1286) CFA_SP SP+-2
          CFI (cfiCond1286) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1287 Using cfiCommon0
          CFI (cfiCond1287) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1287) Conditional ??CrossCallReturnLabel_136
          CFI (cfiCond1287) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1287) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1287) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1287) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1287) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1287) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1287) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1287) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1287) CFA_SP SP+-2
          CFI (cfiCond1287) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1288 Using cfiCommon0
          CFI (cfiCond1288) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1288) Conditional ??CrossCallReturnLabel_137
          CFI (cfiCond1288) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1288) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1288) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1288) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1288) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1288) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1288) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1288) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1288) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1288) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1288) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1288) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1288) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1288) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1288) CFA_SP SP+-2
          CFI (cfiCond1288) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1289 Using cfiCommon0
          CFI (cfiCond1289) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1289) Conditional ??CrossCallReturnLabel_138
          CFI (cfiCond1289) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1289) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1289) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1289) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1289) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1289) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1289) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1289) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1289) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1289) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1289) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1289) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1289) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1289) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1289) CFA_SP SP+-2
          CFI (cfiCond1289) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1290 Using cfiCommon0
          CFI (cfiCond1290) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1290) Conditional ??CrossCallReturnLabel_139
          CFI (cfiCond1290) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1290) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1290) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1290) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1290) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1290) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1290) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1290) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1290) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1290) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1290) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1290) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1290) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1290) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1290) CFA_SP SP+-2
          CFI (cfiCond1290) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker1291 Using cfiCommon1
          CFI (cfiPicker1291) NoFunction
          CFI (cfiPicker1291) Picker
        MOV       A,?V0
        MOVX      @DPTR,A
        MOV       DPL,?V4
        MOV       DPH,?V5
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond1282
          CFI EndBlock cfiCond1283
          CFI EndBlock cfiCond1284
          CFI EndBlock cfiCond1285
          CFI EndBlock cfiCond1286
          CFI EndBlock cfiCond1287
          CFI EndBlock cfiCond1288
          CFI EndBlock cfiCond1289
          CFI EndBlock cfiCond1290
          CFI EndBlock cfiPicker1291

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine34:
          CFI Block cfiCond1292 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI Conditional ??CrossCallReturnLabel_81
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1293 Using cfiCommon0
          CFI (cfiCond1293) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1293) Conditional ??CrossCallReturnLabel_82
          CFI (cfiCond1293) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1293) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1293) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1293) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1293) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1293) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1293) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1293) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1293) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1293) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1293) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1293) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1293) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1293) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1293) CFA_SP SP+-2
          CFI (cfiCond1293) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker1294 Using cfiCommon1
          CFI (cfiPicker1294) NoFunction
          CFI (cfiPicker1294) Picker
        LCALL     ?Subroutine105 & 0xFFFF
??CrossCallReturnLabel_229:
        MOV       ?V0,DPL
        MOV       ?V1,DPH
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1292
          CFI EndBlock cfiCond1293
          CFI EndBlock cfiPicker1294

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine105:
          CFI Block cfiCond1295 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
          CFI Conditional ??CrossCallReturnLabel_228
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond1296 Using cfiCommon0
          CFI (cfiCond1296) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond1296) Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_81
          CFI (cfiCond1296) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1296) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1296) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1296) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1296) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1296) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1296) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1296) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1296) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1296) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1296) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1296) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1296) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1296) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1296) CFA_SP SP+-4
          CFI (cfiCond1296) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1297 Using cfiCommon0
          CFI (cfiCond1297) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1297) Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_82
          CFI (cfiCond1297) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1297) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1297) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1297) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1297) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1297) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1297) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1297) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1297) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1297) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1297) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1297) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1297) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1297) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1297) CFA_SP SP+-4
          CFI (cfiCond1297) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker1298 Using cfiCommon1
          CFI (cfiPicker1298) NoFunction
          CFI (cfiPicker1298) Picker
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ?Subroutine138 & 0xFFFF
??CrossCallReturnLabel_282:
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        RET
          CFI EndBlock cfiCond1295
          CFI EndBlock cfiCond1296
          CFI EndBlock cfiCond1297
          CFI EndBlock cfiPicker1298

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine138:
          CFI Block cfiCond1299 Using cfiCommon0
          CFI Function zclClosures_ProcessInDoorLockSetYearDaySchedule
          CFI Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_221, ??CrossCallReturnLabel_57
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1300 Using cfiCommon0
          CFI (cfiCond1300) Function zclClosures_ProcessInDoorLockSetHolidaySchedule
          CFI (cfiCond1300) Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_221, ??CrossCallReturnLabel_58
          CFI (cfiCond1300) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1300) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1300) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1300) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1300) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1300) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1300) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1300) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1300) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1300) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1300) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1300) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1300) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1300) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1300) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1300) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1300) CFA_SP SP+-6
          CFI (cfiCond1300) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1301 Using cfiCommon0
          CFI (cfiCond1301) Function zclClosures_ProcessInDoorLockGetYearDayScheduleRsp
          CFI (cfiCond1301) Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_77
          CFI (cfiCond1301) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1301) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1301) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1301) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1301) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1301) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1301) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1301) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1301) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1301) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1301) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1301) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1301) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1301) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1301) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1301) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1301) CFA_SP SP+-6
          CFI (cfiCond1301) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1302 Using cfiCommon0
          CFI (cfiCond1302) Function zclClosures_ProcessInDoorLockGetHolidayScheduleRsp
          CFI (cfiCond1302) Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_78
          CFI (cfiCond1302) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1302) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1302) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1302) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1302) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1302) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1302) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1302) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1302) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1302) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1302) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1302) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1302) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1302) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1302) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1302) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1302) CFA_SP SP+-6
          CFI (cfiCond1302) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1303 Using cfiCommon0
          CFI (cfiCond1303) Function zclClosures_SendDoorLockGetWeekDayScheduleResponse
          CFI (cfiCond1303) Conditional ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_228
          CFI (cfiCond1303) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1303) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1303) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1303) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1303) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1303) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1303) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1303) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1303) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1303) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1303) CFA_SP SP+-4
          CFI (cfiCond1303) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond1304 Using cfiCommon0
          CFI (cfiCond1304) Function zclClosures_SendDoorLockGetYearDayScheduleResponse
          CFI (cfiCond1304) Conditional ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_81
          CFI (cfiCond1304) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1304) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1304) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1304) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1304) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1304) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1304) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1304) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1304) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1304) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1304) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1304) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1304) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1304) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1304) CFA_SP SP+-6
          CFI (cfiCond1304) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1305 Using cfiCommon0
          CFI (cfiCond1305) Function zclClosures_SendDoorLockGetHolidayScheduleResponse
          CFI (cfiCond1305) Conditional ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_82
          CFI (cfiCond1305) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1305) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1305) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1305) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1305) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1305) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1305) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1305) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1305) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1305) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1305) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1305) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1305) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1305) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1305) CFA_SP SP+-6
          CFI (cfiCond1305) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker1306 Using cfiCommon1
          CFI (cfiPicker1306) NoFunction
          CFI (cfiPicker1306) Picker
        MOVX      A,@DPTR
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond1299
          CFI EndBlock cfiCond1300
          CFI EndBlock cfiCond1301
          CFI EndBlock cfiCond1302
          CFI EndBlock cfiCond1303
          CFI EndBlock cfiCond1304
          CFI EndBlock cfiCond1305
          CFI EndBlock cfiPicker1306
// 3179 
// 3180 /*********************************************************************
// 3181  * @fn      zclClosures_SendDoorLockGetUserTypeResponse
// 3182  *
// 3183  * @brief   Call to send out a Get User Type Response
// 3184  *
// 3185  * @param   srcEP - Sending application's endpoint
// 3186  * @param   dstAddr - where you want the message to go
// 3187  * @param   userID - User ID is between 0 - [# PINs User supported attribute]
// 3188  * @param   userType - Used to indicate what the type is for a specific User ID
// 3189  * @param   disableDefaultRsp - decides default response is necessary or not
// 3190  * @param   seqNum - sequence number of the command packet
// 3191  *
// 3192  * @return  ZStatus_t
// 3193  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3194 ZStatus_t zclClosures_SendDoorLockGetUserTypeResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockGetUserTypeResponse:
          CFI Block cfiBlock1307 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetUserTypeResponse
        CODE
// 3195                                                        uint16 userID, uint8 userType,
// 3196                                                        uint8 disableDefaultRsp, uint8 seqNum )
// 3197 {
        FUNCALL zclClosures_SendDoorLockGetUserTypeResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 3
        MOV       A,#-0x3
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV       A,R1
        MOV       R6,A
// 3198   uint8 payload[PAYLOAD_LEN_GET_USER_TYPE_RSP];
// 3199 
// 3200   payload[0] = LO_UINT16(userID);
        MOV       A,R4
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
// 3201   payload[1] = HI_UINT16(userID);
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R5
        MOVX      @DPTR,A
// 3202   payload[2] = userType;
        MOV       A,#0xd
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ??Subroutine195_0 & 0xFFFF
// 3203 
// 3204   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 3205                           COMMAND_CLOSURES_GET_USER_TYPE_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 3206                           disableDefaultRsp, 0, seqNum, PAYLOAD_LEN_GET_USER_TYPE_RSP, payload );
??CrossCallReturnLabel_495:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       ?V0,#0x3
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_43:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        CLR       A
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_44:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V0,#0x15
          CFI EndBlock cfiBlock1307
        REQUIRE ?Subroutine4
        ; // Fall through to label ?Subroutine4
// 3207 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine4:
          CFI Block cfiBlock1308 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 23)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       A,R6
        MOV       R1,A
        LCALL     ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_514:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV       A,#0x3
          CFI EndBlock cfiBlock1308
        REQUIRE ??Subroutine197_0
        ; // Fall through to label ??Subroutine197_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine197_0:
          CFI Block cfiBlock1309 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Valid
        MOV       R7,#0x2
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock1309
// 3208 
// 3209 /*********************************************************************
// 3210  * @fn      zclClosures_SendDoorLockGetRFIDCodeResponse
// 3211  *
// 3212  * @brief   Call to send out a Get RFID Code Response
// 3213  *
// 3214  * @param   srcEP - Sending application's endpoint
// 3215  * @param   dstAddr - where you want the message to go
// 3216  * @param   pPayload:
// 3217  *           userID - User ID is between 0 - [# PINs User supported attribute]
// 3218  *           userStatus - Used to indicate what the status is for a specific User ID
// 3219  *           userType - Used to indicate what the type is for a specific User ID
// 3220  *           aRfidCode - A ZigBee string indicating the RFID code used to create the event
// 3221  * @param   disableDefaultRsp - decides default response is necessary or not
// 3222  * @param   seqNum - sequence number of the command packet
// 3223  *
// 3224  * @return  ZStatus_t
// 3225  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3226 ZStatus_t zclClosures_SendDoorLockGetRFIDCodeResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockGetRFIDCodeResponse:
          CFI Block cfiBlock1310 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetRFIDCodeResponse
        CODE
// 3227                                                        zclDoorLockGetRFIDCodeRsp_t *pPayload,
// 3228                                                        uint8 disableDefaultRsp, uint8 seqNum )
// 3229 {
        FUNCALL zclClosures_SendDoorLockGetRFIDCodeResponse, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockGetRFIDCodeResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockGetRFIDCodeResponse, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV       A,#-0x14
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        LCALL     ?Subroutine11 & 0xFFFF
// 3230   uint8 i;
// 3231   uint8 *pBuf;  // variable length payload
// 3232   uint8 offset;
// 3233   uint8 calculatedArrayLen;
// 3234   uint8 calculatedBufSize;
// 3235   ZStatus_t status;
// 3236 
// 3237   // first octet of PIN/RFID Code variable string identifies its length
// 3238   calculatedArrayLen = pPayload->pRfidCode[0] + 1;   // add first byte of string
// 3239 
// 3240   // determine total size of buffer
// 3241   calculatedBufSize = calculatedArrayLen + PAYLOAD_LEN_GET_RFID_CODE_RSP;
// 3242 
// 3243   pBuf = zcl_mem_alloc( calculatedBufSize );
// 3244   if ( !pBuf )
??CrossCallReturnLabel_7:
        JNZ       ??zclClosures_SendDoorLockGetRFIDCodeResponse_0
// 3245   {
// 3246     return ( ZMemError );  // no memory
        MOV       R1,#0x10
        SJMP      ??CrossCallReturnLabel_435
// 3247   }
// 3248 
// 3249   // over-the-air is always little endian. Break into a byte stream.
// 3250   pBuf[0] = LO_UINT16(pPayload->userID);
??zclClosures_SendDoorLockGetRFIDCodeResponse_0:
        LCALL     ?Subroutine9 & 0xFFFF
// 3251   pBuf[1] = HI_UINT16(pPayload->userID);
// 3252   pBuf[2] = pPayload->userStatus;
// 3253   pBuf[3] = pPayload->userType;
// 3254   offset = 4;
// 3255   for ( i = 0; i < calculatedArrayLen; i++ )
??CrossCallReturnLabel_3:
        SJMP      ??zclClosures_SendDoorLockGetRFIDCodeResponse_1
// 3256   {
// 3257     pBuf[offset++] = pPayload->pRfidCode[i];
??zclClosures_SendDoorLockGetRFIDCodeResponse_2:
        LCALL     ?Subroutine10 & 0xFFFF
// 3258   }
??CrossCallReturnLabel_472:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_213:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_SendDoorLockGetRFIDCodeResponse_1:
        MOV       A,R0
        CLR       C
        SUBB      A,?V3
        JC        ??zclClosures_SendDoorLockGetRFIDCodeResponse_2
// 3259 
// 3260   status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 3261                             COMMAND_CLOSURES_GET_RFID_CODE_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 3262                             disableDefaultRsp, 0, seqNum, calculatedBufSize, pBuf );
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V6
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       R0,#?V8
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,#0x1a
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_45:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        CLR       A
        MOV       ?V0,A
        MOV       ?V1,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       A,#0x1c
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_46:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       ?V0,#0x17
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        LCALL     ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_500:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        LCALL     ?Subroutine93 & 0xFFFF
// 3263   zcl_mem_free( pBuf );
// 3264   return status;
??CrossCallReturnLabel_435:
          CFI EndBlock cfiBlock1310
        REQUIRE ?Subroutine3
        ; // Fall through to label ?Subroutine3
// 3265 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine3:
          CFI Block cfiBlock1311 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,#0x1
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock1311
        REQUIRE ??Subroutine198_0
        ; // Fall through to label ??Subroutine198_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine198_0:
          CFI Block cfiBlock1312 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0xc
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock1312
// 3266 

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3267 ZStatus_t zclClosures_SendSetTemporaryPinStatusResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendSetTemporaryPinStatusResponse:
          CFI Block cfiBlock1313 Using cfiCommon0
          CFI Function zclClosures_SendSetTemporaryPinStatusResponse
        CODE
// 3268                                                   uint8 status, uint8 disableDefaultRsp, uint8 seqNum )
// 3269 {
        FUNCALL zclClosures_SendSetTemporaryPinStatusResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV       A,R1
        MOV       R6,A
        MOV       A,R4
// 3270   uint8 payload[1];   // 1 byte payload
// 3271 
// 3272   payload[0] = status;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ??Subroutine199_0 & 0xFFFF
// 3273 
// 3274   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 3275                           COMMAND_CLOSURES_SET_TEMPORARY_PIN_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 3276                           disableDefaultRsp, 0, seqNum, sizeof( payload ), payload );
??CrossCallReturnLabel_522:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       ?V2,#0x1
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       A,#0x11
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_75:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,R5
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V1,#0x1a
        LJMP      ??Subroutine185_0 & 0xFFFF
// 3277 }
          CFI EndBlock cfiBlock1313

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine64:
          CFI Block cfiCond1314 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockHolidayScheduleRequest
          CFI Conditional ??CrossCallReturnLabel_517
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1315 Using cfiCommon0
          CFI (cfiCond1315) Function zclClosures_SendDoorLockStatusResponse
          CFI (cfiCond1315) Conditional ??CrossCallReturnLabel_518
          CFI (cfiCond1315) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1315) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1315) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1315) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1315) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1315) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1315) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1315) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1315) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1315) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1315) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1315) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1315) CFA_SP SP+-2
          CFI (cfiCond1315) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker1316 Using cfiCommon1
          CFI (cfiPicker1316) NoFunction
          CFI (cfiPicker1316) Picker
        MOV       A,R1
        MOV       R6,A
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,R5
          CFI EndBlock cfiCond1314
          CFI EndBlock cfiCond1315
          CFI EndBlock cfiPicker1316
        REQUIRE ??Subroutine199_0
        ; // Fall through to label ??Subroutine199_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine199_0:
          CFI Block cfiCond1317 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockUserIDRequest
          CFI Conditional ??CrossCallReturnLabel_519
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1318 Using cfiCommon0
          CFI (cfiCond1318) Function zclClosures_SendDoorLockSetWeekDayScheduleRequest
          CFI (cfiCond1318) Conditional ??CrossCallReturnLabel_520
          CFI (cfiCond1318) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1318) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1318) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1318) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1318) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1318) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1318) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1318) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1318) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1318) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1318) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1318) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1318) CFA_SP SP+-2
          CFI (cfiCond1318) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1319 Using cfiCommon0
          CFI (cfiCond1319) Function zclClosures_SendDoorLockScheduleRequest
          CFI (cfiCond1319) Conditional ??CrossCallReturnLabel_521
          CFI (cfiCond1319) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1319) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1319) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1319) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1319) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1319) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1319) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1319) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1319) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1319) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1319) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1319) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1319) CFA_SP SP+-2
          CFI (cfiCond1319) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1320 Using cfiCommon0
          CFI (cfiCond1320) Function zclClosures_SendSetTemporaryPinStatusResponse
          CFI (cfiCond1320) Conditional ??CrossCallReturnLabel_522
          CFI (cfiCond1320) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1320) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1320) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1320) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1320) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1320) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1320) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1320) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1320) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1320) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1320) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1320) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1320) CFA_SP SP+-2
          CFI (cfiCond1320) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1321 Using cfiCommon0
          CFI (cfiCond1321) Function zclClosures_SendModifyPinStatusResponse
          CFI (cfiCond1321) Conditional ??CrossCallReturnLabel_523
          CFI (cfiCond1321) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1321) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1321) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1321) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1321) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1321) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1321) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1321) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1321) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1321) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1321) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1321) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1321) CFA_SP SP+-2
          CFI (cfiCond1321) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1322 Using cfiCommon0
          CFI (cfiCond1322) Function zclClosures_SendDoorLockHolidayScheduleRequest
          CFI (cfiCond1322) Conditional ??CrossCallReturnLabel_517
          CFI (cfiCond1322) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1322) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1322) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1322) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1322) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1322) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1322) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1322) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1322) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1322) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1322) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1322) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1322) CFA_SP SP+-2
          CFI (cfiCond1322) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1323 Using cfiCommon0
          CFI (cfiCond1323) Function zclClosures_SendDoorLockStatusResponse
          CFI (cfiCond1323) Conditional ??CrossCallReturnLabel_518
          CFI (cfiCond1323) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1323) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1323) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1323) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1323) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1323) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1323) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1323) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1323) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1323) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1323) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1323) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1323) CFA_SP SP+-2
          CFI (cfiCond1323) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker1324 Using cfiCommon1
          CFI (cfiPicker1324) NoFunction
          CFI (cfiPicker1324) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,?XSP + 0
        MOV       R1,?XSP + 1
        MOV       ?V2,R0
        MOV       ?V3,R1
        MOV       R0,#?V2
        RET
          CFI EndBlock cfiCond1317
          CFI EndBlock cfiCond1318
          CFI EndBlock cfiCond1319
          CFI EndBlock cfiCond1320
          CFI EndBlock cfiCond1321
          CFI EndBlock cfiCond1322
          CFI EndBlock cfiCond1323
          CFI EndBlock cfiPicker1324
// 3278 

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3279 ZStatus_t zclClosures_SendModifyPinStatusResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendModifyPinStatusResponse:
          CFI Block cfiBlock1325 Using cfiCommon0
          CFI Function zclClosures_SendModifyPinStatusResponse
        CODE
// 3280                                                   uint8 status, uint8 disableDefaultRsp, uint8 seqNum )
// 3281 {
        FUNCALL zclClosures_SendModifyPinStatusResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV       A,R1
        MOV       R6,A
        MOV       A,R4
// 3282   uint8 payload[1];   // 1 byte payload
// 3283 
// 3284   payload[0] = status;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ??Subroutine199_0 & 0xFFFF
// 3285 
// 3286   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 3287                           COMMAND_CLOSURES_MODIFY_PIN_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 3288                           disableDefaultRsp, 0, seqNum, sizeof( payload ), payload );
??CrossCallReturnLabel_523:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       ?V2,#0x1
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       A,#0x11
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_76:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,R5
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V1,#0x1b
        LJMP      ??Subroutine185_0 & 0xFFFF
// 3289 }
          CFI EndBlock cfiBlock1325
// 3290 
// 3291 /*********************************************************************
// 3292  * @fn      zclClosures_SendDoorLockOperationEventNotification
// 3293  *
// 3294  * @brief   Call to send out a Operation Event Notification
// 3295  *
// 3296  * @param   srcEP - Sending application's endpoint
// 3297  * @param   dstAddr - where you want the message to go
// 3298  * @param   pPayload:
// 3299  *           operationEventSource - Indicates where the event was triggered from
// 3300  *           operationEventCode - (Optional) a notification whenever there is a significant operation event on the lock
// 3301  *           userID - User ID is between 0 - [# PINs User supported attribute]
// 3302  *           pin - The PIN that is associated with the User ID who performed the event
// 3303  *           zigBeeLocalTime - Indicates when the event is triggered
// 3304  *           aData - Used to pass data associated with a particular event
// 3305  * @param   disableDefaultRsp - decides default response is necessary or not
// 3306  * @param   seqNum - sequence number of the command packet
// 3307  *
// 3308  * @return  ZStatus_t
// 3309  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3310 ZStatus_t zclClosures_SendDoorLockOperationEventNotification( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockOperationEventNotification:
          CFI Block cfiBlock1326 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockOperationEventNotification
        CODE
// 3311                                                               zclDoorLockOperationEventNotification_t *pPayload,
// 3312                                                               uint8 disableDefaultRsp, uint8 seqNum )
// 3313 {
        FUNCALL zclClosures_SendDoorLockOperationEventNotification, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockOperationEventNotification, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockOperationEventNotification, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV       A,#-0x16
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 0
        MOV       ?V7,R1
        MOV       ?V12,R2
        MOV       ?V13,R3
        MOV       A,R4
        MOV       R6,A
        MOV       A,R5
        MOV       R7,A
// 3314   uint8 i;
// 3315   uint8 *pBuf;  // variable length payload
// 3316   uint8 offset;
// 3317   uint8 calculatedArrayLen;
// 3318   uint16 calculatedBufSize;
// 3319   ZStatus_t status;
// 3320 
// 3321   // set variable length if data is available
// 3322   calculatedArrayLen = pPayload->pData[0] + 1; // add first byte of string
        MOV       A,R4
        ADD       A,#0x9
        LCALL     ?Subroutine48 & 0xFFFF
// 3323 
// 3324   // determine total size of buffer
// 3325   calculatedBufSize = calculatedArrayLen + PAYLOAD_LEN_OPERATION_EVENT_NOTIFICATION;
??CrossCallReturnLabel_109:
        ADD       A,#0x9
        LCALL     ?Subroutine88 & 0xFFFF
// 3326 
// 3327   pBuf = zcl_mem_alloc( calculatedBufSize );
// 3328   if ( !pBuf )
??CrossCallReturnLabel_524:
        JNZ       ??zclClosures_SendDoorLockOperationEventNotific_1
// 3329   {
// 3330     return ( ZMemError );  // no memory
        MOV       R1,#0x10
        LJMP      ??CrossCallReturnLabel_438 & 0xFFFF
// 3331   }
// 3332 
// 3333   // over-the-air is always little endian. Break into a byte stream.
// 3334   pBuf[0] = pPayload->operationEventSource;
??zclClosures_SendDoorLockOperationEventNotific_1:
        LCALL     ?Subroutine18 & 0xFFFF
// 3335   pBuf[1] = pPayload->operationEventCode;
// 3336   pBuf[2] = LO_UINT16( pPayload->userID );
// 3337   pBuf[3] = HI_UINT16( pPayload->userID );
// 3338   pBuf[4] = pPayload->pin;
// 3339   pBuf[5] = BREAK_UINT32(pPayload->zigBeeLocalTime, 0);
??CrossCallReturnLabel_16:
        MOV       A,R6
        ADD       A,#0x5
        LCALL     ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_207:
        LCALL     ?L_MOV_X
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ??Subroutine202_0 & 0xFFFF
// 3340   pBuf[6] = BREAK_UINT32(pPayload->zigBeeLocalTime, 1);
??CrossCallReturnLabel_531:
        LCALL     ?L_MOV_X
        MOV       A,?V9
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine203_0 & 0xFFFF
// 3341   pBuf[7] = BREAK_UINT32(pPayload->zigBeeLocalTime, 2);
??CrossCallReturnLabel_532:
        LCALL     ?L_MOV_X
        MOV       A,#0x10
        MOV       R0,#?V8
        LCALL     ?UL_SHR
        LCALL     ?Subroutine69 & 0xFFFF
// 3342   pBuf[8] = BREAK_UINT32(pPayload->zigBeeLocalTime, 3);
??CrossCallReturnLabel_528:
        LCALL     ?L_MOV_X
        MOV       A,#0x18
        MOV       R0,#?V8
        LCALL     ?UL_SHR
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V8
        MOVX      @DPTR,A
// 3343   offset = 9;
        MOV       R1,#0x9
// 3344   for ( i = 0; i < calculatedArrayLen; i++ )
        MOV       R0,#0x0
        SJMP      ??zclClosures_SendDoorLockOperationEventNotific_2
// 3345   {
// 3346     pBuf[offset++] = pPayload->pData[i];
??zclClosures_SendDoorLockOperationEventNotific_3:
        LCALL     ?Subroutine10 & 0xFFFF
// 3347   }
??CrossCallReturnLabel_473:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_215:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_SendDoorLockOperationEventNotific_2:
        MOV       A,R0
        CLR       C
        SUBB      A,?V6
        JC        ??zclClosures_SendDoorLockOperationEventNotific_3
// 3348 
// 3349   status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 3350                             COMMAND_CLOSURES_OPERATION_EVENT_NOTIFICATION, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 3351                             disableDefaultRsp, 0, seqNum, calculatedBufSize, pBuf );
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       A,#0x1b
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_103:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        CLR       A
        MOV       ?V2,A
        MOV       ?V3,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       A,#0x1d
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_104:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       ?V2,#0x1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV       ?V2,#0x20
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       R2,?V12
        MOV       R3,?V13
        MOV       R1,?V7
        LCALL     ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_515:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,R1
        MOV       R6,A
// 3352   zcl_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     ??Subroutine182_0 & 0xFFFF
// 3353   return status;
??CrossCallReturnLabel_438:
        LJMP      ??Subroutine192_0 & 0xFFFF
// 3354 }
          CFI EndBlock cfiBlock1326

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine96:
          CFI Block cfiCond1327 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI Conditional ??CrossCallReturnLabel_214
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1328 Using cfiCommon0
          CFI (cfiCond1328) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1328) Conditional ??CrossCallReturnLabel_215
          CFI (cfiCond1328) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1328) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1328) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1328) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1328) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1328) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1328) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1328) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1328) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1328) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1328) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1328) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1328) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1328) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1328) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1328) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1328) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1328) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1328) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1328) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1328) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1328) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1328) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1329 Using cfiCommon0
          CFI (cfiCond1329) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1329) Conditional ??CrossCallReturnLabel_216
          CFI (cfiCond1329) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1329) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1329) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1329) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1329) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1329) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1329) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1329) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1329) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1329) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1329) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1329) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1329) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1329) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1329) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1329) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1329) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1329) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1329) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1329) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1329) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1329) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1329) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1330 Using cfiCommon1
          CFI (cfiPicker1330) NoFunction
          CFI (cfiPicker1330) Picker
        MOV       A,R1
        MOV       R2,A
        MOV       A,?V0
        ADD       A,R2
        MOV       DPL,A
        CLR       A
        ADDC      A,?V1
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond1327
          CFI EndBlock cfiCond1328
          CFI EndBlock cfiCond1329
          CFI EndBlock cfiPicker1330

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine88:
          CFI Block cfiCond1331 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_524
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1332 Using cfiCommon0
          CFI (cfiCond1332) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1332) Conditional ??CrossCallReturnLabel_525
          CFI (cfiCond1332) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1332) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1332) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1332) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1332) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1332) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1332) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1332) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1332) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1332) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1332) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1332) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1332) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1332) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1332) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1332) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1332) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1332) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1332) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1332) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1332) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1332) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1332) CFA_SP SP+-2
          CFI (cfiCond1332) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1333 Using cfiCommon1
          CFI (cfiPicker1333) NoFunction
          CFI (cfiPicker1333) Picker
        MOV       ?V2,A
        CLR       A
        ADDC      A,#0x0
        MOV       ?V3,A
        ; Setup parameters for call to function osal_mem_alloc
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,?V2
        MOV       R3,A
          CFI EndBlock cfiCond1331
          CFI EndBlock cfiCond1332
          CFI EndBlock cfiPicker1333
        REQUIRE ??Subroutine200_0
        ; // Fall through to label ??Subroutine200_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine200_0:
          CFI Block cfiCond1334 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockRequest
          CFI Conditional ??CrossCallReturnLabel_526
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1335 Using cfiCommon0
          CFI (cfiCond1335) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1335) Conditional ??CrossCallReturnLabel_527
          CFI (cfiCond1335) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1335) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1335) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1335) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1335) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1335) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1335) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1335) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1335) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1335) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1335) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1335) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1335) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1335) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1335) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1335) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1335) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1335) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1335) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1335) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1335) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1335) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1335) CFA_SP SP+-2
          CFI (cfiCond1335) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1336 Using cfiCommon0
          CFI (cfiCond1336) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1336) Conditional ??CrossCallReturnLabel_524
          CFI (cfiCond1336) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1336) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1336) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1336) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1336) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1336) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1336) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1336) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1336) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1336) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1336) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1336) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1336) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1336) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1336) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1336) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1336) CFA_SP SP+-2
          CFI (cfiCond1336) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1337 Using cfiCommon0
          CFI (cfiCond1337) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1337) Conditional ??CrossCallReturnLabel_525
          CFI (cfiCond1337) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1337) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1337) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1337) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1337) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1337) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1337) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1337) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1337) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1337) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1337) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1337) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1337) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1337) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1337) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1337) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1337) CFA_SP SP+-2
          CFI (cfiCond1337) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1338 Using cfiCommon1
          CFI (cfiPicker1338) NoFunction
          CFI (cfiPicker1338) Picker
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       A,R2
        ORL       A,R3
        RET
          CFI EndBlock cfiCond1334
          CFI EndBlock cfiCond1335
          CFI EndBlock cfiCond1336
          CFI EndBlock cfiCond1337
          CFI EndBlock cfiPicker1338

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine46:
          CFI Block cfiCond1339 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI Conditional ??CrossCallReturnLabel_101
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1340 Using cfiCommon0
          CFI (cfiCond1340) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1340) Conditional ??CrossCallReturnLabel_102
          CFI (cfiCond1340) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1340) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1340) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1340) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1340) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1340) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1340) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1340) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1340) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1340) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1340) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1340) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1340) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1340) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1340) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1340) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1340) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1340) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1340) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1340) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1340) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1340) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1340) CFA_SP SP+-2
          CFI (cfiCond1340) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond1341 Using cfiCommon0
          CFI (cfiCond1341) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1341) Conditional ??CrossCallReturnLabel_103
          CFI (cfiCond1341) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1341) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1341) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1341) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1341) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1341) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1341) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1341) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1341) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1341) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1341) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1341) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1341) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1341) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1341) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1341) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1341) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1341) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1341) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1341) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1341) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1341) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1341) CFA_SP SP+-2
          CFI (cfiCond1341) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1342 Using cfiCommon0
          CFI (cfiCond1342) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1342) Conditional ??CrossCallReturnLabel_104
          CFI (cfiCond1342) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1342) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1342) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1342) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1342) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1342) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1342) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1342) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1342) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1342) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1342) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1342) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1342) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1342) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1342) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1342) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1342) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1342) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1342) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1342) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1342) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1342) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1342) CFA_SP SP+-2
          CFI (cfiCond1342) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1343 Using cfiCommon0
          CFI (cfiCond1343) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1343) Conditional ??CrossCallReturnLabel_105
          CFI (cfiCond1343) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1343) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1343) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1343) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1343) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1343) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1343) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1343) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1343) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1343) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1343) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1343) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1343) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1343) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1343) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1343) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1343) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1343) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1343) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1343) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1343) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1343) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1343) CFA_SP SP+-2
          CFI (cfiCond1343) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1344 Using cfiCommon0
          CFI (cfiCond1344) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1344) Conditional ??CrossCallReturnLabel_106
          CFI (cfiCond1344) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1344) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1344) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1344) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1344) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1344) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1344) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1344) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1344) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1344) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1344) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1344) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1344) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1344) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1344) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1344) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1344) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1344) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1344) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1344) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1344) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1344) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1344) CFA_SP SP+-2
          CFI (cfiCond1344) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker1345 Using cfiCommon1
          CFI (cfiPicker1345) NoFunction
          CFI (cfiPicker1345) Picker
        MOVX      A,@DPTR
        MOV       ?V2,A
        MOV       R0,#?V2
        RET
          CFI EndBlock cfiCond1339
          CFI EndBlock cfiCond1340
          CFI EndBlock cfiCond1341
          CFI EndBlock cfiCond1342
          CFI EndBlock cfiCond1343
          CFI EndBlock cfiCond1344
          CFI EndBlock cfiPicker1345
// 3355 
// 3356 /*********************************************************************
// 3357  * @fn      zclClosures_SendDoorLockProgrammingEventNotification
// 3358  *
// 3359  * @brief   Call to send out a Programming Event Notification
// 3360  *
// 3361  * @param   srcEP - Sending application's endpoint
// 3362  * @param   dstAddr - where you want the message to go
// 3363  * @param   pPayload:
// 3364  *           programEventSource - Indicates where the event was triggered from
// 3365  *           programEventCode - (Optional) a notification whenever there is a significant programming event on the lock
// 3366  *           userID - User ID is between 0 - [# PINs User supported attribute]
// 3367  *           pin - The PIN that is associated with the User ID who performed the event
// 3368  *           userType - Used to indicate what the type is for a specific User ID
// 3369  *           userStatus - Used to indicate what the status is for a specific User ID
// 3370  *           zigBeeLocalTime - Indicates when the event is triggered
// 3371  *           dataLen - Manufacture specific, describes length of aData
// 3372  *           aData - Used to pass data associated with a particular event
// 3373  * @param   disableDefaultRsp - decides default response is necessary or not
// 3374  * @param   seqNum - sequence number of the command packet
// 3375  *
// 3376  * @return  ZStatus_t
// 3377  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3378 ZStatus_t zclClosures_SendDoorLockProgrammingEventNotification( uint8 srcEP, afAddrType_t *dstAddr,
zclClosures_SendDoorLockProgrammingEventNotification:
          CFI Block cfiBlock1346 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockProgrammingEventNotification
        CODE
// 3379                                                                 zclDoorLockProgrammingEventNotification_t *pPayload,
// 3380                                                                 uint8 disableDefaultRsp, uint8 seqNum )
// 3381 {
        FUNCALL zclClosures_SendDoorLockProgrammingEventNotification, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockProgrammingEventNotification, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclClosures_SendDoorLockProgrammingEventNotification, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV       A,#-0x16
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 0
        MOV       ?V7,R1
        MOV       ?V12,R2
        MOV       ?V13,R3
        MOV       A,R4
        MOV       R6,A
        MOV       A,R5
        MOV       R7,A
// 3382   uint8 i;
// 3383   uint8 *pBuf;  // variable length payload
// 3384   uint8 offset;
// 3385   uint8 calculatedArrayLen;
// 3386   uint16 calculatedBufSize;
// 3387   ZStatus_t status;
// 3388 
// 3389   // set variable length if data is available
// 3390   calculatedArrayLen = pPayload->pData[0] + 1;  // add first byte of string
        MOV       A,R4
        ADD       A,#0xb
        LCALL     ?Subroutine48 & 0xFFFF
// 3391 
// 3392   // determine total size of buffer
// 3393   calculatedBufSize = calculatedArrayLen + PAYLOAD_LEN_PROGRAMMING_EVENT_NOTIFICATION;
??CrossCallReturnLabel_110:
        ADD       A,#0xb
        LCALL     ?Subroutine88 & 0xFFFF
// 3394 
// 3395   pBuf = zcl_mem_alloc( calculatedBufSize );
// 3396   if ( !pBuf )
??CrossCallReturnLabel_525:
        JNZ       ??zclClosures_SendDoorLockProgrammingEventNotif_1
// 3397   {
// 3398     return ( ZMemError );  // no memory
        MOV       R1,#0x10
        LJMP      ??CrossCallReturnLabel_439 & 0xFFFF
// 3399   }
// 3400 
// 3401   // over-the-air is always little endian. Break into a byte stream.
// 3402   pBuf[0] = pPayload->programEventSource;
??zclClosures_SendDoorLockProgrammingEventNotif_1:
        LCALL     ?Subroutine18 & 0xFFFF
// 3403   pBuf[1] = pPayload->programEventCode;
// 3404   pBuf[2] = LO_UINT16( pPayload->userID );
// 3405   pBuf[3] = HI_UINT16( pPayload->userID );
// 3406   pBuf[4] = pPayload->pin;
// 3407   pBuf[5] = pPayload->userType;
??CrossCallReturnLabel_17:
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_118:
        LCALL     ?Subroutine81 & 0xFFFF
// 3408   pBuf[6] = pPayload->userStatus;
??CrossCallReturnLabel_182:
        LCALL     ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_119:
        INC       DPTR
        MOVX      @DPTR,A
// 3409   pBuf[7] = BREAK_UINT32(pPayload->zigBeeLocalTime, 0);
        MOV       A,R6
        ADD       A,#0x7
        LCALL     ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_208:
        LCALL     ?L_MOV_X
        LCALL     ?Subroutine69 & 0xFFFF
// 3410   pBuf[8] = BREAK_UINT32(pPayload->zigBeeLocalTime, 1);
??CrossCallReturnLabel_529:
        LCALL     ?L_MOV_X
        MOV       A,?V9
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine203_0 & 0xFFFF
// 3411   pBuf[9] = BREAK_UINT32(pPayload->zigBeeLocalTime, 2);
??CrossCallReturnLabel_533:
        LCALL     ?L_MOV_X
        MOV       A,#0x10
        MOV       R0,#?V8
        LCALL     ?UL_SHR
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine201_0 & 0xFFFF
// 3412   pBuf[10] = BREAK_UINT32(pPayload->zigBeeLocalTime, 3);
??CrossCallReturnLabel_530:
        LCALL     ?L_MOV_X
        MOV       A,#0x18
        MOV       R0,#?V8
        LCALL     ?UL_SHR
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V8
        MOVX      @DPTR,A
// 3413   offset = 11;
        MOV       R1,#0xb
// 3414   for ( i = 0; i < calculatedArrayLen; i++ )
        MOV       R0,#0x0
        SJMP      ??zclClosures_SendDoorLockProgrammingEventNotif_2
// 3415   {
// 3416     pBuf[offset++] = pPayload->pData[i];
??zclClosures_SendDoorLockProgrammingEventNotif_3:
        LCALL     ?Subroutine10 & 0xFFFF
// 3417   }
??CrossCallReturnLabel_474:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_216:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R1
        INC       R0
??zclClosures_SendDoorLockProgrammingEventNotif_2:
        MOV       A,R0
        CLR       C
        SUBB      A,?V6
        JC        ??zclClosures_SendDoorLockProgrammingEventNotif_3
// 3418 
// 3419   status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
// 3420                             COMMAND_CLOSURES_PROGRAMMING_EVENT_NOTIFICATION, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 3421                             disableDefaultRsp, 0, seqNum, calculatedBufSize, pBuf );
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       A,#0x1b
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_105:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        CLR       A
        MOV       ?V2,A
        MOV       ?V3,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       A,#0x1d
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_106:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       ?V2,#0x1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV       ?V2,#0x21
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       R4,#0x1
        MOV       R5,#0x1
        MOV       R2,?V12
        MOV       R3,?V13
        MOV       R1,?V7
        LCALL     ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_516:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,R1
        MOV       R6,A
// 3422   zcl_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     ??Subroutine182_0 & 0xFFFF
// 3423   return status;
??CrossCallReturnLabel_439:
        LJMP      ??Subroutine192_0 & 0xFFFF
// 3424 }
          CFI EndBlock cfiBlock1346

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine94:
          CFI Block cfiCond1347 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_207
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1348 Using cfiCommon0
          CFI (cfiCond1348) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1348) Conditional ??CrossCallReturnLabel_208
          CFI (cfiCond1348) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1348) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1348) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1348) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1348) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1348) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1348) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1348) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1348) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1348) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1348) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1348) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1348) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1348) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1348) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1348) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1348) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1348) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1348) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1348) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1348) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1348) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1348) CFA_SP SP+-2
          CFI (cfiCond1348) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1349 Using cfiCommon1
          CFI (cfiPicker1349) NoFunction
          CFI (cfiPicker1349) Picker
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        MOV       DPL,R2
        MOV       DPH,A
        MOV       R0,#?V8
        RET
          CFI EndBlock cfiCond1347
          CFI EndBlock cfiCond1348
          CFI EndBlock cfiPicker1349

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine81:
          CFI Block cfiCond1350 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI Conditional ??CrossCallReturnLabel_180
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1351 Using cfiCommon0
          CFI (cfiCond1351) Function zclClosures_SendDoorLockGetLogRecordResponse
          CFI (cfiCond1351) Conditional ??CrossCallReturnLabel_181
          CFI (cfiCond1351) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1351) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1351) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1351) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1351) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1351) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1351) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1351) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1351) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1351) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1351) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1351) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1351) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1351) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1351) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1351) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1351) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1351) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1351) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1351) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1351) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1351) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1351) CFA_SP SP+-2
          CFI (cfiCond1351) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond1352 Using cfiCommon0
          CFI (cfiCond1352) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1352) Conditional ??CrossCallReturnLabel_182
          CFI (cfiCond1352) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1352) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1352) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1352) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1352) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1352) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1352) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1352) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1352) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1352) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1352) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1352) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1352) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1352) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1352) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1352) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1352) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1352) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1352) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1352) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1352) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1352) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1352) CFA_SP SP+-2
          CFI (cfiCond1352) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1353 Using cfiCommon1
          CFI (cfiPicker1353) NoFunction
          CFI (cfiPicker1353) Picker
        LCALL     ?Subroutine121 & 0xFFFF
??CrossCallReturnLabel_253:
        INC       DPTR
        RET
          CFI EndBlock cfiCond1350
          CFI EndBlock cfiCond1351
          CFI EndBlock cfiCond1352
          CFI EndBlock cfiPicker1353

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine69:
          CFI Block cfiCond1354 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_528
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1355 Using cfiCommon0
          CFI (cfiCond1355) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1355) Conditional ??CrossCallReturnLabel_529
          CFI (cfiCond1355) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1355) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1355) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1355) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1355) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1355) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1355) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1355) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1355) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1355) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1355) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1355) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1355) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1355) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1355) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1355) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1355) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1355) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1355) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1355) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1355) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1355) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1355) CFA_SP SP+-2
          CFI (cfiCond1355) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1356 Using cfiCommon1
          CFI (cfiPicker1356) NoFunction
          CFI (cfiPicker1356) Picker
        MOV       DPL,?V0
        MOV       DPH,?V1
          CFI EndBlock cfiCond1354
          CFI EndBlock cfiCond1355
          CFI EndBlock cfiPicker1356
        REQUIRE ??Subroutine201_0
        ; // Fall through to label ??Subroutine201_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine201_0:
          CFI Block cfiCond1357 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI Conditional ??CrossCallReturnLabel_530
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1358 Using cfiCommon0
          CFI (cfiCond1358) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1358) Conditional ??CrossCallReturnLabel_528
          CFI (cfiCond1358) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1358) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1358) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1358) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1358) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1358) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1358) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1358) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1358) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1358) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1358) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1358) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1358) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1358) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1358) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1358) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1358) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1358) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1358) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1358) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1358) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1358) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1358) CFA_SP SP+-2
          CFI (cfiCond1358) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1359 Using cfiCommon0
          CFI (cfiCond1359) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1359) Conditional ??CrossCallReturnLabel_529
          CFI (cfiCond1359) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1359) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1359) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1359) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1359) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1359) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1359) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1359) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1359) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1359) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1359) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1359) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1359) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1359) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1359) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1359) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1359) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1359) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1359) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1359) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1359) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1359) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1359) CFA_SP SP+-2
          CFI (cfiCond1359) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1360 Using cfiCommon1
          CFI (cfiPicker1360) NoFunction
          CFI (cfiPicker1360) Picker
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond1357
          CFI EndBlock cfiCond1358
          CFI EndBlock cfiCond1359
          CFI EndBlock cfiPicker1360
        REQUIRE ??Subroutine202_0
        ; // Fall through to label ??Subroutine202_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine202_0:
          CFI Block cfiCond1361 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_531
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1362 Using cfiCommon0
          CFI (cfiCond1362) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1362) Conditional ??CrossCallReturnLabel_530
          CFI (cfiCond1362) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1362) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1362) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1362) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1362) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1362) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1362) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1362) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1362) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1362) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1362) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1362) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1362) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1362) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1362) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1362) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1362) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1362) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1362) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1362) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1362) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1362) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1362) CFA_SP SP+-2
          CFI (cfiCond1362) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1363 Using cfiCommon0
          CFI (cfiCond1363) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1363) Conditional ??CrossCallReturnLabel_528
          CFI (cfiCond1363) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1363) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1363) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1363) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1363) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1363) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1363) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1363) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1363) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1363) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1363) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1363) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1363) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1363) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1363) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1363) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1363) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1363) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1363) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1363) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1363) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1363) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1363) CFA_SP SP+-2
          CFI (cfiCond1363) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1364 Using cfiCommon0
          CFI (cfiCond1364) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1364) Conditional ??CrossCallReturnLabel_529
          CFI (cfiCond1364) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1364) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1364) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1364) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1364) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1364) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1364) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1364) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1364) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1364) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1364) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1364) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1364) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1364) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1364) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1364) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1364) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1364) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1364) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1364) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1364) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1364) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1364) CFA_SP SP+-2
          CFI (cfiCond1364) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1365 Using cfiCommon1
          CFI (cfiPicker1365) NoFunction
          CFI (cfiPicker1365) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V8
          CFI EndBlock cfiCond1361
          CFI EndBlock cfiCond1362
          CFI EndBlock cfiCond1363
          CFI EndBlock cfiCond1364
          CFI EndBlock cfiPicker1365
        REQUIRE ??Subroutine203_0
        ; // Fall through to label ??Subroutine203_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine203_0:
          CFI Block cfiCond1366 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_532
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1367 Using cfiCommon0
          CFI (cfiCond1367) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1367) Conditional ??CrossCallReturnLabel_533
          CFI (cfiCond1367) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1367) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1367) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1367) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1367) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1367) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1367) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1367) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1367) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1367) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1367) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1367) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1367) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1367) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1367) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1367) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1367) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1367) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1367) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1367) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1367) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1367) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1367) CFA_SP SP+-2
          CFI (cfiCond1367) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1368 Using cfiCommon0
          CFI (cfiCond1368) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1368) Conditional ??CrossCallReturnLabel_531
          CFI (cfiCond1368) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1368) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1368) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1368) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1368) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1368) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1368) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1368) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1368) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1368) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1368) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1368) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1368) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1368) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1368) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1368) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1368) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1368) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1368) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1368) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1368) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1368) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1368) CFA_SP SP+-2
          CFI (cfiCond1368) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1369 Using cfiCommon0
          CFI (cfiCond1369) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1369) Conditional ??CrossCallReturnLabel_530
          CFI (cfiCond1369) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1369) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1369) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1369) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1369) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1369) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1369) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1369) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1369) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1369) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1369) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1369) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1369) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1369) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1369) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1369) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1369) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1369) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1369) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1369) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1369) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1369) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1369) CFA_SP SP+-2
          CFI (cfiCond1369) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1370 Using cfiCommon0
          CFI (cfiCond1370) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1370) Conditional ??CrossCallReturnLabel_528
          CFI (cfiCond1370) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1370) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1370) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1370) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1370) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1370) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1370) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1370) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1370) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1370) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1370) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1370) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1370) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1370) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1370) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1370) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1370) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1370) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1370) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1370) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1370) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1370) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1370) CFA_SP SP+-2
          CFI (cfiCond1370) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1371 Using cfiCommon0
          CFI (cfiCond1371) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1371) Conditional ??CrossCallReturnLabel_529
          CFI (cfiCond1371) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1371) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1371) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1371) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1371) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1371) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1371) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1371) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1371) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1371) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1371) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1371) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1371) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1371) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1371) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1371) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1371) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1371) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1371) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1371) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1371) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1371) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1371) CFA_SP SP+-2
          CFI (cfiCond1371) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1372 Using cfiCommon1
          CFI (cfiPicker1372) NoFunction
          CFI (cfiPicker1372) Picker
        LCALL     ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_537:
        MOV       R0,#?V8
        RET
          CFI EndBlock cfiCond1366
          CFI EndBlock cfiCond1367
          CFI EndBlock cfiCond1368
          CFI EndBlock cfiCond1369
          CFI EndBlock cfiCond1370
          CFI EndBlock cfiCond1371
          CFI EndBlock cfiPicker1372

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine54:
          CFI Block cfiCond1373 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI Conditional ??CrossCallReturnLabel_118
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1374 Using cfiCommon0
          CFI (cfiCond1374) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1374) Conditional ??CrossCallReturnLabel_119
          CFI (cfiCond1374) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1374) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1374) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1374) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1374) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1374) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1374) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1374) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1374) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1374) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1374) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1374) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1374) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1374) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1374) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1374) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1374) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1374) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1374) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1374) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1374) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1374) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1374) CFA_SP SP+-2
          CFI (cfiCond1374) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1375 Using cfiCommon1
          CFI (cfiPicker1375) NoFunction
          CFI (cfiPicker1375) Picker
        INC       DPTR
        LCALL     ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_243:
        INC       DPTR
        RET
          CFI EndBlock cfiCond1373
          CFI EndBlock cfiCond1374
          CFI EndBlock cfiPicker1375

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine48:
          CFI Block cfiCond1376 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_109
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1377 Using cfiCommon0
          CFI (cfiCond1377) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1377) Conditional ??CrossCallReturnLabel_110
          CFI (cfiCond1377) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1377) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1377) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1377) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1377) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1377) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1377) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1377) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1377) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1377) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1377) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1377) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1377) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1377) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1377) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1377) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1377) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1377) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1377) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1377) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1377) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1377) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1377) CFA_SP SP+-2
          CFI (cfiCond1377) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1378 Using cfiCommon1
          CFI (cfiPicker1378) NoFunction
          CFI (cfiPicker1378) Picker
        MOV       ?V4,A
        CLR       A
        ADDC      A,R7
        MOV       ?V5,A
        MOV       DPL,?V4
        LCALL     ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_478:
        MOV       ?V6,A
        RET
          CFI EndBlock cfiCond1376
          CFI EndBlock cfiCond1377
          CFI EndBlock cfiPicker1378

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine18:
          CFI Block cfiCond1379 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockOperationEventNotification
          CFI Conditional ??CrossCallReturnLabel_16
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1380 Using cfiCommon0
          CFI (cfiCond1380) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1380) Conditional ??CrossCallReturnLabel_17
          CFI (cfiCond1380) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1380) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1380) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1380) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1380) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1380) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1380) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1380) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1380) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1380) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1380) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1380) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1380) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1380) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1380) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1380) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1380) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1380) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1380) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1380) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1380) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1380) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1380) CFA_SP SP+-2
          CFI (cfiCond1380) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1381 Using cfiCommon1
          CFI (cfiPicker1381) NoFunction
          CFI (cfiPicker1381) Picker
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine194_0 & 0xFFFF
??CrossCallReturnLabel_485:
        LCALL     ?Subroutine121 & 0xFFFF
??CrossCallReturnLabel_254:
        LCALL     ?Subroutine120 & 0xFFFF
??CrossCallReturnLabel_487:
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x2
        MOV       R0,A
        CLR       A
        ADDC      A,R7
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,A
        LCALL     ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_247:
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_241:
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_242:
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond1379
          CFI EndBlock cfiCond1380
          CFI EndBlock cfiPicker1381

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine119:
          CFI Block cfiCond1382 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1383 Using cfiCommon0
          CFI (cfiCond1383) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond1383) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_1
          CFI (cfiCond1383) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1383) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1383) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1383) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1383) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1383) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1383) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1383) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1383) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1383) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1383) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1383) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1383) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1383) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1383) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1383) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1383) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1383) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1383) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1383) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1383) CFA_SP SP+-4
          CFI (cfiCond1383) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1384 Using cfiCommon0
          CFI (cfiCond1384) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond1384) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_2
          CFI (cfiCond1384) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1384) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1384) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1384) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1384) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1384) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1384) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1384) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1384) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1384) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1384) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1384) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1384) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1384) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1384) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1384) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1384) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1384) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1384) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1384) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1384) CFA_SP SP+-4
          CFI (cfiCond1384) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1385 Using cfiCommon0
          CFI (cfiCond1385) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond1385) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_3
          CFI (cfiCond1385) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1385) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1385) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1385) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1385) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1385) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1385) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1385) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1385) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1385) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1385) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1385) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1385) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1385) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1385) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1385) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1385) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1385) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1385) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1385) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1385) CFA_SP SP+-4
          CFI (cfiCond1385) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1386 Using cfiCommon0
          CFI (cfiCond1386) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1386) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_16
          CFI (cfiCond1386) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1386) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1386) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1386) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1386) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1386) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1386) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1386) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1386) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1386) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1386) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1386) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1386) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1386) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1386) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1386) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1386) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1386) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1386) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1386) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1386) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1386) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1386) CFA_SP SP+-4
          CFI (cfiCond1386) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1387 Using cfiCommon0
          CFI (cfiCond1387) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1387) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_17
          CFI (cfiCond1387) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1387) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1387) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1387) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1387) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1387) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1387) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1387) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1387) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1387) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1387) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1387) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1387) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1387) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1387) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1387) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1387) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1387) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1387) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1387) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1387) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1387) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1387) CFA_SP SP+-4
          CFI (cfiCond1387) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1388 Using cfiCommon1
          CFI (cfiPicker1388) NoFunction
          CFI (cfiPicker1388) Picker
        MOVX      A,@DPTR
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond1382
          CFI EndBlock cfiCond1383
          CFI EndBlock cfiCond1384
          CFI EndBlock cfiCond1385
          CFI EndBlock cfiCond1386
          CFI EndBlock cfiCond1387
          CFI EndBlock cfiPicker1388

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine116:
          CFI Block cfiCond1389 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_118
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1390 Using cfiCommon0
          CFI (cfiCond1390) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1390) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_119
          CFI (cfiCond1390) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1390) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1390) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1390) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1390) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1390) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1390) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1390) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1390) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1390) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1390) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1390) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1390) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1390) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1390) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1390) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1390) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1390) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1390) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1390) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1390) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1390) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1390) CFA_SP SP+-4
          CFI (cfiCond1390) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1391 Using cfiCommon0
          CFI (cfiCond1391) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1391) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_16
          CFI (cfiCond1391) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1391) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1391) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1391) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1391) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1391) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1391) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1391) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1391) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1391) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1391) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1391) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1391) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1391) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1391) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1391) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1391) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1391) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1391) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1391) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1391) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1391) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1391) CFA_SP SP+-4
          CFI (cfiCond1391) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1392 Using cfiCommon0
          CFI (cfiCond1392) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1392) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_17
          CFI (cfiCond1392) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1392) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1392) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1392) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1392) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1392) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1392) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1392) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1392) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1392) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1392) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1392) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1392) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1392) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1392) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1392) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1392) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1392) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1392) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1392) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1392) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1392) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1392) CFA_SP SP+-4
          CFI (cfiCond1392) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1393 Using cfiCommon1
          CFI (cfiPicker1393) NoFunction
          CFI (cfiPicker1393) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_284:
        INC       DPTR
        RET
          CFI EndBlock cfiCond1389
          CFI EndBlock cfiCond1390
          CFI EndBlock cfiCond1391
          CFI EndBlock cfiCond1392
          CFI EndBlock cfiPicker1393

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine115:
          CFI Block cfiCond1394 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1395 Using cfiCommon0
          CFI (cfiCond1395) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond1395) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_1
          CFI (cfiCond1395) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1395) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1395) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1395) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1395) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1395) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1395) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1395) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1395) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1395) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1395) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1395) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1395) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1395) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1395) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1395) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1395) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1395) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1395) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1395) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1395) CFA_SP SP+-4
          CFI (cfiCond1395) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1396 Using cfiCommon0
          CFI (cfiCond1396) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond1396) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_2
          CFI (cfiCond1396) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1396) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1396) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1396) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1396) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1396) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1396) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1396) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1396) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1396) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1396) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1396) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1396) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1396) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1396) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1396) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1396) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1396) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1396) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1396) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1396) CFA_SP SP+-4
          CFI (cfiCond1396) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1397 Using cfiCommon0
          CFI (cfiCond1397) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond1397) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_3
          CFI (cfiCond1397) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1397) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1397) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1397) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1397) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1397) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1397) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1397) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1397) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1397) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1397) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1397) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1397) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1397) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1397) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1397) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1397) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1397) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1397) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1397) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1397) CFA_SP SP+-4
          CFI (cfiCond1397) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1398 Using cfiCommon0
          CFI (cfiCond1398) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1398) Conditional ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_16
          CFI (cfiCond1398) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1398) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1398) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1398) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1398) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1398) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1398) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1398) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1398) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1398) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1398) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1398) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1398) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1398) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1398) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1398) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1398) CFA_SP SP+-4
          CFI (cfiCond1398) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1399 Using cfiCommon0
          CFI (cfiCond1399) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1399) Conditional ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_17
          CFI (cfiCond1399) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1399) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1399) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1399) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1399) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1399) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1399) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1399) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1399) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1399) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1399) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1399) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1399) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1399) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1399) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1399) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1399) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1399) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1399) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1399) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1399) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1399) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1399) CFA_SP SP+-4
          CFI (cfiCond1399) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1400 Using cfiCommon1
          CFI (cfiPicker1400) NoFunction
          CFI (cfiPicker1400) Picker
        LCALL     ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_283:
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond1394
          CFI EndBlock cfiCond1395
          CFI EndBlock cfiCond1396
          CFI EndBlock cfiCond1397
          CFI EndBlock cfiCond1398
          CFI EndBlock cfiCond1399
          CFI EndBlock cfiPicker1400

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine139:
          CFI Block cfiCond1401 Using cfiCommon0
          CFI Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_118
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1402 Using cfiCommon0
          CFI (cfiCond1402) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1402) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_119
          CFI (cfiCond1402) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1402) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1402) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1402) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1402) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1402) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1402) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1402) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1402) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1402) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1402) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1402) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1402) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1402) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1402) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1402) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1402) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1402) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1402) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1402) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1402) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1402) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1402) CFA_SP SP+-6
          CFI (cfiCond1402) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1403 Using cfiCommon0
          CFI (cfiCond1403) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1403) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_16
          CFI (cfiCond1403) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1403) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1403) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1403) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1403) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1403) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1403) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1403) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1403) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1403) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1403) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1403) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1403) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1403) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1403) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1403) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1403) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1403) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1403) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1403) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1403) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1403) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1403) CFA_SP SP+-6
          CFI (cfiCond1403) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1404 Using cfiCommon0
          CFI (cfiCond1404) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1404) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_17
          CFI (cfiCond1404) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1404) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1404) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1404) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1404) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1404) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1404) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1404) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1404) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1404) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1404) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1404) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1404) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1404) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1404) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1404) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1404) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1404) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1404) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1404) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1404) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1404) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1404) CFA_SP SP+-6
          CFI (cfiCond1404) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1405 Using cfiCommon0
          CFI (cfiCond1405) Function zclClosures_SendDoorLockSetPINCodeRequest
          CFI (cfiCond1405) Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_0
          CFI (cfiCond1405) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1405) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1405) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1405) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1405) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1405) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1405) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1405) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1405) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1405) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1405) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1405) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1405) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1405) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1405) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1405) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1405) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1405) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1405) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1405) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1405) CFA_SP SP+-6
          CFI (cfiCond1405) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1406 Using cfiCommon0
          CFI (cfiCond1406) Function zclClosures_SendDoorLockSetRFIDCodeRequest
          CFI (cfiCond1406) Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_1
          CFI (cfiCond1406) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1406) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1406) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1406) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1406) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1406) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1406) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1406) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1406) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1406) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1406) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1406) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1406) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1406) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1406) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1406) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1406) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1406) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1406) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1406) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1406) CFA_SP SP+-6
          CFI (cfiCond1406) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1407 Using cfiCommon0
          CFI (cfiCond1407) Function zclClosures_SendDoorLockGetPINCodeResponse
          CFI (cfiCond1407) Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_2
          CFI (cfiCond1407) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1407) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1407) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1407) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1407) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1407) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1407) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1407) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1407) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1407) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1407) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1407) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1407) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1407) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1407) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1407) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1407) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1407) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1407) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1407) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1407) CFA_SP SP+-6
          CFI (cfiCond1407) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1408 Using cfiCommon0
          CFI (cfiCond1408) Function zclClosures_SendDoorLockGetRFIDCodeResponse
          CFI (cfiCond1408) Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_3
          CFI (cfiCond1408) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1408) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1408) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1408) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1408) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1408) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1408) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1408) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1408) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1408) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1408) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1408) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1408) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1408) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1408) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1408) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1408) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1408) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1408) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1408) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1408) CFA_SP SP+-6
          CFI (cfiCond1408) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1409 Using cfiCommon0
          CFI (cfiCond1409) Function zclClosures_SendDoorLockOperationEventNotification
          CFI (cfiCond1409) Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_16
          CFI (cfiCond1409) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1409) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1409) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1409) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1409) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1409) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1409) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1409) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1409) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1409) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1409) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1409) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1409) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1409) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1409) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1409) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1409) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1409) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1409) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1409) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1409) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1409) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1409) CFA_SP SP+-6
          CFI (cfiCond1409) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1410 Using cfiCommon0
          CFI (cfiCond1410) Function zclClosures_SendDoorLockProgrammingEventNotification
          CFI (cfiCond1410) Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_17
          CFI (cfiCond1410) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1410) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1410) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1410) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1410) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1410) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1410) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1410) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1410) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1410) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1410) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1410) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1410) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1410) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1410) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1410) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1410) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1410) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1410) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1410) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1410) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1410) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1410) CFA_SP SP+-6
          CFI (cfiCond1410) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1411 Using cfiCommon1
          CFI (cfiPicker1411) NoFunction
          CFI (cfiPicker1411) Picker
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1401
          CFI EndBlock cfiCond1402
          CFI EndBlock cfiCond1403
          CFI EndBlock cfiCond1404
          CFI EndBlock cfiCond1405
          CFI EndBlock cfiCond1406
          CFI EndBlock cfiCond1407
          CFI EndBlock cfiCond1408
          CFI EndBlock cfiCond1409
          CFI EndBlock cfiCond1410
          CFI EndBlock cfiPicker1411

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_RegisterDoorLockCmdCallbacks::?re`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_RegisterDoorLockCmdCallbacks

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_HdlIncoming::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_HdlIncoming

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_ProcessInDoorLockCmds::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockCmds

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_ProcessInDoorLock::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLock

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_ProcessInDoorLockUnlockWithTimeou:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockUnlockWithTimeout

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_ProcessInDoorLockSetPINCode::?rel`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockSetPINCode

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_ProcessInDoorLockSetWeekDaySchedu:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockSetWeekDaySchedule

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_ProcessInDoorLockSetYearDaySchedu:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockSetYearDaySchedule

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_ProcessInDoorLockSetHolidaySchedu:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockSetHolidaySchedule

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_ProcessInDoorLockSetRFIDCode::?re`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockSetRFIDCode

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_ProcessInDoorLockSetTemporaryPin:`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockSetTemporaryPin

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_ProcessInDoorLockGetLogRecordRsp:`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockGetLogRecordRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_ProcessInDoorLockGetPINCodeRsp::?`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockGetPINCodeRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_ProcessInDoorLockGetWeekDaySchedu:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockGetWeekDayScheduleRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_ProcessInDoorLockGetYearDaySchedu:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockGetYearDayScheduleRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_ProcessInDoorLockGetHolidaySchedu:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockGetHolidayScheduleRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_ProcessInDoorLockGetRFIDCodeRsp::`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockGetRFIDCodeRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_ProcessInDoorLockOperationEventNo:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockOperationEventNotification

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_ProcessInDoorLockProgrammingEvent:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_ProcessInDoorLockProgrammingEventNotification

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockRequest::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockUnlockTimeoutRequest:`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockUnlockTimeoutRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockGetLogRecordRequest::`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockGetLogRecordRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockSetPINCodeRequest::?r`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockSetPINCodeRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockUserIDRequest::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockUserIDRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockClearAllCodesRequest:`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockClearAllCodesRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockSetUserStatusRequest:`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockSetUserStatusRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_SendDoorLockSetWeekDayScheduleReq:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockSetWeekDayScheduleRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockScheduleRequest::?rel`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockScheduleRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_SendDoorLockSetYearDayScheduleReq:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockSetYearDayScheduleRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_SendDoorLockSetHolidayScheduleReq:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockSetHolidayScheduleRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_SendDoorLockHolidayScheduleReques:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockHolidayScheduleRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockSetUserTypeRequest::?`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockSetUserTypeRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockSetRFIDCodeRequest::?`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockSetRFIDCodeRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockStatusResponse::?rela`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockStatusResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockGetLogRecordResponse:`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockGetLogRecordResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockGetPINCodeResponse::?`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockGetPINCodeResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_SendDoorLockGetUserStatusResponse:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockGetUserStatusResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_SendDoorLockGetWeekDayScheduleRes:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockGetWeekDayScheduleResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_SendDoorLockGetYearDayScheduleRes:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockGetYearDayScheduleResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_SendDoorLockGetHolidayScheduleRes:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockGetHolidayScheduleResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockGetUserTypeResponse::`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockGetUserTypeResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendDoorLockGetRFIDCodeResponse::`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockGetRFIDCodeResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_SendSetTemporaryPinStatusResponse:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendSetTemporaryPinStatusResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclClosures_SendModifyPinStatusResponse::?rel`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendModifyPinStatusResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_SendDoorLockOperationEventNotific:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockOperationEventNotification

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclClosures_SendDoorLockProgrammingEventNotif:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclClosures_SendDoorLockProgrammingEventNotification

        END
// 3425 
// 3426 #endif //ZCL_DOORLOCK
// 3427 
// 3428 #ifdef ZCL_WINDOWCOVERING
// 3429 /*********************************************************************
// 3430  * @fn      zclClosures_ProcessInWindowCovering
// 3431  *
// 3432  * @brief   Process in the received Window Covering cluster Command.
// 3433  *
// 3434  * @param   pInMsg - pointer to the incoming message
// 3435  *
// 3436  * @return  ZStatus_t
// 3437  */
// 3438 static ZStatus_t zclClosures_ProcessInWindowCovering( zclIncoming_t *pInMsg,
// 3439                                                       zclClosures_WindowCoveringAppCallbacks_t *pCBs )
// 3440 {
// 3441   ZStatus_t status = ZCL_STATUS_SUCCESS;
// 3442   uint8 *pData = pInMsg->pData;
// 3443 
// 3444   if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
// 3445   {
// 3446     switch ( pInMsg->hdr.commandID )
// 3447     {
// 3448     case COMMAND_CLOSURES_UP_OPEN:
// 3449       if ( pCBs->pfnWindowCoveringUpOpen )
// 3450       {
// 3451         pCBs->pfnWindowCoveringUpOpen();
// 3452       }
// 3453       break;
// 3454 
// 3455     case COMMAND_CLOSURES_DOWN_CLOSE:
// 3456       if ( pCBs->pfnWindowCoveringDownClose )
// 3457       {
// 3458         pCBs->pfnWindowCoveringDownClose();
// 3459       }
// 3460       break;
// 3461 
// 3462     case COMMAND_CLOSURES_STOP:
// 3463       if ( pCBs->pfnWindowCoveringStop )
// 3464       {
// 3465         pCBs->pfnWindowCoveringStop();
// 3466       }
// 3467       break;
// 3468 
// 3469     case COMMAND_CLOSURES_GO_TO_LIFT_VALUE:
// 3470       if ( pCBs->pfnWindowCoveringGotoLiftValue )
// 3471       {
// 3472         if ( pCBs->pfnWindowCoveringGotoLiftValue( BUILD_UINT16( pData[0], pData[1] ) ) == FALSE )
// 3473         {
// 3474           status = ZCL_STATUS_INVALID_VALUE;
// 3475         }
// 3476       }
// 3477       break;
// 3478 
// 3479     case COMMAND_CLOSURES_GO_TO_LIFT_PERCENTAGE:
// 3480       if ( pCBs->pfnWindowCoveringGotoLiftPercentage )
// 3481       {
// 3482         if ( pCBs->pfnWindowCoveringGotoLiftPercentage( pData[0] ) == FALSE )
// 3483         {
// 3484           status = ZCL_STATUS_INVALID_VALUE;
// 3485         }
// 3486       }
// 3487       break;
// 3488 
// 3489     case COMMAND_CLOSURES_GO_TO_TILT_VALUE:
// 3490       if ( pCBs->pfnWindowCoveringGotoTiltValue )
// 3491       {
// 3492         if ( pCBs->pfnWindowCoveringGotoTiltValue( BUILD_UINT16( pData[0], pData[1] ) ) == FALSE )
// 3493         {
// 3494           status = ZCL_STATUS_INVALID_VALUE;
// 3495         }
// 3496       }
// 3497       break;
// 3498 
// 3499     case COMMAND_CLOSURES_GO_TO_TILT_PERCENTAGE:
// 3500       if ( pCBs->pfnWindowCoveringGotoTiltPercentage )
// 3501       {
// 3502         if ( pCBs->pfnWindowCoveringGotoTiltPercentage( pData[0] ) == FALSE )
// 3503         {
// 3504           status = ZCL_STATUS_INVALID_VALUE;
// 3505         }
// 3506       }
// 3507       break;
// 3508 
// 3509     default:
// 3510       return( ZFailure );
// 3511     }
// 3512   }
// 3513   // no Client command
// 3514 
// 3515   return ( status );
// 3516 }
// 3517 
// 3518 /*********************************************************************
// 3519  * @fn      zclClosures_WindowCoveringSimpleReq
// 3520  *
// 3521  * @brief   Call to send out a Window Covering command with no payload
// 3522  *          as Up/Open, Down/Close or Stop
// 3523  *
// 3524  * @param   srcEP - Sending application's endpoint
// 3525  * @param   dstAddr - where you want the message to go
// 3526  * @param   cmd - Command ID
// 3527  * @param   disableDefaultRsp - decides default response is necessary or not
// 3528  * @param   seqNum - sequence number of the command packet
// 3529  *
// 3530  * @return  ZStatus_t
// 3531  */
// 3532 ZStatus_t zclClosures_WindowCoveringSimpleReq( uint8 srcEP, afAddrType_t *dstAddr,
// 3533                                                uint8 cmd, uint8 disableDefaultRsp, uint8 seqNum )
// 3534 {
// 3535   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_WINDOW_COVERING,
// 3536                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 3537                           disableDefaultRsp, 0, seqNum, 0, NULL );
// 3538 }
// 3539 
// 3540 /*********************************************************************
// 3541  * @fn      zclClosures_WindowCoveringSendGoToValueReq
// 3542  *
// 3543  * @brief   Call to send out a Go to Value Request Command
// 3544  *
// 3545  * @param   srcEP - Sending application's endpoint
// 3546  * @param   dstAddr - where you want the message to go
// 3547  * @param   cmd - Command ID for COMMAND_CLOSURES_GO_TO_LIFT_VALUE
// 3548  * @param   liftValue - payload
// 3549  * @param   disableDefaultRsp - decides default response is necessary or not
// 3550  * @param   seqNum - sequence number of the command packet
// 3551  *
// 3552  * @return  ZStatus_t
// 3553  */
// 3554 ZStatus_t zclClosures_WindowCoveringSendGoToValueReq( uint8 srcEP, afAddrType_t *dstAddr,
// 3555                                                       uint8 cmd, uint16 Value,
// 3556                                                       uint8 disableDefaultRsp, uint8 seqNum )
// 3557 {
// 3558   uint8 buf[ZCL_WC_GOTOVALUEREQ_PAYLOADLEN];
// 3559 
// 3560   buf[0] = LO_UINT16( Value );
// 3561   buf[1] = HI_UINT16( Value );
// 3562 
// 3563   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_WINDOW_COVERING,
// 3564                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 3565                           disableDefaultRsp, 0, seqNum,
// 3566                           ZCL_WC_GOTOVALUEREQ_PAYLOADLEN, buf );
// 3567 }
// 3568 
// 3569 /*********************************************************************
// 3570  * @fn      zclClosures_WindowCoveringSendGoToPercentageReq
// 3571  *
// 3572  * @brief   Call to send out a Go to Percentage Request Command
// 3573  *
// 3574  * @param   srcEP - Sending application's endpoint
// 3575  * @param   dstAddr - where you want the message to go
// 3576  * @param   cmd - Command ID e.g. COMMAND_CLOSURES_GO_TO_LIFT_PERCENTAGE
// 3577  * @param   percentageLiftValue - payload
// 3578  * @param   disableDefaultRsp - decides default response is necessary or not
// 3579  * @param   seqNum - sequence number of the command packet
// 3580  *
// 3581  * @return  ZStatus_t
// 3582  */
// 3583 ZStatus_t zclClosures_WindowCoveringSendGoToPercentageReq( uint8 srcEP, afAddrType_t *dstAddr,
// 3584                                                            uint8 cmd, uint8 percentageValue,
// 3585                                                            uint8 disableDefaultRsp, uint8 seqNum )
// 3586 {
// 3587   uint8 buf[ZCL_WC_GOTOPERCENTAGEREQ_PAYLOADLEN];
// 3588 
// 3589   buf[0] = percentageValue;
// 3590 
// 3591   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_CLOSURES_WINDOW_COVERING,
// 3592                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 3593                           disableDefaultRsp, 0, seqNum,
// 3594                           ZCL_WC_GOTOPERCENTAGEREQ_PAYLOADLEN, buf );
// 3595 }
// 3596 #endif //ZCL_WINDOWCOVERING
// 3597 
// 3598 /********************************************************************************************
// 3599 *********************************************************************************************/
// 
// 10 122 bytes in segment BANKED_CODE
//    276 bytes in segment BANK_RELAYS
//      3 bytes in segment XDATA_Z
// 
//    276 bytes of CODE     memory
// 10 122 bytes of HUGECODE memory
//      3 bytes of XDATA    memory
//
//Errors: none
//Warnings: none
