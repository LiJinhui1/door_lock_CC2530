###############################################################################
#
# IAR C/C++ Compiler V10.30.1.6000 for 8051               24/Feb/2022  09:44:42
# Copyright 2004-2018 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for 8051
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data_rom
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\Source\Controller\AT_doorlock.c
#    Command line       =  
#        -f C:\Users\Administrator\AppData\Local\Temp\EW66CF.tmp
#        (D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\Source\Controller\AT_doorlock.c
#        -D WDT_IN_PM1 -D ZIGBEEPRO -D INTER_PAN -D ZIGBEE_FREQ_AGILITY -D
#        DISABLE_GREENPOWER_BASIC_PROXY -D REFLECTOR -D HAL_UART=FALSE -D
#        HAL_LED=FALSE -D HAL_KEY=FALSE -D SECURE=1 -D TC_LINKKEY_JOIN -D
#        NV_INIT -D NV_RESTORE -D POWER_SAVING -D NWK_AUTO_POLL -D xZTOOL_P1 -D
#        xMT_TASK -D xMT_APP_FUNC -D xMT_SYS_FUNC -D xMT_ZDO_FUNC -D
#        xMT_ZDO_MGMT -D xMT_APP_CNF_FUNC -D xLEGACY_LCD_DEBUG -D
#        xLCD_SUPPORTED=DEBUG -D MULTICAST_ENABLED=FALSE -D ZCL_READ -D
#        ZCL_WRITE -D ZCL_DISCOVER -D ZCL_BASIC -D ZCL_IDENTIFY -D ZCL_SCENES
#        -D ZCL_GROUPS -D BDB_REPORTING -D ZCL_DOORLOCK -D ZCL_DOORLOCK_EXT -D
#        ISR_KEYINTERRUPT -lC
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\EndDeviceEB\List
#        -lA
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\EndDeviceEB\List
#        --diag_suppress Pe001,Pa010 -o
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\EndDeviceEB\Obj
#        -e --debug --core=plain --dptr=16,1 --data_model=large
#        --code_model=banked --calling_convention=xdata_reentrant
#        --place_constants=data_rom --nr_virtual_regs 16 -f
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.cfg
#        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3
#        -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg
#        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
#        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
#        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
#        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
#        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
#        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
#        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
#        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
#        -DAPS_MAX_GROUPS=10 -DMAX_RTG_ENTRIES=15 -DNWK_MAX_BINDING_ENTRIES=4
#        -DMAX_BINDING_CLUSTER_IDS=4 -DDEFAULT_KEY={0} -DMAC_MAX_FRAME_SIZE=116
#        -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const __code"
#        -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=300
#        -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100 -DREJOIN_POLL_RATE=440
#        -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000) -f
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg
#        -I
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\
#        -I
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\Source\
#        -I
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\Source\ZCL\
#        -I
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\Source\UserAPI\
#        -I
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\Source\Controller\
#        -I
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\ZMain\TI2530DB\
#        -I
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\hal\include\
#        -I
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\
#        -I
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\mac\include\
#        -I
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\mac\high_level\
#        -I
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\
#        -I
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\
#        -I
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\mt\
#        -I
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\osal\include\
#        -I
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\services\saddr\
#        -I
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\services\sdata\
#        -I
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\af\
#        -I
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\bdb\
#        -I
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\gp\
#        -I
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\nwk\
#        -I
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\sapi\
#        -I
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\sec\
#        -I
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\sys\
#        -I
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\zcl\
#        -I
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\zdo\
#        -I
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\zmac\
#        -I
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\zmac\f8w\
#        -Ohz --require_prototypes)
#    Locale             =  Chinese (Simplified)_CHN.936
#    List file          =  
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\EndDeviceEB\List\AT_doorlock.lst
#    Object file        =  
#        D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\EndDeviceEB\Obj\AT_doorlock.r51
#
###############################################################################

D:\A_proj\A_Cproj\Zigbee\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\Source\Controller\AT_doorlock.c
      1          /******************************************************************************
      2            Filename:       AT_doorlock.c
      3            Author:         Yang Wang
      4          
      5            Description:    DoorLock Device controller
      6          *******************************************************************************/
      7          #include "AT_doorlock.h"
      8          #include "AT_single_bus.h"
      9          #include "AT_pwr_single_bus.h"
     10          #include "hal_uart.h"
     11          #include "OSAL.h"
     12          #include "bdb_interface.h"
     13          #include "zcl_doorlock.h"
     14          #include "OSAL_Clock.h"
     15          #include "AT_uart0.h"
     16          #include "AT_printf.h"
     17          #include "ATApp.h"
     18          
     19          /******************************************************************************
     20                                            utilities
     21          ******************************************************************************/
     22          static uint8 sum_check(uint8 *buf, uint8 len);
     23          static uint32 UTCTime_To_SEC(uint8 *buf);
     24          static uint8 AT_DoorLock_GetOperationEventSource( uint8 type );
     25          static uint8 AT_DoorLock_GetProgramEventCode_Add_User( uint8 type );
     26          static uint8 AT_DoorLock_GetProgramEventCode_Delete_User( uint8 type );
     27          static ZStatus_t AT_DoorLock_SendOperationEventNotification( uint16 userID,
     28                                                                       uint32 zigBeeLocalTime,
     29                                                                       uint8 batteryLevel,
     30                                                                       uint8 operationEventSource,
     31                                                                       uint8 operationEventCode );
     32          static ZStatus_t AT_DoorLock_SendProgrammingEventNotification( uint16 userID,
     33                                                                         uint32 zigBeeLocalTime,
     34                                                                         uint8 batteryLevel,
     35                                                                         uint8 programEventSource,
     36                                                                         uint8 programEventCode );
     37          
     38          /******************************************************************************
     39                                             uplink
     40          ******************************************************************************/
     41          static ZStatus_t AT_DoorLock_Rsp(uint8 *buf, uint8 len);
     42          static ZStatus_t AT_DoorLock_Upload(uint8 *buf, uint8 len);
     43          static ZStatus_t AT_DoorLock_Ack(uint8 *buf, uint8 len);
     44          
     45          /******************************************************************************
     46                                            utilities
     47          ******************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     48          static uint8 sum_check(uint8 *buf, uint8 len)
   \                     sum_check:
     49          {
   \   000000   74F7         MOV       A,#-0x9
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV       A,R1
   \   000006   FD           MOV       R5,A
     50            uint8 i = 0;
   \   000007   7C00         MOV       R4,#0x0
     51            uint16 sum = 0;
   \   000009   7800         MOV       R0,#0x0
     52          
     53            for(i=0;i<len;i++)
   \   00000B   8010         SJMP      ??sum_check_0
     54            {
     55              sum += buf[i];
   \                     ??sum_check_1:
   \   00000D   EC           MOV       A,R4
   \   00000E   FE           MOV       R6,A
   \   00000F   EA           MOV       A,R2
   \   000010   2E           ADD       A,R6
   \   000011   F582         MOV       DPL,A
   \   000013   E4           CLR       A
   \   000014   3B           ADDC      A,R3
   \   000015   F583         MOV       DPH,A
   \   000017   E0           MOVX      A,@DPTR
   \   000018   FE           MOV       R6,A
   \   000019   E8           MOV       A,R0
   \   00001A   2E           ADD       A,R6
   \   00001B   F8           MOV       R0,A
     56            }
   \   00001C   0C           INC       R4
   \                     ??sum_check_0:
   \   00001D   EC           MOV       A,R4
   \   00001E   C3           CLR       C
   \   00001F   9D           SUBB      A,R5
   \   000020   40EB         JC        ??sum_check_1
     57          
     58            return ((sum&0xFF)^0xFF);
   \   000022   E8           MOV       A,R0
   \   000023   F4           CPL       A
   \   000024   F9           MOV       R1,A
   \   000025   7F01         MOV       R7,#0x1
   \   000027   02....       LJMP      ?BANKED_LEAVE_XDATA
     59          }
     60          static uint32 UTCTime_To_SEC(uint8 *buf)
     61          {
     62            UTCTimeStruct UTCTime;
     63            UTCTime.year    = buf[0]+2000;
     64            UTCTime.month   = buf[1];
     65            UTCTime.day     = buf[2];
     66            UTCTime.hour    = buf[3];
     67            UTCTime.minutes = buf[4];
     68            UTCTime.seconds = buf[5];
     69          
     70            uint32 Seconds;
     71            Seconds = osal_ConvertUTCSecs( &UTCTime );
     72          
     73            return Seconds;
     74          }
     75          static uint8 AT_DoorLock_GetOperationEventSource( uint8 type )
     76          {
     77            switch( type )
     78            {
     79              case WITH_FINGERPRINT:
     80                return OPERATION_EVENT_SOURCE_FINGERPRINT;
     81                break;
     82          
     83              case WITH_KEYPAD_CODE:
     84                return OPERATION_EVENT_SOURCE_KEYPAD;
     85                break;
     86          
     87              case WITH_RFID_CARD:
     88                return OPERATION_EVENT_SOURCE_RFID;
     89                break;
     90          
     91              case WITH_REMOTE_CONTROL:
     92                return OPERATION_EVENT_SOURCE_REMOTE_CONTROL;
     93                break;
     94          
     95              case WITH_MANUAL_KEY:
     96                return OPERATION_EVENT_SOURCE_MANUAL;// "Reserved" for Programming Event
     97                break;
     98          
     99              case WITH_TEMP_PIN:
    100                return OPERATION_EVENT_SOURCE_TEMP_PIN;
    101                break;
    102          
    103              case WITH_REMOTE_APP:
    104                return OPERATION_EVENT_SOURCE_RF;
    105                break;
    106          
    107              default:
    108                return OPERATION_EVENT_SOURCE_INDETERMINATE;
    109                break;
    110            }
    111          }
    112          static uint8 AT_DoorLock_GetProgramEventCode_Add_User( uint8 type )
    113          {
    114            switch( type )
    115            {
    116              case WITH_FINGERPRINT:
    117                return PROGRAMMING_EVENT_CODE_FINGERPRINT_ADDED;
    118                break;
    119          
    120              case WITH_KEYPAD_CODE:
    121                return PROGRAMMING_EVENT_CODE_PIN_CODE_ADDED;
    122                break;
    123          
    124              case WITH_RFID_CARD:
    125                return PROGRAMMING_EVENT_CODE_RFID_CODE_ADDED;
    126                break;
    127          
    128              default:
    129                return PROGRAMMING_EVENT_CODE_UNKNOWN_OR_MFG_SPECIFIC;
    130                break;
    131            }
    132          }
    133          static uint8 AT_DoorLock_GetProgramEventCode_Delete_User( uint8 type )
    134          {
    135            switch( type )
    136            {
    137              case WITH_FINGERPRINT:
    138                return PROGRAMMING_EVENT_CODE_FINGERPRINT_DELETED;
    139                break;
    140          
    141              case WITH_KEYPAD_CODE:
    142                return PROGRAMMING_EVENT_CODE_PIN_CODE_DELETED;
    143                break;
    144          
    145              case WITH_RFID_CARD:
    146                return PROGRAMMING_EVENT_CODE_RFID_CODE_DELETED;
    147                break;
    148          
    149              default:
    150                return PROGRAMMING_EVENT_CODE_UNKNOWN_OR_MFG_SPECIFIC;
    151                break;
    152            }
    153          }
    154          static ZStatus_t AT_DoorLock_SendOperationEventNotification( uint16 userID,
    155                                                                       uint32 zigBeeLocalTime,
    156                                                                       uint8 batteryLevel,
    157                                                                       uint8 operationEventSource,
    158                                                                       uint8 operationEventCode )
    159          {
    160            ZStatus_t status;
    161          
    162            // build destination address
    163            afAddrType_t dstAddr;
    164            dstAddr.addrMode = (afAddrMode_t)Addr16Bit;
    165            dstAddr.addr.shortAddr = NWK_PAN_COORD_ADDR;// default send to Coordinator
    166            dstAddr.endPoint = 0x0B;//GENERIC_ENDPOINT on Coordinator
    167          
    168            //build DoorLock Operation Event Notification
    169            zclDoorLockOperationEventNotification_t pPayload;
    170            pPayload.operationEventSource = operationEventSource;
    171            pPayload.operationEventCode = operationEventCode;
    172            pPayload.userID = userID;
    173            pPayload.pin = batteryLevel; // it is battery level actually
    174            pPayload.zigBeeLocalTime = zigBeeLocalTime;
    175          
    176            pPayload.pData = (uint8 *)osal_mem_alloc(1);
    177            pPayload.pData[0] = 0;
    178          
    179            status = zclClosures_SendDoorLockOperationEventNotification( DOORLOCK_ENDPOINT,//uint8 srcEP,
    180                                                                         &dstAddr,//afAddrType_t *dstAddr,
    181                                                                         &pPayload,//zclDoorLockOperationEventNotification_t *pPayload,
    182                                                                         TRUE,//uint8 disableDefaultRsp,
    183                                                                         bdb_getZCLFrameCounter());//uint8 seqNum
    184          
    185            osal_mem_free( pPayload.pData );
    186          
    187            return status;
    188          }
    189          static ZStatus_t AT_DoorLock_SendProgrammingEventNotification( uint16 userID,
    190                                                                         uint32 zigBeeLocalTime,
    191                                                                         uint8 batteryLevel,
    192                                                                         uint8 programEventSource,
    193                                                                         uint8 programEventCode )
    194          {
    195            ZStatus_t status;
    196          
    197            // build destination address
    198            afAddrType_t dstAddr;
    199            dstAddr.addrMode = (afAddrMode_t)Addr16Bit;
    200            dstAddr.addr.shortAddr = NWK_PAN_COORD_ADDR;// default send to Coordinator
    201            dstAddr.endPoint = 0x0B;//GENERIC_ENDPOINT on Coordinator
    202          
    203            //build DoorLock Programming Event Notification
    204            zclDoorLockProgrammingEventNotification_t pPayload;
    205            pPayload.programEventSource = programEventSource;
    206            pPayload.programEventCode = programEventCode;
    207            pPayload.userID = userID;
    208            pPayload.pin = batteryLevel; // it is battery level actually
    209            pPayload.userType = USER_TYPE_UNRESTRICTED_USER;
    210            pPayload.userStatus = USER_STATUS_AVAILABLE;
    211            pPayload.zigBeeLocalTime = zigBeeLocalTime;
    212          
    213            pPayload.pData = (uint8 *)osal_mem_alloc(1);
    214            pPayload.pData[0] = 0;
    215          
    216            status = zclClosures_SendDoorLockProgrammingEventNotification( DOORLOCK_ENDPOINT,//uint8 srcEP,
    217                                                                           &dstAddr,//afAddrType_t *dstAddr,
    218                                                                           &pPayload,//zclDoorLockProgrammingEventNotification_t *pPayload,
    219                                                                           TRUE,//uint8 disableDefaultRsp,
    220                                                                           bdb_getZCLFrameCounter());//uint8 seqNum
    221          
    222            osal_mem_free( pPayload.pData );
    223          
    224            return status;
    225          }
    226          
    227          /******************************************************************************
    228                                               init
    229          ******************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    230          void AT_DoorLock_Init(void)
   \                     AT_DoorLock_Init:
    231          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    232            AT_single_bus_init();
   \   000004                ; Setup parameters for call to function AT_single_bus_init
   \   000004   12....       LCALL     `??AT_single_bus_init::?relay`; Banked call to: AT_single_bus_init
    233            AT_pwr_single_bus_init();
   \   000007                ; Setup parameters for call to function AT_pwr_single_bus_init
   \   000007   12....       LCALL     `??AT_pwr_single_bus_init::?relay`; Banked call to: AT_pwr_single_bus_init
    234          }
   \   00000A   D083         POP       DPH
   \   00000C   D082         POP       DPL
   \   00000E   02....       LJMP      ?BRET
    235          
    236          /******************************************************************************
    237                                             downlink
    238          ******************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    239          ZStatus_t AT_DoorLock_Unlock( zclDoorLock_t *pInCmd )
   \                     AT_DoorLock_Unlock:
    240          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000   74F4         MOV       A,#-0xc
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV       ?V0,R2
   \   000007   8B..         MOV       ?V1,R3
    241            uint8 *buf = (uint8 *)osal_mem_alloc( LEN_DOORLOCK_UNLOCK );
   \   000009                ; Setup parameters for call to function osal_mem_alloc
   \   000009   7A1B         MOV       R2,#0x1b
   \   00000B   12....       LCALL     ?Subroutine4 & 0xFFFF
    242            if(buf == NULL)
   \                     ??CrossCallReturnLabel_4:
   \   00000E   7004         JNZ       ??AT_DoorLock_Unlock_0
    243              return ZMemError;
   \   000010   7910         MOV       R1,#0x10
   \   000012   802C         SJMP      ??CrossCallReturnLabel_19
    244            else
    245              osal_memset(buf, 0x00, LEN_DOORLOCK_UNLOCK);
   \                     ??AT_DoorLock_Unlock_0:
   \   000014                ; Setup parameters for call to function osal_memset
   \   000014   7C1B         MOV       R4,#0x1b
   \   000016   12....       LCALL     ?Subroutine8 & 0xFFFF
    246          
    247            buf[0] = CMD_DOORLOCK_UNLOCK;
   \                     ??CrossCallReturnLabel_13:
   \   000019   7401         MOV       A,#0x1
   \   00001B   12....       LCALL     ?Subroutine7 & 0xFFFF
    248          
    249            if(pInCmd->pPinRfidCode[0] == PIN_LEN_NULL)
   \                     ??CrossCallReturnLabel_11:
   \   00001E   7022         JNZ       ??AT_DoorLock_Unlock_1
    250            {
    251              buf[1] |=  CHECK_PIN_Y_N;   // do not check pin
    252              buf[1] &= ~CHECK_SET_TIME;  // do not check and set time
   \   000020   E0           MOVX      A,@DPTR
   \   000021   C2E1         CLR       0xE0 /* A   */.1
   \   000023   F0           MOVX      @DPTR,A
   \   000024   D2E2         SETB      0xE0 /* A   */.2
   \   000026   F0           MOVX      @DPTR,A
    253            }
    254            else if((pInCmd->pPinRfidCode[0] >= PIN_LEN_MIN) && (pInCmd->pPinRfidCode[0] <= PIN_LEN_MAX))
    255            {
    256              buf[1] &= ~CHECK_PIN_Y_N;   // check pin
    257              buf[1] |=  CHECK_PIN_A_U_T; // check administrator/user/temp
    258              buf[1] &= ~CHECK_SET_TIME;  // do not check and set time
    259          
    260              osal_memcpy(&buf[10], &(pInCmd->pPinRfidCode[1]), pInCmd->pPinRfidCode[0]);
    261            }
    262            else
    263            {
    264              osal_mem_free( buf );
    265              return ZFailure;
    266            }
    267          
    268            buf[LEN_DOORLOCK_UNLOCK-1] = sum_check(buf, LEN_DOORLOCK_UNLOCK-1);
   \                     ??AT_DoorLock_Unlock_2:
   \   000027                ; Setup parameters for call to function sum_check
   \   000027   791A         MOV       R1,#0x1a
   \   000029   EE           MOV       A,R6
   \   00002A   FA           MOV       R2,A
   \   00002B   EF           MOV       A,R7
   \   00002C   FB           MOV       R3,A
   \   00002D   12....       LCALL     `??sum_check::?relay`; Banked call to: sum_check
   \   000030   EE           MOV       A,R6
   \   000031   241A         ADD       A,#0x1a
   \   000033   F582         MOV       DPL,A
   \   000035   E4           CLR       A
   \   000036   3F           ADDC      A,R7
   \   000037   F583         MOV       DPH,A
   \   000039   E9           MOV       A,R1
   \   00003A   F0           MOVX      @DPTR,A
    269          
    270            AT_single_bus_send_buf(buf, LEN_DOORLOCK_UNLOCK);
   \   00003B                ; Setup parameters for call to function AT_single_bus_send_buf
   \   00003B   791B         MOV       R1,#0x1b
   \   00003D   12....       LCALL     ?Subroutine10 & 0xFFFF
    271          
    272            osal_mem_free( buf );
    273          
    274            return ZSuccess;
   \                     ??CrossCallReturnLabel_19:
   \   000040   80..         SJMP      ?Subroutine0
   \                     ??AT_DoorLock_Unlock_1:
   \   000042   74FA         MOV       A,#-0x6
   \   000044   28           ADD       A,R0
   \   000045   C3           CLR       C
   \   000046   9407         SUBB      A,#0x7
   \   000048   502B         JNC       ??AT_DoorLock_Unlock_3
   \   00004A   E0           MOVX      A,@DPTR
   \   00004B   54F9         ANL       A,#0xf9
   \   00004D   F0           MOVX      @DPTR,A
   \   00004E   D2E0         SETB      0xE0 /* A   */.0
   \   000050   12....       LCALL     ?Subroutine13 & 0xFFFF
   \                     ??CrossCallReturnLabel_26:
   \   000053   F9           MOV       R1,A
   \   000054   E8           MOV       A,R0
   \   000055   FC           MOV       R4,A
   \   000056   E9           MOV       A,R1
   \   000057   FD           MOV       R5,A
   \   000058                ; Setup parameters for call to function osal_memcpy
   \   000058   8882         MOV       DPL,R0
   \   00005A   F583         MOV       DPH,A
   \   00005C   A3           INC       DPTR
   \   00005D   A982         MOV       R1,DPL
   \   00005F   AA83         MOV       R2,DPH
   \   000061   89..         MOV       ?V0,R1
   \   000063   8A..         MOV       ?V1,R2
   \   000065   75..00       MOV       ?V2,#0x0
   \   000068   78..         MOV       R0,#?V0
   \   00006A   12....       LCALL     ?PUSH_XSTACK_I_THREE
   \   00006D   12....       LCALL     ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_9:
   \   000070   12....       LCALL     ?DEALLOC_XSTACK8
   \   000073   80B2         SJMP      ??AT_DoorLock_Unlock_2
   \                     ??AT_DoorLock_Unlock_3:
   \   000075                ; Setup parameters for call to function osal_mem_free
   \   000075   EE           MOV       A,R6
   \   000076   FA           MOV       R2,A
   \   000077   EF           MOV       A,R7
   \   000078   FB           MOV       R3,A
   \   000079   12....       LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
   \   00007C   7901         MOV       R1,#0x1
   \   00007E   80C0         SJMP      ??CrossCallReturnLabel_19
    275          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F04         MOV       R7,#0x4
   \   000002   02....       LJMP      ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine13:
   \   000000   12....       LCALL     ?Subroutine17 & 0xFFFF
   \                     ??CrossCallReturnLabel_33:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine17:
   \   000000   F0           MOVX      @DPTR,A
   \   000001   85..82       MOV       DPL,?V0
   \   000004   85..83       MOV       DPH,?V1
   \   000007   E0           MOVX      A,@DPTR
   \   000008   F8           MOV       R0,A
   \   000009   A3           INC       DPTR
   \   00000A   E0           MOVX      A,@DPTR
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine10:
   \   000000   EE           MOV       A,R6
   \   000001   FA           MOV       R2,A
   \   000002   EF           MOV       A,R7
   \   000003   FB           MOV       R3,A
   \   000004   12....       LCALL     `??AT_single_bus_send_buf::?relay`; Banked call to: AT_single_bus_send_buf
   \   000007                ; Setup parameters for call to function osal_mem_free
   \   000007                ; Setup parameters for call to function osal_mem_free
   \   000007                ; Setup parameters for call to function osal_mem_free
   \   000007   EE           MOV       A,R6
   \   000008   FA           MOV       R2,A
   \   000009   EF           MOV       A,R7
   \   00000A   FB           MOV       R3,A
   \   00000B   12....       LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
   \   00000E   7900         MOV       R1,#0x0
   \   000010   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine8:
   \   000000   7D00         MOV       R5,#0x0
   \   000002   7900         MOV       R1,#0x0
   \   000004   12....       LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
   \   000007   8E82         MOV       DPL,R6
   \   000009   8F83         MOV       DPH,R7
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   7B00         MOV       R3,#0x0
   \   000002   12....       LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
   \   000005   8A..         MOV       ?V2,R2
   \   000007   8B..         MOV       ?V3,R3
   \   000009   AE..         MOV       R6,?V2
   \   00000B   AF..         MOV       R7,?V3
   \   00000D   EA           MOV       A,R2
   \   00000E   4F           ORL       A,R7
   \   00000F   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine7:
   \   000000   12....       LCALL     ?Subroutine17 & 0xFFFF
   \                     ??CrossCallReturnLabel_34:
   \   000003   F583         MOV       DPH,A
   \   000005   8882         MOV       DPL,R0
   \   000007   E0           MOVX      A,@DPTR
   \   000008   F8           MOV       R0,A
   \   000009   8E82         MOV       DPL,R6
   \   00000B   8F83         MOV       DPH,R7
   \   00000D   A3           INC       DPTR
   \   00000E   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine6:
   \   000000   8C82         MOV       DPL,R4
   \   000002   8D83         MOV       DPH,R5
   \   000004   E0           MOVX      A,@DPTR
   \   000005   FC           MOV       R4,A
   \   000006   12....       LCALL     ?Subroutine18 & 0xFFFF
   \                     ??CrossCallReturnLabel_40:
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine18:
   \   000000   7D00         MOV       R5,#0x0
   \   000002   EE           MOV       A,R6
   \   000003   240A         ADD       A,#0xa
   \   000005                REQUIRE ??Subroutine21_0
   \   000005                ; // Fall through to label ??Subroutine21_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine21_0:
   \   000000   FA           MOV       R2,A
   \   000001   E4           CLR       A
   \   000002   3F           ADDC      A,R7
   \   000003   FB           MOV       R3,A
   \   000004   12....       LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
   \   000007   7403         MOV       A,#0x3
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    276          ZStatus_t AT_DoorLock_Lock( zclDoorLock_t *pInCmd )
   \                     AT_DoorLock_Lock:
    277          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000   74F4         MOV       A,#-0xc
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV       ?V0,R2
   \   000007   8B..         MOV       ?V1,R3
    278            uint8 *buf = (uint8 *)osal_mem_alloc( LEN_DOORLOCK_LOCK );
   \   000009                ; Setup parameters for call to function osal_mem_alloc
   \   000009   7A17         MOV       R2,#0x17
   \   00000B   12....       LCALL     ?Subroutine4 & 0xFFFF
    279            if(buf == NULL)
   \                     ??CrossCallReturnLabel_5:
   \   00000E   7004         JNZ       ??AT_DoorLock_Lock_0
    280              return ZMemError;
   \   000010   7910         MOV       R1,#0x10
   \   000012   804A         SJMP      ??CrossCallReturnLabel_20
    281            else
    282              osal_memset(buf, 0x00, LEN_DOORLOCK_LOCK);
   \                     ??AT_DoorLock_Lock_0:
   \   000014                ; Setup parameters for call to function osal_memset
   \   000014   7C17         MOV       R4,#0x17
   \   000016   12....       LCALL     ?Subroutine8 & 0xFFFF
    283          
    284            buf[0] = CMD_DOORLOCK_LOCK;
   \                     ??CrossCallReturnLabel_14:
   \   000019   7402         MOV       A,#0x2
   \   00001B   12....       LCALL     ?Subroutine13 & 0xFFFF
    285          
    286            if(pInCmd->pPinRfidCode[0] == PIN_LEN_NULL)
   \                     ??CrossCallReturnLabel_27:
   \   00001E   8882         MOV       DPL,R0
   \   000020   F583         MOV       DPH,A
   \   000022   E0           MOVX      A,@DPTR
   \   000023   FC           MOV       R4,A
   \   000024   601F         JZ        ??AT_DoorLock_Lock_1
    287            {
    288              // do nothing
    289            }
    290            else if((pInCmd->pPinRfidCode[0] >= PIN_LEN_MIN) && (pInCmd->pPinRfidCode[0] <= PIN_LEN_MAX))
   \   000026   74FA         MOV       A,#-0x6
   \   000028   2C           ADD       A,R4
   \   000029   C3           CLR       C
   \   00002A   9407         SUBB      A,#0x7
   \   00002C   5032         JNC       ??AT_DoorLock_Lock_2
    291            {
    292              osal_memcpy(&buf[10], &(pInCmd->pPinRfidCode[1]), pInCmd->pPinRfidCode[0]);
   \   00002E                ; Setup parameters for call to function osal_memcpy
   \   00002E   A3           INC       DPTR
   \   00002F   A982         MOV       R1,DPL
   \   000031   AA83         MOV       R2,DPH
   \   000033   89..         MOV       ?V0,R1
   \   000035   8A..         MOV       ?V1,R2
   \   000037   75..00       MOV       ?V2,#0x0
   \   00003A   78..         MOV       R0,#?V0
   \   00003C   12....       LCALL     ?PUSH_XSTACK_I_THREE
   \   00003F   12....       LCALL     ?Subroutine18 & 0xFFFF
    293            }
   \                     ??CrossCallReturnLabel_39:
   \   000042   12....       LCALL     ?DEALLOC_XSTACK8
    294            else
    295            {
    296              osal_mem_free( buf );
    297              return ZFailure;
    298            }
    299          
    300            buf[LEN_DOORLOCK_LOCK-1] = sum_check(buf, LEN_DOORLOCK_LOCK-1);
   \                     ??AT_DoorLock_Lock_1:
   \   000045                ; Setup parameters for call to function sum_check
   \   000045   7916         MOV       R1,#0x16
   \   000047   EE           MOV       A,R6
   \   000048   FA           MOV       R2,A
   \   000049   EF           MOV       A,R7
   \   00004A   FB           MOV       R3,A
   \   00004B   12....       LCALL     `??sum_check::?relay`; Banked call to: sum_check
   \   00004E   EE           MOV       A,R6
   \   00004F   2416         ADD       A,#0x16
   \   000051   F582         MOV       DPL,A
   \   000053   E4           CLR       A
   \   000054   3F           ADDC      A,R7
   \   000055   F583         MOV       DPH,A
   \   000057   E9           MOV       A,R1
   \   000058   F0           MOVX      @DPTR,A
    301          
    302            AT_single_bus_send_buf(buf, LEN_DOORLOCK_LOCK);
   \   000059                ; Setup parameters for call to function AT_single_bus_send_buf
   \   000059   7917         MOV       R1,#0x17
   \   00005B   12....       LCALL     ?Subroutine10 & 0xFFFF
    303          
    304            osal_mem_free( buf );
    305          
    306            return ZSuccess;
   \                     ??CrossCallReturnLabel_20:
   \   00005E   80..         SJMP      ?Subroutine0
   \                     ??AT_DoorLock_Lock_2:
   \   000060                ; Setup parameters for call to function osal_mem_free
   \   000060   EE           MOV       A,R6
   \   000061   FA           MOV       R2,A
   \   000062   EF           MOV       A,R7
   \   000063   FB           MOV       R3,A
   \   000064   12....       LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
   \   000067   7901         MOV       R1,#0x1
   \   000069   80F3         SJMP      ??CrossCallReturnLabel_20
    307          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    308          ZStatus_t AT_DoorLock_SetTemporaryPin_Req( zclDoorLockSetTemporaryPin_t *pCmd )
   \                     AT_DoorLock_SetTemporaryPin_Req:
    309          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000                REQUIRE ?V6
   \   000000   74F1         MOV       A,#-0xf
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 15
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV       ?V0,R2
   \   000007   8B..         MOV       ?V1,R3
    310            uint8 *buf = (uint8 *)osal_mem_alloc( LEN_DOORLOCK_SET_TEMPORARY_PIN );
   \   000009                ; Setup parameters for call to function osal_mem_alloc
   \   000009   7A28         MOV       R2,#0x28
   \   00000B   12....       LCALL     ?Subroutine4 & 0xFFFF
    311            if(buf == NULL)
   \                     ??CrossCallReturnLabel_6:
   \   00000E   7005         JNZ       ??AT_DoorLock_SetTemporaryPin_Req_0
    312              return ZMemError;
   \   000010   7910         MOV       R1,#0x10
   \   000012   02....       LJMP      ??CrossCallReturnLabel_21 & 0xFFFF
    313            else
    314              osal_memset(buf, 0x00, LEN_DOORLOCK_SET_TEMPORARY_PIN);
   \                     ??AT_DoorLock_SetTemporaryPin_Req_0:
   \   000015                ; Setup parameters for call to function osal_memset
   \   000015   7C28         MOV       R4,#0x28
   \   000017   12....       LCALL     ?Subroutine8 & 0xFFFF
    315          
    316            buf[0] = CMD_DOORLOCK_SET_TEMPORARY_PIN;
   \                     ??CrossCallReturnLabel_15:
   \   00001A   7404         MOV       A,#0x4
   \   00001C   12....       LCALL     ?Subroutine7 & 0xFFFF
    317          
    318            if(pCmd->adminPin[0] == PIN_LEN_NULL)
   \                     ??CrossCallReturnLabel_12:
   \   00001F   6003         JZ        $+5
   \   000021   02....       LJMP      ??AT_DoorLock_SetTemporaryPin_Req_1 & 0xFFFF
    319            {
    320              buf[1] |=  CHECK_PIN_Y_N;   // do not check admin pin
   \   000024   E0           MOVX      A,@DPTR
   \   000025   D2E2         SETB      0xE0 /* A   */.2
   \   000027   F0           MOVX      @DPTR,A
    321            }
    322            else if((pCmd->adminPin[0] >= PIN_LEN_MIN) && (pCmd->adminPin[0] <= PIN_LEN_MAX))
    323            {
    324              buf[1] &= ~CHECK_PIN_Y_N;   // check admin pin
    325          
    326              osal_memcpy(&buf[10], &(pCmd->adminPin[1]), pCmd->adminPin[0]);
    327            }
    328            else
    329            {
    330              osal_mem_free( buf );
    331              return ZFailure;
    332            }
    333          
    334            osal_memcpy(&buf[22], &(pCmd->tempPin[1]), pCmd->tempPin[0]);
   \                     ??AT_DoorLock_SetTemporaryPin_Req_2:
   \   000028   85..82       MOV       DPL,?V0
   \   00002B   85..83       MOV       DPH,?V1
   \   00002E   A3           INC       DPTR
   \   00002F   A3           INC       DPTR
   \   000030   12....       LCALL     ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_2:
   \   000033   12....       LCALL     ?PUSH_XSTACK_I_THREE
   \   000036   8C82         MOV       DPL,R4
   \   000038   8D83         MOV       DPH,R5
   \   00003A   E0           MOVX      A,@DPTR
   \   00003B   FC           MOV       R4,A
   \   00003C   7D00         MOV       R5,#0x0
   \   00003E   EE           MOV       A,R6
   \   00003F   2416         ADD       A,#0x16
   \   000041   12....       LCALL     ??Subroutine21_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_41:
   \   000044   12....       LCALL     ?DEALLOC_XSTACK8
    335          
    336            buf[34] = pCmd->activeTimes;
   \   000047   85..82       MOV       DPL,?V0
   \   00004A   85..83       MOV       DPH,?V1
   \   00004D   A3           INC       DPTR
   \   00004E   A3           INC       DPTR
   \   00004F   A3           INC       DPTR
   \   000050   A3           INC       DPTR
   \   000051   E0           MOVX      A,@DPTR
   \   000052   C0E0         PUSH      A
   \   000054   EE           MOV       A,R6
   \   000055   2422         ADD       A,#0x22
   \   000057   F582         MOV       DPL,A
   \   000059   E4           CLR       A
   \   00005A   3F           ADDC      A,R7
   \   00005B   F583         MOV       DPH,A
   \   00005D   D0E0         POP       A
   \   00005F   F0           MOVX      @DPTR,A
    337          
    338            buf[35] = BREAK_UINT32( pCmd->activeTime, 3 );
   \   000060   E5..         MOV       A,?V0
   \   000062   2405         ADD       A,#0x5
   \   000064   F8           MOV       R0,A
   \   000065   E4           CLR       A
   \   000066   35..         ADDC      A,?V1
   \   000068   F9           MOV       R1,A
   \   000069   E8           MOV       A,R0
   \   00006A   FA           MOV       R2,A
   \   00006B   E9           MOV       A,R1
   \   00006C   8882         MOV       DPL,R0
   \   00006E   F583         MOV       DPH,A
   \   000070   78..         MOV       R0,#?V0
   \   000072   12....       LCALL     ?L_MOV_X
   \   000075   7418         MOV       A,#0x18
   \   000077   78..         MOV       R0,#?V0
   \   000079   12....       LCALL     ?UL_SHR
   \   00007C   EE           MOV       A,R6
   \   00007D   2423         ADD       A,#0x23
   \   00007F   12....       LCALL     ?Subroutine9 & 0xFFFF
    339            buf[36] = BREAK_UINT32( pCmd->activeTime, 2 );
   \                     ??CrossCallReturnLabel_16:
   \   000082   12....       LCALL     ?L_MOV_X
   \   000085   7410         MOV       A,#0x10
   \   000087   78..         MOV       R0,#?V0
   \   000089   12....       LCALL     ?UL_SHR
   \   00008C   EE           MOV       A,R6
   \   00008D   2424         ADD       A,#0x24
   \   00008F   12....       LCALL     ?Subroutine9 & 0xFFFF
    340            buf[37] = BREAK_UINT32( pCmd->activeTime, 1 );
   \                     ??CrossCallReturnLabel_17:
   \   000092   12....       LCALL     ?L_MOV_X
   \   000095   E5..         MOV       A,?V1
   \   000097   F5..         MOV       ?V0,A
   \   000099   EE           MOV       A,R6
   \   00009A   2425         ADD       A,#0x25
   \   00009C   12....       LCALL     ?Subroutine9 & 0xFFFF
    341            buf[38] = BREAK_UINT32( pCmd->activeTime, 0 );
   \                     ??CrossCallReturnLabel_18:
   \   00009F   12....       LCALL     ?L_MOV_X
   \   0000A2   EE           MOV       A,R6
   \   0000A3   2426         ADD       A,#0x26
   \   0000A5   F582         MOV       DPL,A
   \   0000A7   E4           CLR       A
   \   0000A8   3F           ADDC      A,R7
   \   0000A9   F583         MOV       DPH,A
   \   0000AB   E5..         MOV       A,?V0
   \   0000AD   F0           MOVX      @DPTR,A
    342          
    343            buf[LEN_DOORLOCK_SET_TEMPORARY_PIN-1] = sum_check(buf, LEN_DOORLOCK_SET_TEMPORARY_PIN-1);
   \   0000AE                ; Setup parameters for call to function sum_check
   \   0000AE   7927         MOV       R1,#0x27
   \   0000B0   EE           MOV       A,R6
   \   0000B1   FA           MOV       R2,A
   \   0000B2   EF           MOV       A,R7
   \   0000B3   FB           MOV       R3,A
   \   0000B4   12....       LCALL     `??sum_check::?relay`; Banked call to: sum_check
   \   0000B7   EE           MOV       A,R6
   \   0000B8   2427         ADD       A,#0x27
   \   0000BA   F582         MOV       DPL,A
   \   0000BC   E4           CLR       A
   \   0000BD   3F           ADDC      A,R7
   \   0000BE   F583         MOV       DPH,A
   \   0000C0   E9           MOV       A,R1
   \   0000C1   F0           MOVX      @DPTR,A
    344          
    345            AT_single_bus_send_buf(buf, LEN_DOORLOCK_SET_TEMPORARY_PIN);
   \   0000C2                ; Setup parameters for call to function AT_single_bus_send_buf
   \   0000C2   7928         MOV       R1,#0x28
   \   0000C4   12....       LCALL     ?Subroutine10 & 0xFFFF
    346          
    347            osal_mem_free( buf );
    348          
    349            return ZSuccess;
   \                     ??CrossCallReturnLabel_21:
   \   0000C7   02....       LJMP      ?Subroutine1 & 0xFFFF
   \                     ??AT_DoorLock_SetTemporaryPin_Req_1:
   \   0000CA   74FA         MOV       A,#-0x6
   \   0000CC   28           ADD       A,R0
   \   0000CD   C3           CLR       C
   \   0000CE   9407         SUBB      A,#0x7
   \   0000D0   5019         JNC       ??AT_DoorLock_SetTemporaryPin_Req_3
   \   0000D2   E0           MOVX      A,@DPTR
   \   0000D3   C2E2         CLR       0xE0 /* A   */.2
   \   0000D5   F0           MOVX      @DPTR,A
   \   0000D6   85..82       MOV       DPL,?V0
   \   0000D9   85..83       MOV       DPH,?V1
   \   0000DC   12....       LCALL     ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_3:
   \   0000DF   12....       LCALL     ?PUSH_XSTACK_I_THREE
   \   0000E2   12....       LCALL     ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_10:
   \   0000E5   12....       LCALL     ?DEALLOC_XSTACK8
   \   0000E8   02....       LJMP      ??AT_DoorLock_SetTemporaryPin_Req_2 & 0xFFFF
   \                     ??AT_DoorLock_SetTemporaryPin_Req_3:
   \   0000EB                ; Setup parameters for call to function osal_mem_free
   \   0000EB   EE           MOV       A,R6
   \   0000EC   FA           MOV       R2,A
   \   0000ED   EF           MOV       A,R7
   \   0000EE   FB           MOV       R3,A
   \   0000EF   12....       LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
   \   0000F2   7901         MOV       R1,#0x1
   \   0000F4   80D1         SJMP      ??CrossCallReturnLabel_21
    350          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine9:
   \   000000   F582         MOV       DPL,A
   \   000002   E4           CLR       A
   \   000003   3F           ADDC      A,R7
   \   000004   F583         MOV       DPH,A
   \   000006   E5..         MOV       A,?V0
   \   000008   F0           MOVX      @DPTR,A
   \   000009   8A82         MOV       DPL,R2
   \   00000B   8983         MOV       DPH,R1
   \   00000D   78..         MOV       R0,#?V0
   \   00000F   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   E0           MOVX      A,@DPTR
   \   000001   F8           MOV       R0,A
   \   000002   A3           INC       DPTR
   \   000003   E0           MOVX      A,@DPTR
   \   000004   F9           MOV       R1,A
   \   000005   E8           MOV       A,R0
   \   000006   FC           MOV       R4,A
   \   000007   E9           MOV       A,R1
   \   000008   FD           MOV       R5,A
   \   000009                ; Setup parameters for call to function osal_memcpy
   \   000009                ; Setup parameters for call to function osal_memcpy
   \   000009   8882         MOV       DPL,R0
   \   00000B   F583         MOV       DPH,A
   \   00000D   A3           INC       DPTR
   \   00000E   A982         MOV       R1,DPL
   \   000010   AA83         MOV       R2,DPH
   \   000012   89..         MOV       ?V4,R1
   \   000014   8A..         MOV       ?V5,R2
   \   000016   75..00       MOV       ?V6,#0x0
   \   000019   78..         MOV       R0,#?V4
   \   00001B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   7F07         MOV       R7,#0x7
   \   000002   02....       LJMP      ?BANKED_LEAVE_XDATA
    351          
    352          /******************************************************************************
    353                                             uplink
    354          ******************************************************************************/
    355          static ZStatus_t AT_DoorLock_Rsp(uint8 *buf, uint8 len)
    356          {
    357            ZStatus_t result = ZFailure;
    358          
    359            afAddrType_t dstAddr;
    360            dstAddr.addr.shortAddr = NWK_PAN_COORD_ADDR;
    361            dstAddr.addrMode = (afAddrMode_t)Addr16Bit;
    362            dstAddr.endPoint = 0x0B;
    363          
    364            uint8 cmd = 0xFF;
    365            uint8 status = ZCL_STATUS_FAILURE;
    366          
    367            switch(buf[0])
    368            {
    369              case CMD_DOORLOCK_UNLOCK:
    370                cmd = COMMAND_CLOSURES_UNLOCK_DOOR_RSP;
    371                if(buf[1] == UNLOCK_SUCCESS)
    372                  status = ZCL_STATUS_SUCCESS;
    373                else
    374                  status = ZCL_STATUS_FAILURE;
    375                break;
    376          
    377              case CMD_DOORLOCK_LOCK:
    378                cmd = COMMAND_CLOSURES_LOCK_DOOR_RSP;
    379                status = ZCL_STATUS_SUCCESS;
    380                break;
    381          
    382              case CMD_DOORLOCK_SET_TEMPORARY_PIN:
    383                cmd = COMMAND_CLOSURES_SET_TEMPORARY_PIN_RSP;
    384                switch(buf[1])
    385                {
    386                  case SET_TEMPORARY_PIN_SUCCESS:
    387                    status = ZCL_STATUS_SUCCESS;
    388                    break;
    389          
    390                  case SET_TEMPORARY_PIN_FAILED:
    391                    status = ZCL_STATUS_FAILURE;
    392                    break;
    393          
    394                  case SET_TEMPORARY_PIN_SAME_PIN:
    395                    status = ZCL_STATUS_SAME_PIN;
    396                    break;
    397          
    398                  default:
    399                    status = ZCL_STATUS_FAILURE;
    400                    break;
    401                }
    402                break;
    403          
    404              default:
    405                break;
    406            }
    407          
    408            result = zclClosures_SendDoorLockStatusResponse( DOORLOCK_ENDPOINT,
    409                                                             &dstAddr,
    410                                                             cmd,
    411                                                             status,
    412                                                             TRUE,
    413                                                             bdb_getZCLFrameCounter() );
    414          
    415            printf("AF, AT_DoorLock_Rsp: 0x%02X\r\n", result);
    416          
    417            return result;
    418          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    419          static ZStatus_t AT_DoorLock_Upload(uint8 *buf, uint8 len)
   \                     AT_DoorLock_Upload:
    420          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000                REQUIRE ?V6
   \   000000                REQUIRE ?V7
   \   000000                REQUIRE ?V8
   \   000000                REQUIRE ?V9
   \   000000                REQUIRE ?V10
   \   000000                REQUIRE ?V11
   \   000000                REQUIRE ?V12
   \   000000                REQUIRE ?V13
   \   000000   74EA         MOV       A,#-0x16
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 22
   \   000005                ; Auto size: 43
   \   000005   74D5         MOV       A,#-0x2b
   \   000007   12....       LCALL     ?ALLOC_XSTACK8
   \   00000A   EB           MOV       A,R3
   \   00000B   FD           MOV       R5,A
    421            ZStatus_t result = ZFailure;
   \   00000C   7F01         MOV       R7,#0x1
    422          
    423            uint8 flag = EVENT_FLAG_UNKNOWN;
   \   00000E   75..FF       MOV       ?V5,#-0x1
    424          
    425            uint16 userID = 0xFFFF;
   \   000011   75..FF       MOV       ?V0,#-0x1
   \   000014   75..FF       MOV       ?V1,#-0x1
    426            uint32 zigBeeLocalTime = 0xFFFFFFFF;
   \   000017   75..FF       MOV       ?V8,#-0x1
   \   00001A   75..FF       MOV       ?V9,#-0x1
   \   00001D   75..FF       MOV       ?V10,#-0x1
   \   000020   75..FF       MOV       ?V11,#-0x1
    427            uint8 batteryLevel = 0xFF;
   \   000023   75..FF       MOV       ?V4,#-0x1
    428          
    429            uint8 operationEventSource = OPERATION_EVENT_SOURCE_INDETERMINATE;
   \   000026   7EFF         MOV       R6,#-0x1
    430            uint8 operationEventCode = OPERATION_EVENT_CODE_UNKNOWN_OR_MFG_SPECIFIC;
    431          
    432            uint8 programEventSource = OPERATION_EVENT_SOURCE_INDETERMINATE;
   \   000028   79FF         MOV       R1,#-0x1
    433            uint8 programEventCode = PROGRAMMING_EVENT_CODE_UNKNOWN_OR_MFG_SPECIFIC;
   \   00002A   7800         MOV       R0,#0x0
    434          
    435            switch(buf[0])
   \   00002C   8A82         MOV       DPL,R2
   \   00002E   F583         MOV       DPH,A
   \   000030   E0           MOVX      A,@DPTR
   \   000031   24F6         ADD       A,#-0xa
   \   000033   7003         JNZ       $+5
   \   000035   02....       LJMP      ??AT_DoorLock_Upload_0 & 0xFFFF
   \   000038   243C         ADD       A,#0x3c
   \   00003A   6003         JZ        $+5
   \   00003C   02....       LJMP      ??AT_DoorLock_Upload_1 & 0xFFFF
    436            {
    437              case CMD_DOORLOCK_WAKE_UP:
    438                flag = EVENT_FLAG_OPERATION;
    439                operationEventCode = OPERATION_EVENT_CODE_WAKE_UP;
   \   00003F   75..26       MOV       ?V2,#0x26
    440                NLME_SetPollRate(DOORLOCK_POLL_RATE_ACTIVE);
   \   000042                ; Setup parameters for call to function NLME_SetPollRate
   \   000042   90....       MOV       DPTR,#__Constant_12c
   \   000045   12....       LCALL     ?XLOAD_R2345
   \   000048   12....       LCALL     `??NLME_SetPollRate::?relay`; Banked call to: NLME_SetPollRate
    441                osal_start_timerEx(zclDoorLock_TaskID, DOORLOCK_SET_DORMANT_EVT, DOORLOCK_KEEP_ACTIVE_TIME_WAKEUP);
   \   00004B                ; Setup parameters for call to function osal_start_timerEx
   \   00004B   90....       MOV       DPTR,#__Constant_3a98
   \                     ??AT_DoorLock_Upload_2:
   \   00004E   12....       LCALL     ?PUSH_XSTACK8_X_FOUR
   \   000051   7A08         MOV       R2,#0x8
   \   000053   7B00         MOV       R3,#0x0
   \   000055   90....       MOV       DPTR,#zclDoorLock_TaskID
   \   000058   E0           MOVX      A,@DPTR
   \   000059   F9           MOV       R1,A
   \   00005A   12....       LCALL     `??osal_start_timerEx::?relay`; Banked call to: osal_start_timerEx
   \   00005D   7404         MOV       A,#0x4
   \   00005F   12....       LCALL     ?DEALLOC_XSTACK8
    442                break;
    443          
    444              case CMD_DOORLOCK_EVT_UPLOAD:
    445                switch(buf[13])
    446                {
    447                  case EVT_DOORLOCK_UPLOAD_ADD_USER:
    448                    flag = EVENT_FLAG_PROGRAMMING;
    449                    userID = (buf[15]<<8) | buf[16];
    450                    batteryLevel = buf[10];
    451                    programEventSource = OPERATION_EVENT_SOURCE_KEYPAD;
    452                    programEventCode = AT_DoorLock_GetProgramEventCode_Add_User( buf[14] );
    453                    break;
    454          
    455                  case EVT_DOORLOCK_UPLOAD_DELETE_USER:
    456                    flag = EVENT_FLAG_PROGRAMMING;
    457                    userID = (buf[15]<<8) | buf[16];
    458                    batteryLevel = buf[10];
    459                    programEventSource = OPERATION_EVENT_SOURCE_KEYPAD;
    460                    programEventCode = AT_DoorLock_GetProgramEventCode_Delete_User( buf[14] );
    461                    break;
    462          
    463                  case EVT_DOORLOCK_UPLOAD_UNLOCK:
    464                    flag = EVENT_FLAG_OPERATION;
    465                    userID = (buf[15]<<8) | buf[16];
    466                    zigBeeLocalTime = UTCTime_To_SEC( &buf[17] );
    467                    batteryLevel = buf[10];
    468                    operationEventSource = AT_DoorLock_GetOperationEventSource( buf[14] );
    469                    operationEventCode = OPERATION_EVENT_CODE_UNLOCK;
    470                    osal_set_event(zclDoorLock_TaskID, DOORLOCK_REPORT_UNLOCK_EVT);
    471                    break;
    472          
    473                  case EVT_DOORLOCK_UPLOAD_FORCE_PRY_LOCK:
    474                    flag = EVENT_FLAG_OPERATION;
    475                    batteryLevel = buf[10];
    476                    operationEventCode = OPERATION_EVENT_CODE_FORCE_PRY_LOCK;
    477                    break;
    478          
    479                  case EVT_DOORLOCK_UPLOAD_ENTER_LOCKED_STATE:
    480                    flag = EVENT_FLAG_OPERATION;
    481                    batteryLevel = buf[10];
    482                    operationEventCode = OPERATION_EVENT_CODE_ENTER_LOCKED_STATE;
    483                    break;
    484          
    485                  case EVT_DOORLOCK_UPLOAD_LOW_POWER:
    486                    flag = EVENT_FLAG_OPERATION;
    487                    batteryLevel = buf[10];
    488                    operationEventCode = OPERATION_EVENT_CODE_LOW_POWER;
    489                    break;
    490          
    491                  case EVT_DOORLOCK_UPLOAD_DOORBELL:
    492                    flag = EVENT_FLAG_OPERATION;
    493                    batteryLevel = buf[10];
    494                    operationEventCode = OPERATION_EVENT_CODE_DOORBELL;
    495                    NLME_SetPollRate(DOORLOCK_POLL_RATE_ACTIVE);
    496                    osal_start_timerEx(zclDoorLock_TaskID, DOORLOCK_SET_DORMANT_EVT, DOORLOCK_KEEP_ACTIVE_TIME_DOORBELL);
    497                    break;
    498          
    499                  case EVT_DOORLOCK_UPLOAD_EXIT_LOCKED_STATE:
    500                    flag = EVENT_FLAG_OPERATION;
    501                    batteryLevel = buf[10];
    502                    operationEventCode = OPERATION_EVENT_CODE_EXIT_LOCKED_STATE;
    503                    break;
    504          
    505                  default:
    506                    break;
    507                }
    508                break;
    509          
    510              default:
    511                break;
    512            }
    513          
    514            if(flag == EVENT_FLAG_OPERATION)
    515            {
    516              result = AT_DoorLock_SendOperationEventNotification( userID,
    517                                                                   zigBeeLocalTime,
    518                                                                   batteryLevel,
    519                                                                   operationEventSource,
    520                                                                   operationEventCode );
   \                     ??AT_DoorLock_Upload_3:
   \   000062   741C         MOV       A,#0x1c
   \   000064   12....       LCALL     ?XSTACK_DISP0_8
   \   000067   7402         MOV       A,#0x2
   \   000069   F0           MOVX      @DPTR,A
   \   00006A   7414         MOV       A,#0x14
   \   00006C   12....       LCALL     ?XSTACK_DISP0_8
   \   00006F   E4           CLR       A
   \   000070   F0           MOVX      @DPTR,A
   \   000071   A3           INC       DPTR
   \   000072   F0           MOVX      @DPTR,A
   \   000073   741D         MOV       A,#0x1d
   \   000075   12....       LCALL     ?XSTACK_DISP0_8
   \   000078   740B         MOV       A,#0xb
   \   00007A   F0           MOVX      @DPTR,A
   \   00007B   7420         MOV       A,#0x20
   \   00007D   12....       LCALL     ?XSTACK_DISP0_8
   \   000080   EE           MOV       A,R6
   \   000081   F0           MOVX      @DPTR,A
   \   000082   7421         MOV       A,#0x21
   \   000084   12....       LCALL     ?XSTACK_DISP0_8
   \   000087   E5..         MOV       A,?V2
   \   000089   F0           MOVX      @DPTR,A
   \   00008A   7422         MOV       A,#0x22
   \   00008C   12....       LCALL     ?XSTACK_DISP0_8
   \   00008F   E5..         MOV       A,?V0
   \   000091   F0           MOVX      @DPTR,A
   \   000092   A3           INC       DPTR
   \   000093   E5..         MOV       A,?V1
   \   000095   F0           MOVX      @DPTR,A
   \   000096   7424         MOV       A,#0x24
   \   000098   12....       LCALL     ?XSTACK_DISP0_8
   \   00009B   E5..         MOV       A,?V4
   \   00009D   F0           MOVX      @DPTR,A
   \   00009E   7425         MOV       A,#0x25
   \   0000A0   12....       LCALL     ?XSTACK_DISP0_8
   \   0000A3   78..         MOV       R0,#?V8
   \   0000A5   12....       LCALL     ?L_MOV_TO_X
   \   0000A8                ; Setup parameters for call to function osal_mem_alloc
   \   0000A8   7A01         MOV       R2,#0x1
   \   0000AA   7B00         MOV       R3,#0x0
   \   0000AC   12....       LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
   \   0000AF   7429         MOV       A,#0x29
   \   0000B1   12....       LCALL     ?XSTACK_DISP0_8
   \   0000B4   12....       LCALL     ?Subroutine11 & 0xFFFF
   \                     ??CrossCallReturnLabel_22:
   \   0000B7                ; Setup parameters for call to function zclClosures_SendDoorLockOperationEventNotification
   \   0000B7   F5..         MOV       ?V0,A
   \   0000B9   78..         MOV       R0,#?V0
   \   0000BB   12....       LCALL     ?PUSH_XSTACK_I_ONE
   \   0000BE   8F..         MOV       ?V0,R7
   \   0000C0   78..         MOV       R0,#?V0
   \   0000C2   12....       LCALL     ?PUSH_XSTACK_I_ONE
   \   0000C5   7422         MOV       A,#0x22
   \   0000C7   12....       LCALL     ?XSTACK_DISP102_8
   \   0000CA   7416         MOV       A,#0x16
   \   0000CC   12....       LCALL     ?XSTACK_DISP101_8
   \   0000CF   790A         MOV       R1,#0xa
   \   0000D1   12....       LCALL     ??zclClosures_SendDoorLockOperationEventNotific; Banked call to: zclClosures_SendDoorLockOperationEventNotification
   \   0000D4   7402         MOV       A,#0x2
   \   0000D6   12....       LCALL     ?DEALLOC_XSTACK8
   \   0000D9   E9           MOV       A,R1
   \   0000DA   FE           MOV       R6,A
   \   0000DB                ; Setup parameters for call to function osal_mem_free
   \   0000DB   7429         MOV       A,#0x29
   \   0000DD   12....       LCALL     ?XSTACK_DISP0_8
   \   0000E0   12....       LCALL     ?Subroutine5 & 0xFFFF
    521          
    522              printf("AF, EVENT_FLAG_OPERATION: 0x%02X\r\n", result);
    523            }
   \                     ??CrossCallReturnLabel_7:
   \   0000E3   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   0000E6   7A..         MOV       R2,#`?<Constant "AF, EVENT_FLAG_OPERAT...">` & 0xff
   \   0000E8   7B..         MOV       R3,#(`?<Constant "AF, EVENT_FLAG_OPERAT...">` >> 8) & 0xff
   \                     ??AT_DoorLock_Upload_4:
   \   0000EA   12....       LCALL     ??Subroutine22_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_44:
   \   0000ED   12....       LCALL     ?DEALLOC_XSTACK8
    524            else if(flag == EVENT_FLAG_PROGRAMMING)
    525            {
    526              result = AT_DoorLock_SendProgrammingEventNotification( userID,
    527                                                                     zigBeeLocalTime,
    528                                                                     batteryLevel,
    529                                                                     programEventSource,
    530                                                                     programEventCode );
    531          
    532              printf("AF, EVENT_FLAG_PROGRAMMING: 0x%02X\r\n", result);
    533            }
    534            else
    535            {
    536              result = ZFailure;
    537              printf("AF, EVENT_FLAG_UNKNOWN: 0x%02X\r\n", result);
    538            }
    539          
    540            if(result == ZNwkInvalidRequest)
   \   0000F0   74C2         MOV       A,#-0x3e
   \   0000F2   6F           XRL       A,R7
   \   0000F3   7018         JNZ       ??AT_DoorLock_Upload_5
    541            {
    542              osal_stop_timerEx(zclATApp_TaskID, ATAPP_END_DEVICE_REJOIN_EVT);
   \   0000F5                ; Setup parameters for call to function osal_stop_timerEx
   \   0000F5   7A01         MOV       R2,#0x1
   \   0000F7   7B00         MOV       R3,#0x0
   \   0000F9   90....       MOV       DPTR,#zclATApp_TaskID
   \   0000FC   E0           MOVX      A,@DPTR
   \   0000FD   F9           MOV       R1,A
   \   0000FE   12....       LCALL     `??osal_stop_timerEx::?relay`; Banked call to: osal_stop_timerEx
    543              osal_set_event(zclATApp_TaskID, ATAPP_END_DEVICE_REJOIN_EVT);
   \   000101                ; Setup parameters for call to function osal_set_event
   \   000101   7A01         MOV       R2,#0x1
   \   000103   7B00         MOV       R3,#0x0
   \   000105   90....       MOV       DPTR,#zclATApp_TaskID
   \   000108   E0           MOVX      A,@DPTR
   \   000109   F9           MOV       R1,A
   \   00010A   12....       LCALL     `??osal_set_event::?relay`; Banked call to: osal_set_event
    544            }
    545          
    546            return result;
   \                     ??AT_DoorLock_Upload_5:
   \   00010D   EF           MOV       A,R7
   \   00010E   F9           MOV       R1,A
   \   00010F   742B         MOV       A,#0x2b
   \   000111   12....       LCALL     ?DEALLOC_XSTACK8
   \   000114   7F0E         MOV       R7,#0xe
   \   000116   02....       LJMP      ?BANKED_LEAVE_XDATA
   \                     ??AT_DoorLock_Upload_0:
   \   000119   EA           MOV       A,R2
   \   00011A   240E         ADD       A,#0xe
   \   00011C   F5..         MOV       ?V12,A
   \   00011E   E4           CLR       A
   \   00011F   3D           ADDC      A,R5
   \   000120   F5..         MOV       ?V13,A
   \   000122   EA           MOV       A,R2
   \   000123   240A         ADD       A,#0xa
   \   000125   F5..         MOV       ?V2,A
   \   000127   E4           CLR       A
   \   000128   3D           ADDC      A,R5
   \   000129   F5..         MOV       ?V3,A
   \   00012B   EA           MOV       A,R2
   \   00012C   240D         ADD       A,#0xd
   \   00012E   F582         MOV       DPL,A
   \   000130   E4           CLR       A
   \   000131   3D           ADDC      A,R5
   \   000132   F583         MOV       DPH,A
   \   000134   E0           MOVX      A,@DPTR
   \   000135   14           DEC       A
   \   000136   7003         JNZ       $+5
   \   000138   02....       LJMP      ??AT_DoorLock_Upload_6 & 0xFFFF
   \   00013B   14           DEC       A
   \   00013C   7003         JNZ       $+5
   \   00013E   02....       LJMP      ??AT_DoorLock_Upload_7 & 0xFFFF
   \   000141   14           DEC       A
   \   000142   7003         JNZ       $+5
   \   000144   02....       LJMP      ??AT_DoorLock_Upload_8 & 0xFFFF
   \   000147   14           DEC       A
   \   000148   6054         JZ        ??AT_DoorLock_Upload_9
   \   00014A   24FC         ADD       A,#-0x4
   \   00014C   6014         JZ        ??AT_DoorLock_Upload_10
   \   00014E   14           DEC       A
   \   00014F   602F         JZ        ??AT_DoorLock_Upload_11
   \   000151   24FC         ADD       A,#-0x4
   \   000153   7003         JNZ       $+5
   \   000155   02....       LJMP      ??AT_DoorLock_Upload_12 & 0xFFFF
   \   000158   24F8         ADD       A,#-0x8
   \   00015A   7003         JNZ       $+5
   \   00015C   02....       LJMP      ??AT_DoorLock_Upload_13 & 0xFFFF
   \   00015F   02....       LJMP      ??AT_DoorLock_Upload_1 & 0xFFFF
   \                     ??AT_DoorLock_Upload_10:
   \   000162   12....       LCALL     ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_0:
   \   000165   6014         JZ        ??AT_DoorLock_Upload_14
   \   000167   14           DEC       A
   \   000168   600C         JZ        ??AT_DoorLock_Upload_15
   \   00016A   24FE         ADD       A,#-0x2
   \   00016C   6003         JZ        $+5
   \   00016E   02....       LJMP      ??AT_DoorLock_Upload_1 & 0xFFFF
   \   000171   7805         MOV       R0,#0x5
   \   000173   02....       LJMP      ??AT_DoorLock_Upload_16 & 0xFFFF
   \                     ??AT_DoorLock_Upload_15:
   \   000176   7802         MOV       R0,#0x2
   \   000178   02....       LJMP      ??AT_DoorLock_Upload_16 & 0xFFFF
   \                     ??AT_DoorLock_Upload_14:
   \   00017B   7807         MOV       R0,#0x7
   \   00017D   02....       LJMP      ??AT_DoorLock_Upload_16 & 0xFFFF
   \                     ??AT_DoorLock_Upload_11:
   \   000180   12....       LCALL     ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_1:
   \   000183   6014         JZ        ??AT_DoorLock_Upload_17
   \   000185   14           DEC       A
   \   000186   600C         JZ        ??AT_DoorLock_Upload_18
   \   000188   24FE         ADD       A,#-0x2
   \   00018A   6003         JZ        $+5
   \   00018C   02....       LJMP      ??AT_DoorLock_Upload_1 & 0xFFFF
   \   00018F   7806         MOV       R0,#0x6
   \   000191   02....       LJMP      ??AT_DoorLock_Upload_16 & 0xFFFF
   \                     ??AT_DoorLock_Upload_18:
   \   000194   7803         MOV       R0,#0x3
   \   000196   02....       LJMP      ??AT_DoorLock_Upload_16 & 0xFFFF
   \                     ??AT_DoorLock_Upload_17:
   \   000199   7808         MOV       R0,#0x8
   \   00019B   02....       LJMP      ??AT_DoorLock_Upload_16 & 0xFFFF
   \                     ??AT_DoorLock_Upload_9:
   \   00019E   12....       LCALL     ?Subroutine20 & 0xFFFF
   \                     ??CrossCallReturnLabel_37:
   \   0001A1   F9           MOV       R1,A
   \   0001A2   12....       LCALL     ?Subroutine19 & 0xFFFF
   \                     ??CrossCallReturnLabel_35:
   \   0001A5   E9           MOV       A,R1
   \   0001A6   F5..         MOV       ?V1,A
   \   0001A8   EA           MOV       A,R2
   \   0001A9   2411         ADD       A,#0x11
   \   0001AB   F8           MOV       R0,A
   \   0001AC   E4           CLR       A
   \   0001AD   3D           ADDC      A,R5
   \   0001AE   F9           MOV       R1,A
   \   0001AF   8882         MOV       DPL,R0
   \   0001B1   F583         MOV       DPH,A
   \   0001B3   E0           MOVX      A,@DPTR
   \   0001B4   24D0         ADD       A,#-0x30
   \   0001B6   FA           MOV       R2,A
   \   0001B7   E4           CLR       A
   \   0001B8   3407         ADDC      A,#0x7
   \   0001BA   FB           MOV       R3,A
   \   0001BB   7405         MOV       A,#0x5
   \   0001BD   12....       LCALL     ?XSTACK_DISP0_8
   \   0001C0   EA           MOV       A,R2
   \   0001C1   F0           MOVX      @DPTR,A
   \   0001C2   A3           INC       DPTR
   \   0001C3   EB           MOV       A,R3
   \   0001C4   12....       LCALL     ?Subroutine15 & 0xFFFF
   \                     ??CrossCallReturnLabel_30:
   \   0001C7   E0           MOVX      A,@DPTR
   \   0001C8   C0E0         PUSH      A
   \   0001CA   7404         MOV       A,#0x4
   \   0001CC   12....       LCALL     ?XSTACK_DISP0_8
   \   0001CF   D0E0         POP       A
   \   0001D1   12....       LCALL     ?Subroutine15 & 0xFFFF
   \                     ??CrossCallReturnLabel_31:
   \   0001D4   A3           INC       DPTR
   \   0001D5   E0           MOVX      A,@DPTR
   \   0001D6   C0E0         PUSH      A
   \   0001D8   7403         MOV       A,#0x3
   \   0001DA   12....       LCALL     ?XSTACK_DISP0_8
   \   0001DD   D0E0         POP       A
   \   0001DF   12....       LCALL     ?Subroutine15 & 0xFFFF
   \                     ??CrossCallReturnLabel_32:
   \   0001E2   A3           INC       DPTR
   \   0001E3   A3           INC       DPTR
   \   0001E4   E0           MOVX      A,@DPTR
   \   0001E5   C0E0         PUSH      A
   \   0001E7   7402         MOV       A,#0x2
   \   0001E9   12....       LCALL     ?XSTACK_DISP0_8
   \   0001EC   D0E0         POP       A
   \   0001EE   12....       LCALL     ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_28:
   \   0001F1   E0           MOVX      A,@DPTR
   \   0001F2   C0E0         PUSH      A
   \   0001F4   EF           MOV       A,R7
   \   0001F5   12....       LCALL     ?XSTACK_DISP0_8
   \   0001F8   D0E0         POP       A
   \   0001FA   12....       LCALL     ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_29:
   \   0001FD   A3           INC       DPTR
   \   0001FE   E0           MOVX      A,@DPTR
   \   0001FF   85..82       MOV       DPL,?XSP + 0
   \   000202   85..83       MOV       DPH,?XSP + 1
   \   000205   F0           MOVX      @DPTR,A
   \   000206                ; Setup parameters for call to function osal_ConvertUTCSecs
   \   000206   AA..         MOV       R2,?XSP + 0
   \   000208   AB..         MOV       R3,?XSP + 1
   \   00020A   12....       LCALL     `??osal_ConvertUTCSecs::?relay`; Banked call to: osal_ConvertUTCSecs
   \   00020D   8A..         MOV       ?V8,R2
   \   00020F   8B..         MOV       ?V9,R3
   \   000211   8C..         MOV       ?V10,R4
   \   000213   8D..         MOV       ?V11,R5
   \   000215   85..82       MOV       DPL,?V2
   \   000218   85..83       MOV       DPH,?V3
   \   00021B   E0           MOVX      A,@DPTR
   \   00021C   F5..         MOV       ?V4,A
   \   00021E   85..82       MOV       DPL,?V12
   \   000221   85..83       MOV       DPH,?V13
   \   000224   E0           MOVX      A,@DPTR
   \   000225   14           DEC       A
   \   000226   602F         JZ        ??AT_DoorLock_Upload_19
   \   000228   14           DEC       A
   \   000229   6028         JZ        ??AT_DoorLock_Upload_20
   \   00022B   24FE         ADD       A,#-0x2
   \   00022D   6020         JZ        ??AT_DoorLock_Upload_21
   \   00022F   24FC         ADD       A,#-0x4
   \   000231   6018         JZ        ??AT_DoorLock_Upload_22
   \   000233   24E8         ADD       A,#-0x18
   \   000235   6010         JZ        ??AT_DoorLock_Upload_23
   \   000237   24E0         ADD       A,#-0x20
   \   000239   6008         JZ        ??AT_DoorLock_Upload_24
   \   00023B   24C0         ADD       A,#-0x40
   \   00023D   701A         JNZ       ??AT_DoorLock_Upload_25
   \   00023F   7E01         MOV       R6,#0x1
   \   000241   8016         SJMP      ??AT_DoorLock_Upload_25
   \                     ??AT_DoorLock_Upload_24:
   \   000243   7E06         MOV       R6,#0x6
   \   000245   8012         SJMP      ??AT_DoorLock_Upload_25
   \                     ??AT_DoorLock_Upload_23:
   \   000247   7E02         MOV       R6,#0x2
   \   000249   800E         SJMP      ??AT_DoorLock_Upload_25
   \                     ??AT_DoorLock_Upload_22:
   \   00024B   7E05         MOV       R6,#0x5
   \   00024D   800A         SJMP      ??AT_DoorLock_Upload_25
   \                     ??AT_DoorLock_Upload_21:
   \   00024F   7E03         MOV       R6,#0x3
   \   000251   8006         SJMP      ??AT_DoorLock_Upload_25
   \                     ??AT_DoorLock_Upload_20:
   \   000253   7E00         MOV       R6,#0x0
   \   000255   8002         SJMP      ??AT_DoorLock_Upload_25
   \                     ??AT_DoorLock_Upload_19:
   \   000257   7E04         MOV       R6,#0x4
   \                     ??AT_DoorLock_Upload_25:
   \   000259   75..02       MOV       ?V2,#0x2
   \   00025C                ; Setup parameters for call to function osal_set_event
   \   00025C   7A04         MOV       R2,#0x4
   \   00025E   7B00         MOV       R3,#0x0
   \   000260   90....       MOV       DPTR,#zclDoorLock_TaskID
   \   000263   E0           MOVX      A,@DPTR
   \   000264   F9           MOV       R1,A
   \   000265   12....       LCALL     `??osal_set_event::?relay`; Banked call to: osal_set_event
   \   000268   02....       LJMP      ??AT_DoorLock_Upload_3 & 0xFFFF
   \                     ??AT_DoorLock_Upload_6:
   \   00026B   85..82       MOV       DPL,?V2
   \   00026E   85..83       MOV       DPH,?V3
   \   000271   E0           MOVX      A,@DPTR
   \   000272   F5..         MOV       ?V4,A
   \   000274   75..21       MOV       ?V2,#0x21
   \   000277   02....       LJMP      ??AT_DoorLock_Upload_3 & 0xFFFF
   \                     ??AT_DoorLock_Upload_7:
   \   00027A   85..82       MOV       DPL,?V2
   \   00027D   85..83       MOV       DPH,?V3
   \   000280   E0           MOVX      A,@DPTR
   \   000281   F5..         MOV       ?V4,A
   \   000283   75..22       MOV       ?V2,#0x22
   \   000286   02....       LJMP      ??AT_DoorLock_Upload_3 & 0xFFFF
   \                     ??AT_DoorLock_Upload_8:
   \   000289   85..82       MOV       DPL,?V2
   \   00028C   85..83       MOV       DPH,?V3
   \   00028F   E0           MOVX      A,@DPTR
   \   000290   F5..         MOV       ?V4,A
   \   000292   75..23       MOV       ?V2,#0x23
   \   000295   02....       LJMP      ??AT_DoorLock_Upload_3 & 0xFFFF
   \                     ??AT_DoorLock_Upload_12:
   \   000298   85..82       MOV       DPL,?V2
   \   00029B   85..83       MOV       DPH,?V3
   \   00029E   E0           MOVX      A,@DPTR
   \   00029F   F5..         MOV       ?V4,A
   \   0002A1   75..24       MOV       ?V2,#0x24
   \   0002A4                ; Setup parameters for call to function NLME_SetPollRate
   \   0002A4   90....       MOV       DPTR,#__Constant_12c
   \   0002A7   12....       LCALL     ?XLOAD_R2345
   \   0002AA   12....       LCALL     `??NLME_SetPollRate::?relay`; Banked call to: NLME_SetPollRate
   \   0002AD                ; Setup parameters for call to function osal_start_timerEx
   \   0002AD   90....       MOV       DPTR,#__Constant_4650
   \   0002B0   02....       LJMP      ??AT_DoorLock_Upload_2 & 0xFFFF
   \                     ??AT_DoorLock_Upload_13:
   \   0002B3   85..82       MOV       DPL,?V2
   \   0002B6   85..83       MOV       DPH,?V3
   \   0002B9   E0           MOVX      A,@DPTR
   \   0002BA   F5..         MOV       ?V4,A
   \   0002BC   75..25       MOV       ?V2,#0x25
   \   0002BF   02....       LJMP      ??AT_DoorLock_Upload_3 & 0xFFFF
   \                     ??AT_DoorLock_Upload_1:
   \   0002C2   7402         MOV       A,#0x2
   \   0002C4   65..         XRL       A,?V5
   \   0002C6   6003         JZ        $+5
   \   0002C8   02....       LJMP      ??AT_DoorLock_Upload_26 & 0xFFFF
   \                     ??AT_DoorLock_Upload_16:
   \   0002CB   741C         MOV       A,#0x1c
   \   0002CD   12....       LCALL     ?XSTACK_DISP0_8
   \   0002D0   7402         MOV       A,#0x2
   \   0002D2   F0           MOVX      @DPTR,A
   \   0002D3   7414         MOV       A,#0x14
   \   0002D5   12....       LCALL     ?XSTACK_DISP0_8
   \   0002D8   E4           CLR       A
   \   0002D9   F0           MOVX      @DPTR,A
   \   0002DA   A3           INC       DPTR
   \   0002DB   F0           MOVX      @DPTR,A
   \   0002DC   741D         MOV       A,#0x1d
   \   0002DE   12....       LCALL     ?XSTACK_DISP0_8
   \   0002E1   740B         MOV       A,#0xb
   \   0002E3   F0           MOVX      @DPTR,A
   \   0002E4   7407         MOV       A,#0x7
   \   0002E6   12....       LCALL     ?XSTACK_DISP0_8
   \   0002E9   E9           MOV       A,R1
   \   0002EA   F0           MOVX      @DPTR,A
   \   0002EB   7408         MOV       A,#0x8
   \   0002ED   12....       LCALL     ?XSTACK_DISP0_8
   \   0002F0   E8           MOV       A,R0
   \   0002F1   F0           MOVX      @DPTR,A
   \   0002F2   7409         MOV       A,#0x9
   \   0002F4   12....       LCALL     ?XSTACK_DISP0_8
   \   0002F7   E5..         MOV       A,?V0
   \   0002F9   F0           MOVX      @DPTR,A
   \   0002FA   A3           INC       DPTR
   \   0002FB   E5..         MOV       A,?V1
   \   0002FD   F0           MOVX      @DPTR,A
   \   0002FE   740B         MOV       A,#0xb
   \   000300   12....       LCALL     ?XSTACK_DISP0_8
   \   000303   E5..         MOV       A,?V4
   \   000305   F0           MOVX      @DPTR,A
   \   000306   740C         MOV       A,#0xc
   \   000308   12....       LCALL     ?XSTACK_DISP0_8
   \   00030B   E4           CLR       A
   \   00030C   F0           MOVX      @DPTR,A
   \   00030D   740D         MOV       A,#0xd
   \   00030F   12....       LCALL     ?XSTACK_DISP0_8
   \   000312   E4           CLR       A
   \   000313   F0           MOVX      @DPTR,A
   \   000314   740E         MOV       A,#0xe
   \   000316   12....       LCALL     ?XSTACK_DISP0_8
   \   000319   EE           MOV       A,R6
   \   00031A   F0           MOVX      @DPTR,A
   \   00031B   A3           INC       DPTR
   \   00031C   F0           MOVX      @DPTR,A
   \   00031D   A3           INC       DPTR
   \   00031E   F0           MOVX      @DPTR,A
   \   00031F   A3           INC       DPTR
   \   000320   F0           MOVX      @DPTR,A
   \   000321                ; Setup parameters for call to function osal_mem_alloc
   \   000321   7A01         MOV       R2,#0x1
   \   000323   7B00         MOV       R3,#0x0
   \   000325   12....       LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
   \   000328   7412         MOV       A,#0x12
   \   00032A   12....       LCALL     ?XSTACK_DISP0_8
   \   00032D   12....       LCALL     ?Subroutine11 & 0xFFFF
   \                     ??CrossCallReturnLabel_23:
   \   000330   F8           MOV       R0,A
   \   000331                ; Setup parameters for call to function zclClosures_SendDoorLockProgrammingEventNotification
   \   000331   F5..         MOV       ?V0,A
   \   000333   78..         MOV       R0,#?V0
   \   000335   12....       LCALL     ?PUSH_XSTACK_I_ONE
   \   000338   8F..         MOV       ?V0,R7
   \   00033A   78..         MOV       R0,#?V0
   \   00033C   12....       LCALL     ?PUSH_XSTACK_I_ONE
   \   00033F   7409         MOV       A,#0x9
   \   000341   12....       LCALL     ?XSTACK_DISP102_8
   \   000344   7416         MOV       A,#0x16
   \   000346   12....       LCALL     ?XSTACK_DISP101_8
   \   000349   790A         MOV       R1,#0xa
   \   00034B   12....       LCALL     ??zclClosures_SendDoorLockProgrammingEventNotif; Banked call to: zclClosures_SendDoorLockProgrammingEventNotification
   \   00034E   7402         MOV       A,#0x2
   \   000350   12....       LCALL     ?DEALLOC_XSTACK8
   \   000353   E9           MOV       A,R1
   \   000354   FE           MOV       R6,A
   \   000355                ; Setup parameters for call to function osal_mem_free
   \   000355   7412         MOV       A,#0x12
   \   000357   12....       LCALL     ?XSTACK_DISP0_8
   \   00035A   12....       LCALL     ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_8:
   \   00035D   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000360   7A..         MOV       R2,#`?<Constant "AF, EVENT_FLAG_PROGRA...">` & 0xff
   \   000362   7B..         MOV       R3,#(`?<Constant "AF, EVENT_FLAG_PROGRA...">` >> 8) & 0xff
   \   000364   02....       LJMP      ??AT_DoorLock_Upload_4 & 0xFFFF
   \                     ??AT_DoorLock_Upload_26:
   \   000367                ; Setup parameters for call to function printf
   \   000367   8F..         MOV       ?V0,R7
   \   000369   88..         MOV       ?V1,R0
   \   00036B   78..         MOV       R0,#?V0
   \   00036D   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000370   7A..         MOV       R2,#`?<Constant "AF, EVENT_FLAG_UNKNOW...">` & 0xff
   \   000372   7B..         MOV       R3,#(`?<Constant "AF, EVENT_FLAG_UNKNOW...">` >> 8) & 0xff
   \   000374   12....       LCALL     ??Subroutine22_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_45:
   \   000377   12....       LCALL     ?DEALLOC_XSTACK8
   \   00037A   02....       LJMP      ??AT_DoorLock_Upload_5 & 0xFFFF
    547          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine15:
   \   000000   F0           MOVX      @DPTR,A
   \   000001   8882         MOV       DPL,R0
   \   000003   8983         MOV       DPH,R1
   \   000005   A3           INC       DPTR
   \   000006   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine14:
   \   000000   F0           MOVX      @DPTR,A
   \   000001   8882         MOV       DPL,R0
   \   000003   8983         MOV       DPH,R1
   \   000005   A3           INC       DPTR
   \   000006   A3           INC       DPTR
   \   000007   A3           INC       DPTR
   \   000008   A3           INC       DPTR
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   E0           MOVX      A,@DPTR
   \   000001   FA           MOV       R2,A
   \   000002   A3           INC       DPTR
   \   000003   E0           MOVX      A,@DPTR
   \   000004   FB           MOV       R3,A
   \   000005   12....       LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
   \   000008   EE           MOV       A,R6
   \   000009   FF           MOV       R7,A
   \   00000A                ; Setup parameters for call to function printf
   \   00000A                ; Setup parameters for call to function printf
   \   00000A   F5..         MOV       ?V0,A
   \   00000C   75..00       MOV       ?V1,#0x0
   \   00000F   78..         MOV       R0,#?V0
   \   000011   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   75..02       MOV       ?V5,#0x2
   \   000003   12....       LCALL     ?Subroutine20 & 0xFFFF
   \                     ??CrossCallReturnLabel_38:
   \   000006   FB           MOV       R3,A
   \   000007   12....       LCALL     ?Subroutine19 & 0xFFFF
   \                     ??CrossCallReturnLabel_36:
   \   00000A   EB           MOV       A,R3
   \   00000B   F5..         MOV       ?V1,A
   \   00000D   85..82       MOV       DPL,?V2
   \   000010   85..83       MOV       DPH,?V3
   \   000013   E0           MOVX      A,@DPTR
   \   000014   F5..         MOV       ?V4,A
   \   000016   7900         MOV       R1,#0x0
   \   000018   85..82       MOV       DPL,?V12
   \   00001B   85..83       MOV       DPH,?V13
   \   00001E   E0           MOVX      A,@DPTR
   \   00001F   14           DEC       A
   \   000020   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine20:
   \   000000   EA           MOV       A,R2
   \   000001   240F         ADD       A,#0xf
   \   000003   F582         MOV       DPL,A
   \   000005   E4           CLR       A
   \   000006   3D           ADDC      A,R5
   \   000007   F583         MOV       DPH,A
   \   000009   E0           MOVX      A,@DPTR
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine19:
   \   000000   EA           MOV       A,R2
   \   000001   2410         ADD       A,#0x10
   \   000003   F582         MOV       DPL,A
   \   000005   E4           CLR       A
   \   000006   3D           ADDC      A,R5
   \   000007   F583         MOV       DPH,A
   \   000009   E0           MOVX      A,@DPTR
   \   00000A   F5..         MOV       ?V0,A
   \   00000C   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine22_0:
   \   000000   12....       LCALL     `??printf::?relay`; Banked call to: printf
   \   000003   7402         MOV       A,#0x2
   \   000005   22           RET
    548          static ZStatus_t AT_DoorLock_Ack(uint8 *buf, uint8 len)
    549          {
    550            uint8 ackBuf[2] = {0xE0, 0x1F};
    551          
    552            AT_single_bus_send_buf(ackBuf, 2);
    553          
    554            return ZSuccess;
    555          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    556          ZStatus_t AT_DoorLock_Handle_Rsp(uint8 *buf, uint8 len)
   \                     AT_DoorLock_Handle_Rsp:
    557          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000                REQUIRE ?V6
   \   000000   74F1         MOV       A,#-0xf
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 15
   \   000005                ; Auto size: 14
   \   000005   74F2         MOV       A,#-0xe
   \   000007   12....       LCALL     ?ALLOC_XSTACK8
   \   00000A   EA           MOV       A,R2
   \   00000B   FE           MOV       R6,A
   \   00000C   EB           MOV       A,R3
   \   00000D   FF           MOV       R7,A
   \   00000E   89..         MOV       ?V6,R1
    558            ZStatus_t status = ZSuccess;
   \   000010   75..00       MOV       ?V2,#0x0
    559            uint8 i;
    560          
    561            if(sum_check(buf, len-1) == buf[len-1])
   \   000013                ; Setup parameters for call to function sum_check
   \   000013   19           DEC       R1
   \   000014   12....       LCALL     `??sum_check::?relay`; Banked call to: sum_check
   \   000017   E9           MOV       A,R1
   \   000018   FA           MOV       R2,A
   \   000019   75....       MOV       ?V0,#`?<Constant "%02X ">` & 0xff
   \   00001C   75....       MOV       ?V1,#(`?<Constant "%02X ">` >> 8) & 0xff
   \   00001F   E5..         MOV       A,?V6
   \   000021   F5..         MOV       ?V4,A
   \   000023   75..00       MOV       ?V5,#0x0
   \   000026   EE           MOV       A,R6
   \   000027   25..         ADD       A,?V4
   \   000029   F8           MOV       R0,A
   \   00002A   E4           CLR       A
   \   00002B   3F           ADDC      A,R7
   \   00002C   F9           MOV       R1,A
   \   00002D   E8           MOV       A,R0
   \   00002E   24FF         ADD       A,#-0x1
   \   000030   F582         MOV       DPL,A
   \   000032   E9           MOV       A,R1
   \   000033   34FF         ADDC      A,#-0x1
   \   000035   F583         MOV       DPH,A
   \   000037   E0           MOVX      A,@DPTR
   \   000038   6A           XRL       A,R2
   \   000039   78..         MOV       R0,#?V4
   \   00003B   6003         JZ        $+5
   \   00003D   02....       LJMP      ??AT_DoorLock_Handle_Rsp_0 & 0xFFFF
    562            {
    563              printf("| up |right|%02d bytes|: ", len);
   \   000040                ; Setup parameters for call to function printf
   \   000040   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000043   7A..         MOV       R2,#`?<Constant "| up |right|%02d byte...">` & 0xff
   \   000045   7B..         MOV       R3,#(`?<Constant "| up |right|%02d byte...">` >> 8) & 0xff
   \   000047   12....       LCALL     ??Subroutine22_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_46:
   \   00004A   12....       LCALL     ?DEALLOC_XSTACK8
    564              for(i=0; i<len; i++)
   \   00004D   75..00       MOV       ?V3,#0x0
   \   000050   800E         SJMP      ??AT_DoorLock_Handle_Rsp_1
    565              {
    566                printf("%02X ", buf[i]);
   \                     ??AT_DoorLock_Handle_Rsp_2:
   \   000052                ; Setup parameters for call to function printf
   \   000052   12....       LCALL     ?Subroutine12 & 0xFFFF
    567              }
   \                     ??CrossCallReturnLabel_24:
   \   000055   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000058   12....       LCALL     ?Subroutine16 & 0xFFFF
   \                     ??CrossCallReturnLabel_42:
   \   00005B   12....       LCALL     ?DEALLOC_XSTACK8
   \   00005E   05..         INC       ?V3
   \                     ??AT_DoorLock_Handle_Rsp_1:
   \   000060   E5..         MOV       A,?V3
   \   000062   C3           CLR       C
   \   000063   95..         SUBB      A,?V6
   \   000065   40EB         JC        ??AT_DoorLock_Handle_Rsp_2
    568              printf("\r\n");
   \   000067                ; Setup parameters for call to function printf
   \   000067   7A..         MOV       R2,#`?<Constant "\\r\\n">` & 0xff
   \   000069   7B..         MOV       R3,#(`?<Constant "\\r\\n">` >> 8) & 0xff
   \   00006B   12....       LCALL     `??printf::?relay`; Banked call to: printf
    569            }
    570            else
    571            {
    572              printf("\r\n| up |error|%02d bytes|: ", len);
    573              for(i=0; i<len; i++)
    574              {
    575                printf("%02X ", buf[i]);
    576              }
    577              printf("\r\n\r\n");
    578              status = ZFailure;
    579            }
    580          
    581            if(status == ZFailure)
    582              return status;
    583          
    584            switch(buf[0])
   \   00006E   8E82         MOV       DPL,R6
   \   000070   8F83         MOV       DPH,R7
   \   000072   E0           MOVX      A,@DPTR
   \   000073   14           DEC       A
   \   000074   602C         JZ        ??AT_DoorLock_Handle_Rsp_3
   \   000076   14           DEC       A
   \   000077   6029         JZ        ??AT_DoorLock_Handle_Rsp_3
   \   000079   24FE         ADD       A,#-0x2
   \   00007B   6025         JZ        ??AT_DoorLock_Handle_Rsp_3
   \   00007D   24FA         ADD       A,#-0x6
   \   00007F   7003         JNZ       $+5
   \   000081   02....       LJMP      ??AT_DoorLock_Handle_Rsp_4 & 0xFFFF
   \   000084   244A         ADD       A,#0x4a
   \   000086   7003         JNZ       $+5
   \   000088   02....       LJMP      ??AT_DoorLock_Handle_Rsp_5 & 0xFFFF
   \   00008B   24F2         ADD       A,#-0xe
   \   00008D   7003         JNZ       $+5
   \   00008F   02....       LJMP      ??AT_DoorLock_Handle_Rsp_4 & 0xFFFF
   \   000092   14           DEC       A
   \   000093   7003         JNZ       $+5
   \   000095   02....       LJMP      ??AT_DoorLock_Handle_Rsp_6 & 0xFFFF
   \   000098   24EF         ADD       A,#-0x11
   \   00009A   7003         JNZ       $+5
   \   00009C   02....       LJMP      ??AT_DoorLock_Handle_Rsp_7 & 0xFFFF
   \   00009F   02....       LJMP      ??AT_DoorLock_Handle_Rsp_8 & 0xFFFF
    585            {
    586              case CMD_DOORLOCK_UNLOCK:
    587              case CMD_DOORLOCK_LOCK:
    588              case CMD_DOORLOCK_SET_TEMPORARY_PIN:
    589                status = AT_DoorLock_Rsp( buf, len );
   \                     ??AT_DoorLock_Handle_Rsp_3:
   \   0000A2   7402         MOV       A,#0x2
   \   0000A4   12....       LCALL     ?XSTACK_DISP0_8
   \   0000A7   E4           CLR       A
   \   0000A8   F0           MOVX      @DPTR,A
   \   0000A9   A3           INC       DPTR
   \   0000AA   F0           MOVX      @DPTR,A
   \   0000AB   740A         MOV       A,#0xa
   \   0000AD   12....       LCALL     ?XSTACK_DISP0_8
   \   0000B0   7402         MOV       A,#0x2
   \   0000B2   F0           MOVX      @DPTR,A
   \   0000B3   740B         MOV       A,#0xb
   \   0000B5   12....       LCALL     ?XSTACK_DISP0_8
   \   0000B8   740B         MOV       A,#0xb
   \   0000BA   F0           MOVX      @DPTR,A
   \   0000BB   75..FF       MOV       ?V0,#-0x1
   \   0000BE   75..01       MOV       ?V1,#0x1
   \   0000C1   8E82         MOV       DPL,R6
   \   0000C3   8F83         MOV       DPH,R7
   \   0000C5   E0           MOVX      A,@DPTR
   \   0000C6   14           DEC       A
   \   0000C7   6051         JZ        ??AT_DoorLock_Handle_Rsp_9
   \   0000C9   14           DEC       A
   \   0000CA   6049         JZ        ??AT_DoorLock_Handle_Rsp_10
   \   0000CC   24FE         ADD       A,#-0x2
   \   0000CE   7056         JNZ       ??AT_DoorLock_Handle_Rsp_11
   \   0000D0   75..1A       MOV       ?V0,#0x1a
   \   0000D3   A3           INC       DPTR
   \   0000D4   E0           MOVX      A,@DPTR
   \   0000D5   14           DEC       A
   \   0000D6   604B         JZ        ??AT_DoorLock_Handle_Rsp_12
   \   0000D8   24FA         ADD       A,#-0x6
   \   0000DA   704A         JNZ       ??AT_DoorLock_Handle_Rsp_11
   \   0000DC   75..E0       MOV       ?V1,#-0x20
   \   0000DF   8045         SJMP      ??AT_DoorLock_Handle_Rsp_11
   \                     ??AT_DoorLock_Handle_Rsp_0:
   \   0000E1                ; Setup parameters for call to function printf
   \   0000E1   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   0000E4   7A..         MOV       R2,#`?<Constant "\\r\\n| up |error|%02d by...">` & 0xff
   \   0000E6   7B..         MOV       R3,#(`?<Constant "\\r\\n| up |error|%02d by...">` >> 8) & 0xff
   \   0000E8   12....       LCALL     ??Subroutine22_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_47:
   \   0000EB   12....       LCALL     ?DEALLOC_XSTACK8
   \   0000EE   75..00       MOV       ?V3,#0x0
   \   0000F1   800E         SJMP      ??AT_DoorLock_Handle_Rsp_13
   \                     ??AT_DoorLock_Handle_Rsp_14:
   \   0000F3                ; Setup parameters for call to function printf
   \   0000F3   12....       LCALL     ?Subroutine12 & 0xFFFF
   \                     ??CrossCallReturnLabel_25:
   \   0000F6   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   0000F9   12....       LCALL     ?Subroutine16 & 0xFFFF
   \                     ??CrossCallReturnLabel_43:
   \   0000FC   12....       LCALL     ?DEALLOC_XSTACK8
   \   0000FF   05..         INC       ?V3
   \                     ??AT_DoorLock_Handle_Rsp_13:
   \   000101   E5..         MOV       A,?V3
   \   000103   C3           CLR       C
   \   000104   95..         SUBB      A,?V6
   \   000106   40EB         JC        ??AT_DoorLock_Handle_Rsp_14
   \   000108                ; Setup parameters for call to function printf
   \   000108   7A..         MOV       R2,#`?<Constant "\\r\\n\\r\\n">` & 0xff
   \   00010A   7B..         MOV       R3,#(`?<Constant "\\r\\n\\r\\n">` >> 8) & 0xff
   \   00010C   12....       LCALL     `??printf::?relay`; Banked call to: printf
   \   00010F   75..01       MOV       ?V2,#0x1
   \   000112   02....       LJMP      ??AT_DoorLock_Handle_Rsp_8 & 0xFFFF
   \                     ??AT_DoorLock_Handle_Rsp_10:
   \   000115   75..00       MOV       ?V0,#0x0
   \   000118   8009         SJMP      ??AT_DoorLock_Handle_Rsp_12
   \                     ??AT_DoorLock_Handle_Rsp_9:
   \   00011A   75..01       MOV       ?V0,#0x1
   \   00011D   A3           INC       DPTR
   \   00011E   E0           MOVX      A,@DPTR
   \   00011F   6401         XRL       A,#0x1
   \   000121   7003         JNZ       ??AT_DoorLock_Handle_Rsp_11
   \                     ??AT_DoorLock_Handle_Rsp_12:
   \   000123   75..00       MOV       ?V1,#0x0
   \                     ??AT_DoorLock_Handle_Rsp_11:
   \   000126                ; Setup parameters for call to function bdb_getZCLFrameCounter
   \   000126   12....       LCALL     `??bdb_getZCLFrameCounter::?relay`; Banked call to: bdb_getZCLFrameCounter
   \   000129   E9           MOV       A,R1
   \   00012A                ; Setup parameters for call to function zclClosures_SendDoorLockStatusResponse
   \   00012A   F5..         MOV       ?V2,A
   \   00012C   78..         MOV       R0,#?V2
   \   00012E   12....       LCALL     ?PUSH_XSTACK_I_ONE
   \   000131   75..01       MOV       ?V2,#0x1
   \   000134   78..         MOV       R0,#?V2
   \   000136   12....       LCALL     ?PUSH_XSTACK_I_ONE
   \   000139   AD..         MOV       R5,?V1
   \   00013B   AC..         MOV       R4,?V0
   \   00013D   7404         MOV       A,#0x4
   \   00013F   12....       LCALL     ?XSTACK_DISP101_8
   \   000142   790A         MOV       R1,#0xa
   \   000144   12....       LCALL     `??zclClosures_SendDoorLockStatusResponse::?rela`; Banked call to: zclClosures_SendDoorLockStatusResponse
   \   000147   7402         MOV       A,#0x2
   \   000149   12....       LCALL     ?DEALLOC_XSTACK8
   \   00014C   E9           MOV       A,R1
   \   00014D   FE           MOV       R6,A
   \   00014E                ; Setup parameters for call to function printf
   \   00014E   F5..         MOV       ?V0,A
   \   000150   75..00       MOV       ?V1,#0x0
   \   000153   78..         MOV       R0,#?V0
   \   000155   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000158   7A..         MOV       R2,#`?<Constant "AF, AT_DoorLock_Rsp: ...">` & 0xff
   \   00015A   7B..         MOV       R3,#(`?<Constant "AF, AT_DoorLock_Rsp: ...">` >> 8) & 0xff
   \   00015C   12....       LCALL     ??Subroutine22_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_48:
   \   00015F   12....       LCALL     ?DEALLOC_XSTACK8
   \   000162   8E..         MOV       ?V2,R6
    590                break;
   \   000164   8036         SJMP      ??AT_DoorLock_Handle_Rsp_8
    591          
    592              case CMD_DOORLOCK_EVT_UPLOAD:
    593              case CMD_DOORLOCK_WAKE_UP:
    594                status = AT_DoorLock_Upload( buf, len );
   \                     ??AT_DoorLock_Handle_Rsp_4:
   \   000166                ; Setup parameters for call to function AT_DoorLock_Upload
   \   000166   A9..         MOV       R1,?V6
   \   000168   EE           MOV       A,R6
   \   000169   FA           MOV       R2,A
   \   00016A   EF           MOV       A,R7
   \   00016B   FB           MOV       R3,A
   \   00016C   12....       LCALL     `??AT_DoorLock_Upload::?relay`; Banked call to: AT_DoorLock_Upload
   \   00016F   E9           MOV       A,R1
   \   000170   F5..         MOV       ?V2,A
    595                break;
   \   000172   8028         SJMP      ??AT_DoorLock_Handle_Rsp_8
    596          
    597              case CMD_DOORLOCK_KEY_SHORT_PRESS:
    598                bdb_resetLocalAction(); // factory new
    599                break;
    600          
    601              case CMD_DOORLOCK_RESET_TO_FACT_NEW:
    602                break;
    603          
    604              case CMD_DOORLOCK_MATCH:
    605                status = AT_DoorLock_Ack( buf, len );
   \                     ??AT_DoorLock_Handle_Rsp_6:
   \   000174   90....       MOV       DPTR,#`?<Constant {224, 31}>`
   \   000177   AC..         MOV       R4,?XSP + 0
   \   000179   AD..         MOV       R5,?XSP + 1
   \   00017B   7402         MOV       A,#0x2
   \   00017D   12....       LCALL     ?MOVE_LONG8_XDATA_XDATA
   \   000180                ; Setup parameters for call to function AT_single_bus_send_buf
   \   000180   7902         MOV       R1,#0x2
   \   000182   AA..         MOV       R2,?XSP + 0
   \   000184   AB..         MOV       R3,?XSP + 1
   \   000186   12....       LCALL     `??AT_single_bus_send_buf::?relay`; Banked call to: AT_single_bus_send_buf
    606                break;
   \   000189   8011         SJMP      ??AT_DoorLock_Handle_Rsp_8
    607          
    608              case CMD_DOORLOCK_RESET_TO_FACT_NEW_ALL:
    609                if((len==4) && (buf[3]==0x1F))
   \                     ??AT_DoorLock_Handle_Rsp_7:
   \   00018B   7404         MOV       A,#0x4
   \   00018D   65..         XRL       A,?V6
   \   00018F   700B         JNZ       ??AT_DoorLock_Handle_Rsp_8
   \   000191   A3           INC       DPTR
   \   000192   A3           INC       DPTR
   \   000193   A3           INC       DPTR
   \   000194   E0           MOVX      A,@DPTR
   \   000195   641F         XRL       A,#0x1f
   \   000197   7003         JNZ       ??AT_DoorLock_Handle_Rsp_8
    610                  bdb_resetLocalAction();//factory new
   \                     ??AT_DoorLock_Handle_Rsp_5:
   \   000199                ; Setup parameters for call to function bdb_resetLocalAction
   \   000199   12....       LCALL     `??bdb_resetLocalAction::?relay`; Banked call to: bdb_resetLocalAction
    611                break;
    612          
    613              default:
    614                break;
    615            }
    616          
    617            return status;
   \                     ??AT_DoorLock_Handle_Rsp_8:
   \   00019C   A9..         MOV       R1,?V2
   \   00019E   740E         MOV       A,#0xe
   \   0001A0   12....       LCALL     ?DEALLOC_XSTACK8
   \   0001A3                REQUIRE ?Subroutine1
   \   0001A3                ; // Fall through to label ?Subroutine1
    618          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine16:
   \   000000   AA..         MOV       R2,?V0
   \   000002   AB..         MOV       R3,?V1
   \   000004                REQUIRE ??Subroutine22_0
   \   000004                ; // Fall through to label ??Subroutine22_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine12:
   \   000000   A8..         MOV       R0,?V3
   \   000002   EE           MOV       A,R6
   \   000003   28           ADD       A,R0
   \   000004   F582         MOV       DPL,A
   \   000006   E4           CLR       A
   \   000007   3F           ADDC      A,R7
   \   000008   F583         MOV       DPH,A
   \   00000A   E0           MOVX      A,@DPTR
   \   00000B   F5..         MOV       ?V4,A
   \   00000D   78..         MOV       R0,#?V4
   \   00000F   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine11:
   \   000000   EA           MOV       A,R2
   \   000001   F0           MOVX      @DPTR,A
   \   000002   A3           INC       DPTR
   \   000003   EB           MOV       A,R3
   \   000004   F0           MOVX      @DPTR,A
   \   000005   8A82         MOV       DPL,R2
   \   000007   8B83         MOV       DPH,R3
   \   000009   E4           CLR       A
   \   00000A   F0           MOVX      @DPTR,A
   \   00000B                ; Setup parameters for call to function bdb_getZCLFrameCounter
   \   00000B                ; Setup parameters for call to function bdb_getZCLFrameCounter
   \   00000B   12....       LCALL     `??bdb_getZCLFrameCounter::?relay`; Banked call to: bdb_getZCLFrameCounter
   \   00000E   E9           MOV       A,R1
   \   00000F   22           RET

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AF, AT_DoorLock_Rsp: ...">`:
   \   000000   41462C20     DB "AF, AT_DoorLock_Rsp: 0x%02X\015\012"
   \            41545F44
   \            6F6F724C
   \            6F636B5F
   \            5273703A
   \            20307825
   \            3032580D
   \            0A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AF, EVENT_FLAG_OPERAT...">`:
   \   000000   41462C20     DB "AF, EVENT_FLAG_OPERATION: 0x%02X\015\012"
   \            4556454E
   \            545F464C
   \            41475F4F
   \            50455241
   \            54494F4E
   \            3A203078
   \            25303258
   \            0D0A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AF, EVENT_FLAG_PROGRA...">`:
   \   000000   41462C20     DB "AF, EVENT_FLAG_PROGRAMMING: 0x%02X\015\012"
   \            4556454E
   \            545F464C
   \            41475F50
   \            524F4752
   \            414D4D49
   \            4E473A20
   \            30782530
   \            32580D0A
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AF, EVENT_FLAG_UNKNOW...">`:
   \   000000   41462C20     DB "AF, EVENT_FLAG_UNKNOWN: 0x%02X\015\012"
   \            4556454E
   \            545F464C
   \            41475F55
   \            4E4B4E4F
   \            574E3A20
   \            30782530
   \            32580D0A
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {224, 31}>`:
   \   000000   E0           DB 224
   \   000001   1F           DB 31

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "| up |right|%02d byte...">`:
   \   000000   7C207570     DB "| up |right|%02d bytes|: "
   \            207C7269
   \            6768747C
   \            25303264
   \            20627974
   \            65737C3A
   \            2000    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "%02X ">`:
   \   000000   25303258     DB "%02X "
   \            2000    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "\\r\\n">`:
   \   000000   0D0A00       DB "\015\012"

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "\\r\\n| up |error|%02d by...">`:
   \   000000   0D0A7C20     DB "\015\012| up |error|%02d bytes|: "
   \            7570207C
   \            6572726F
   \            727C2530
   \            32642062
   \            79746573
   \            7C3A2000

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "\\r\\n\\r\\n">`:
   \   000000   0D0A0D0A     DB "\015\012\015\012"
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_12c:
   \   000000   2C010000     DD 300

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_3a98:
   \   000000   983A0000     DD 15000

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_4650:
   \   000000   50460000     DD 18000

   Maximum stack usage in bytes:

   ISTACK XSTACK Function
   ------ ------ --------
      0     31   AT_DoorLock_Handle_Rsp
        0     29   -> AT_DoorLock_Upload
        0     29   -> AT_single_bus_send_buf
        0     29   -> bdb_getZCLFrameCounter
        0     29   -> bdb_resetLocalAction
        0     29   -> printf
        0     31   -> printf
        0     29   -> sum_check
        0     31   -> zclClosures_SendDoorLockStatusResponse
      2      0   AT_DoorLock_Init
        2      0   -> AT_pwr_single_bus_init
        2      0   -> AT_single_bus_init
      1     15   AT_DoorLock_Lock
        0     12   -> AT_single_bus_send_buf
        0     12   -> osal_mem_alloc
        0     12   -> osal_mem_free
        0     15   -> osal_memcpy
        0     12   -> osal_memset
        0     12   -> sum_check
      1     18   AT_DoorLock_SetTemporaryPin_Req
        0     15   -> AT_single_bus_send_buf
        0     15   -> osal_mem_alloc
        0     15   -> osal_mem_free
        0     18   -> osal_memcpy
        0     15   -> osal_memset
        0     15   -> sum_check
      1     15   AT_DoorLock_Unlock
        0     12   -> AT_single_bus_send_buf
        0     12   -> osal_mem_alloc
        0     12   -> osal_mem_free
        0     15   -> osal_memcpy
        0     12   -> osal_memset
        0     12   -> sum_check
      1     98   AT_DoorLock_Upload
        0     65   -> NLME_SetPollRate
        0     65   -> bdb_getZCLFrameCounter
        0     65   -> osal_ConvertUTCSecs
        0     65   -> osal_mem_alloc
        0     65   -> osal_mem_free
        0     65   -> osal_set_event
        0     69   -> osal_start_timerEx
        0     65   -> osal_stop_timerEx
        0     67   -> printf
        0     67   -> zclClosures_SendDoorLockOperationEventNotification
        0     67   -> zclClosures_SendDoorLockProgrammingEventNotification
      0     38   sum_check


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       6  ?<Constant "%02X ">
      30  ?<Constant "AF, AT_DoorLock_Rsp: ...">
      35  ?<Constant "AF, EVENT_FLAG_OPERAT...">
      37  ?<Constant "AF, EVENT_FLAG_PROGRA...">
      33  ?<Constant "AF, EVENT_FLAG_UNKNOW...">
       3  ?<Constant "\r\n">
       5  ?<Constant "\r\n\r\n">
      28  ?<Constant "\r\n| up |error|%02d by...">
      26  ?<Constant "| up |right|%02d byte...">
       2  ?<Constant {224, 31}>
      10  ??Subroutine21_0
       6  ??Subroutine22_0
       5  ?Subroutine0
       5  ?Subroutine1
      17  ?Subroutine10
      16  ?Subroutine11
      16  ?Subroutine12
       4  ?Subroutine13
      10  ?Subroutine14
       7  ?Subroutine15
       4  ?Subroutine16
      12  ?Subroutine17
       5  ?Subroutine18
      13  ?Subroutine19
      33  ?Subroutine2
      11  ?Subroutine20
      28  ?Subroutine3
      16  ?Subroutine4
      18  ?Subroutine5
      10  ?Subroutine6
      15  ?Subroutine7
      12  ?Subroutine8
      16  ?Subroutine9
     419  AT_DoorLock_Handle_Rsp
      17  AT_DoorLock_Init
     107  AT_DoorLock_Lock
     246  AT_DoorLock_SetTemporaryPin_Req
     128  AT_DoorLock_Unlock
     893  AT_DoorLock_Upload
       4  __Constant_12c
       4  __Constant_3a98
       4  __Constant_4650
      42  sum_check
      42  -- Other

 
 2 141 bytes in segment BANKED_CODE
    42 bytes in segment BANK_RELAYS
   217 bytes in segment XDATA_ROM_C
 
    42 bytes of CODE     memory
   205 bytes of CONST    memory (+ 12 bytes shared)
 2 141 bytes of HUGECODE memory

Errors: none
Warnings: none
